<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>AIYOYO - Tools</title><link href="https://aiyoyo20.github.io/" rel="alternate"></link><link href="https://aiyoyo20.github.io/feeds/tools.atom.xml" rel="self"></link><id>https://aiyoyo20.github.io/</id><updated>2020-09-03T10:20:00+08:00</updated><entry><title>笔记软件对比</title><link href="https://aiyoyo20.github.io/articles/bi-ji-ruan-jian-dui-bi.html" rel="alternate"></link><published>2020-09-03T10:20:00+08:00</published><updated>2020-09-03T10:20:00+08:00</updated><author><name>FING</name></author><id>tag:aiyoyo20.github.io,2020-09-03:/articles/bi-ji-ruan-jian-dui-bi.html</id><summary type="html">&lt;p&gt;陆陆续续使用了不少软件记录笔记，从最初的记事本，word 再到现在用过的各种 markdown 软件，各有特色，做个总结吧，希望对没有接触过的有个直观的了解。&lt;/p&gt;
&lt;p&gt;有的软件是早期的时候使用的，所以可能会出现上面写的一些问题在下载的最新版本中解决了优化了的情况。仅为自己当时的主观感受，不代表产品的实际，毕竟，每个人的喜好不一样。&lt;/p&gt;
&lt;h1&gt;Markdown&lt;/h1&gt;
&lt;h2&gt;1. Typora&lt;/h2&gt;
&lt;p&gt;使用的第一款 markdown 编辑器，使用过程还是挺舒适的，在最开始不太熟悉 markdown 语法又想要 markdwon 格式的时候使用的，但也由于这样，在较长一段时间内才完全熟练 markdwon 的语法，可以说在一定程度上的依赖反而造成了拖累。&lt;/p&gt;
&lt;p&gt;而且这种所见即所得的在其他的很多产品里都没有，最后还是放弃了。&lt;/p&gt;
&lt;p&gt;&lt;img src="images/Note_typora.png" alt="pic_1_typora" width=900px /&gt;&lt;/p&gt;
&lt;p&gt;使用感受：
主题多样可切换，
'所见即所得'，写作时直接预览，这个各有看法吧，有的人说是简单主义，是个优点，而我更喜欢从代码编写。
只能创建md文件，主要阅读的是md文件和一些文本文件，其他的无法读取或打开为乱码。
可以打开多级文件夹，但是无法在软件内创建文件夹。&lt;/p&gt;
&lt;p&gt;总结：如果单单作为一个 markdown …&lt;/p&gt;</summary><content type="html">&lt;p&gt;陆陆续续使用了不少软件记录笔记，从最初的记事本，word 再到现在用过的各种 markdown 软件，各有特色，做个总结吧，希望对没有接触过的有个直观的了解。&lt;/p&gt;
&lt;p&gt;有的软件是早期的时候使用的，所以可能会出现上面写的一些问题在下载的最新版本中解决了优化了的情况。仅为自己当时的主观感受，不代表产品的实际，毕竟，每个人的喜好不一样。&lt;/p&gt;
&lt;h1&gt;Markdown&lt;/h1&gt;
&lt;h2&gt;1. Typora&lt;/h2&gt;
&lt;p&gt;使用的第一款 markdown 编辑器，使用过程还是挺舒适的，在最开始不太熟悉 markdown 语法又想要 markdwon 格式的时候使用的，但也由于这样，在较长一段时间内才完全熟练 markdwon 的语法，可以说在一定程度上的依赖反而造成了拖累。&lt;/p&gt;
&lt;p&gt;而且这种所见即所得的在其他的很多产品里都没有，最后还是放弃了。&lt;/p&gt;
&lt;p&gt;&lt;img src="images/Note_typora.png" alt="pic_1_typora" width=900px /&gt;&lt;/p&gt;
&lt;p&gt;使用感受：
主题多样可切换，
'所见即所得'，写作时直接预览，这个各有看法吧，有的人说是简单主义，是个优点，而我更喜欢从代码编写。
只能创建md文件，主要阅读的是md文件和一些文本文件，其他的无法读取或打开为乱码。
可以打开多级文件夹，但是无法在软件内创建文件夹。&lt;/p&gt;
&lt;p&gt;总结：如果单单作为一个 markdown 编辑器是很优秀的，大多数的功能都有，但是如果想要当作一个笔记，管理一个系列的文件显然是不够的，而这也正是我放弃的原因，后期的东西原来越多，日记，笔记等等，同步性等等，typora 已不能满足这些。&lt;/p&gt;
&lt;p&gt;全平台：Windows、Mac、Linux
语言：多语言，中英日等
官网：&lt;a href="https://typora.io/"&gt;https://typora.io/&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;2、Obsidian&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;Obsidian 是一个功能强大的知识管理软件,是一款功能强大的带有关系图谱功能的双向链笔记。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;img src="images/Note_obsidian.png" alt="pic_2_obsidian" width=900px /&gt;&lt;/p&gt;
&lt;p&gt;可以安装一些插件，比如字数统计啥的。
建立了社区进行交流，所以主题很多，各种使用也是满意的。
关键在同时打开代码模式和预览模式的时候，滑动是同步的，需要修改的话很方便。
但是某天我发现我在系统设置了利于编写代码的字体，里面却没有任何变化。仔细寻找了半天也没有发现可以自定义的地方。&lt;/p&gt;
&lt;p&gt;全平台：Windows、Mac、Linux
语言：语言挺多的，主要的语言都有
官网：https://obsidian.md/
Github项目地址：&lt;a href="https://github.com/obsidianmd/obsidian-releases/releases"&gt;https://github.com/obsidianmd/obsidian-releases/releases&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;3、Joplin&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;Joplin 是一款全平台的开源且完全免费的笔记应用，同时也是一个高效的 To-Do 待办事项工具和生产力工具。你可以用标签或笔记本进行分类整理，笔记支持 Markdown，可实现全文搜索，并且你还可以使用自己喜欢的第三方外置编辑器如 Typora、VIM 来编辑笔记，以获得更好的写作体验。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;img src="images/Note_Joplin.png" alt="pic_3_joplin" width=900px /&gt;&lt;/p&gt;
&lt;p&gt;商业产品，7、8个主题可切换，支持多种云，保存更方便。
可以免费使用，不影响。
看着都挺好的，但不知道为什么就是没有心动的感觉。&lt;/p&gt;
&lt;p&gt;多平台：Windows、macOS、Linux、iOS、Android 等主流桌面平台和手机平台都提供有客户端，甚至还提供了命令行版本
语言：很多
官网：&lt;a href="https://joplinapp.org/"&gt;https://joplinapp.org/&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;4、Marktext&lt;/h2&gt;
&lt;p&gt;有人将其称之为未来的 markdown 软件。&lt;/p&gt;
&lt;p&gt;&lt;img src="images/Note_marktext.png" alt="marktext" width=900px /&gt;&lt;/p&gt;
&lt;p&gt;即可所见即所得，也可通过快捷键切换预览与编辑。
关键可在里面为其编辑与预览指定字体。&lt;/p&gt;
&lt;p&gt;初使用是不错的，但是在 mac 和 windows 上没有测试，在现在的linux上会有卡顿的情况，快捷键的延迟很高，甚至于没有响应。只能期待于以后的优化了再使用。&lt;/p&gt;
&lt;p&gt;全平台：Windows、Mac、Linux
语言：目前只有英语
官网：&lt;a href="https://marktext.app/"&gt;https://marktext.app/&lt;/a&gt;
Github项目地址：&lt;a href="https://github.com/marktext/marktext/releases"&gt;https://github.com/marktext/marktext/releases&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;5. Vnote&lt;/h2&gt;
&lt;p&gt;免费的开源笔记软件。VNote 专注于 Markdown 的编辑与阅读，以提供舒适的编辑体验为设计目标。
Vnote是一个大神也是市面上找不到很满足于自己的需求的软件，利用自己的闲余时间自己做的。
作者自己也说了，借鉴了不少其他优秀的软件，所以整体的界面是很美观优雅的。&lt;/p&gt;
&lt;p&gt;老版本：
&lt;img src="images/Note_vnote_old.png" alt="pic_old_Vnote" width=900px /&gt;&lt;/p&gt;
&lt;p&gt;新版本：
&lt;img src="images/Note_vnote_new.png" alt="pic_new_Vnote" width=900px /&gt;&lt;/p&gt;
&lt;p&gt;可定制性较强，界面支持小部件拖拽移动，放在自己喜欢的地方，调整为自己喜欢、习惯的布局。
支持图片预览，且插入图片的图片可以通过内定的方式设置大小。方式为在写入图片地址后添加一个空格后写上设置的大小，如（=900x），但是这种方式仅仅对于使用了相同内置环境的编辑器有效，为了更兼容，在后期将所有需要设置大小的图片都改为了使用&lt;code&gt;&amp;lt;img /&amp;gt;&lt;/code&gt;标签去设置。但是需要注意这种方式不是 它的默认检测图片的范围内，所以修改完之后提示有图片不再使用，是否放入回收站，而实际上是使用的。&lt;/p&gt;
&lt;p&gt;整个使用过程从 typora 迁移过来并没有很费劲，反而觉得在使用中由于是从代码编写，所以对 markdown 的语法有了更深刻的理解，也为了一些排版啥的去逐渐学习使用一些更为高级的语法使得自己的笔记更加美观与实用。
如果有添加在目录下但是不使用的照片会提示是否删除，删除也不是直接删除，他自己会创建一个以日期为名的文件夹为回收站去另存，这个其实感觉可以定义为自己检查而不是自动检查，有时候由于编写打乱了图片链接的代码便会马上提示显得很麻烦，比较影响使用体验。&lt;/p&gt;
&lt;p&gt;在后期版本更新的时候对界面做了大改，精简很多，但是这时自己的笔记已经较多了，最最最明显的一个问题暴露出来，早期的版本不支持目录，当较多的时候需要分类就不够用了，后期的版本可以了，但是在导入其他的笔记时，没有办法导入目录中的目录。&lt;/p&gt;
&lt;p&gt;新版本修复了这个问题。所以又回来使用了。&lt;/p&gt;
&lt;p&gt;全平台：Windows、Mac、Linux
语言：中英日三种语言可选择
官网:  &lt;a href="https://tamlok.github.io/vnote"&gt;https://tamlok.github.io/vnote&lt;/a&gt;
Github项目地址:  &lt;a href="https://github.com/tamlok/vnote"&gt;https://github.com/tamlok/vnote&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;Others&lt;/h1&gt;
&lt;h2&gt;1  . Gridea&lt;/h2&gt;
&lt;p&gt;Gridea 是一个静态博客写作客户端，帮助你更容易地构建并管理博客或任何静态站点。
想要体验博客那种感觉？没有服务器？懒得在本地搭建环境？这个软件可以让你在客户端写作然后在本地网页可以预览效果。&lt;/p&gt;
&lt;p&gt;&lt;img src="images/Note_Gridea.png" alt="pic_3_Gridea" width=900px /&gt;&lt;/p&gt;
&lt;p&gt;Markdown：知道你钟爱 Markdown 写作，我们也是
快且安全：Gridea 所有文件都在你的本地，构建为更快更安全的静态网站，无需管理数据库，向 Wordpress 说拜拜
简而不凡：简单几步即可搭建网站。无论博客抑或企业站点，强大的自定义能力，轻松驾驭&lt;/p&gt;
&lt;p&gt;全平台：Windows、Mac、Linux
语言：中英两种语言
Github项目地址:  &lt;a href="https://github.com/getgridea/gridea/"&gt;https://github.com/getgridea/gridea/&lt;/a&gt;
官网地址:  &lt;a href="https://gridea.dev/docs/"&gt;https://gridea.dev/docs/&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;2. Trilium&lt;/h2&gt;
&lt;p&gt;超高自由度的个人知识库&lt;/p&gt;
&lt;p&gt;一开始自己看到他的演示文档中有目录存在，正常理解也应该是存在目录的，所以一开始尝试去添加一个自己的根文件夹，但是一直没找到，后来仔细去看了官方文档才了解到，他是没有明确指明目录结构的，但是构建的每一个（文档、代码、日记等等）都可以有无限的子节点，其实也就是相当于是有目录的，而且每个目录还都可以去详细的介绍是用来做什么的，更容易理解，去除了担心时间太久而忘记这个'目录是用来做什么的'，不用去多写一个介绍文档&lt;/p&gt;
&lt;p&gt;&lt;img src="images/Note_Trilium.png" alt="pic_4_Trilium" width=900px /&gt;&lt;/p&gt;
&lt;p&gt;可加密，轻盈简洁，能让信息不受阻碍直接呈现在眼前，高自由度
并且有一个配套的插件可以在网页中截图保存、保存整个网页、即时创建文本写入想要记下的。
另外有一个服务器端的，有需要的可以布置到自己的服务器或者自己额外的电脑设备上，就可以通过网页访问了，在保障同步性的情况下完全不用担忧隐私安全问题。
插件地址：&lt;a href="https://github.com/zadam/trilium-web-clipper/"&gt;https://github.com/zadam/trilium-web-clipper/&lt;/a&gt;
使用的人并不是很多，除官网有介绍外，目前只找到一片日文的教程，且为19年的，配合谷歌翻译插件基本能了解大概怎么使用。
&lt;a href="https://gigazine.net/news/20190118-trilium/"&gt;使用教程&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;以前用 markdown 去记笔记什么的，即时快捷方便，
但是后期越来越多之后弊端也开始体验出来，单个文件不可能完整的去记录下所有的东西，而且不断的填充也不利于阅读，而不断的开新篇的话相互之间的关联很难做到完美
也用于写日记，但是由于种种原因加密这一块是必须的，单弄一个软件来加密显得很笨拙而且麻烦，每一次编写但得反复的解密加密
而 Trilium 很好的解决了上面的问题，且项目开源，安全性应该是有保障的。
打造一个个人的知识库，在写作时可以不断加深巩固，也利于查缺补漏。
可以记一些自己的临时想法，也可以随手贴上自己看到的一篇好文，自己对一部剧的理解，等等等等。&lt;/p&gt;
&lt;p&gt;全平台：Windows、Mac、Linux
语言：目前只有英文的，有个人用户对win64的做了简单的汉化并打包了的，可以自行搜索
Github项目地址:  &lt;a href="https://github.com/zadam/trilium"&gt;https://github.com/zadam/trilium&lt;/a&gt;&lt;/p&gt;</content><category term="Tools"></category><category term="linux"></category></entry><entry><title>博客使用经历</title><link href="https://aiyoyo20.github.io/articles/bo-ke-shi-yong-jing-li.html" rel="alternate"></link><published>2020-09-03T10:20:00+08:00</published><updated>2020-09-03T10:20:00+08:00</updated><author><name>FING</name></author><id>tag:aiyoyo20.github.io,2020-09-03:/articles/bo-ke-shi-yong-jing-li.html</id><content type="html">&lt;h1&gt;wordpress&lt;/h1&gt;
&lt;h1&gt;Github Page&lt;/h1&gt;
&lt;h2&gt;静态模板系统选择&lt;/h2&gt;
&lt;p&gt;Ruby 编写的 Jekyll
Node.js 编写的 Hexo
Go 编写的 Hugo
Python 编写的 Pelican&lt;/p&gt;
&lt;h3&gt;Gridea&lt;/h3&gt;
&lt;p&gt;更人性化的 Gridea，在 windows 下能够全局代理还好，在 linux 下同步因为墙的原因，常常同步失败&lt;/p&gt;</content><category term="Tools"></category><category term="linux"></category></entry><entry><title>chrome</title><link href="https://aiyoyo20.github.io/articles/chrome.html" rel="alternate"></link><published>2020-09-03T10:20:00+08:00</published><updated>2020-09-03T10:20:00+08:00</updated><author><name>FING</name></author><id>tag:aiyoyo20.github.io,2020-09-03:/articles/chrome.html</id><summary type="html">&lt;h1&gt;插件&lt;/h1&gt;
&lt;h2&gt;Adblock&lt;/h2&gt;
&lt;p&gt;屏蔽广告&lt;/p&gt;
&lt;h2&gt;AdGuard AdBlocker&lt;/h2&gt;
&lt;p&gt;屏蔽广告&lt;/p&gt;
&lt;h2&gt;Bookmark Sidebar&lt;/h2&gt;
&lt;p&gt;收藏夹侧边栏显示，且打开可设置为在新标签打开
原来的收藏夹在上面会占用一定的空间，且如果一直显示有时候在给别人展示的时候，会比较尴尬，快捷键去打开也比较麻烦&lt;/p&gt;
&lt;h2&gt;Clean Master&lt;/h2&gt;
&lt;p&gt;每次进入 Setting 去清除缓存以及一些垃圾的时候总是很繁琐，这个插件可以简化这些操作，一键清理&lt;/p&gt;
&lt;h2&gt;Explain and Send Screenshots&lt;/h2&gt;
&lt;p&gt;页面截图工具，可截取整个网页或者部分（如视频的暂停）&lt;/p&gt;
&lt;h2&gt;fatkun图片批量下载&lt;/h2&gt;
&lt;p&gt;很强大的图片下载器，一张张的图片下载很麻烦，这个可以快速选择下载图片并且保存位置可修改，选择时可以按自己设定的大小选择，快速去除不符合要求的图片&lt;/p&gt;
&lt;h2&gt;fehelpr(前端助手)&lt;/h2&gt;
&lt;p&gt;里面有很多小工具很实用&lt;/p&gt;
&lt;h2&gt;onetab&lt;/h2&gt;
&lt;p&gt;标签打开太多，占用大量运行空间，但是暂时用不到，或者看不完，又不必完全保存为收藏标签，这个插件可以很好的保存标签页，且可导出导入，很方便&lt;/p&gt;
&lt;h2&gt;Print Friendly &amp;amp; PDF&lt;/h2&gt;
&lt;p&gt;自带的print输出pdf时在遇到大网页时加载预览时常卡住 …&lt;/p&gt;</summary><content type="html">&lt;h1&gt;插件&lt;/h1&gt;
&lt;h2&gt;Adblock&lt;/h2&gt;
&lt;p&gt;屏蔽广告&lt;/p&gt;
&lt;h2&gt;AdGuard AdBlocker&lt;/h2&gt;
&lt;p&gt;屏蔽广告&lt;/p&gt;
&lt;h2&gt;Bookmark Sidebar&lt;/h2&gt;
&lt;p&gt;收藏夹侧边栏显示，且打开可设置为在新标签打开
原来的收藏夹在上面会占用一定的空间，且如果一直显示有时候在给别人展示的时候，会比较尴尬，快捷键去打开也比较麻烦&lt;/p&gt;
&lt;h2&gt;Clean Master&lt;/h2&gt;
&lt;p&gt;每次进入 Setting 去清除缓存以及一些垃圾的时候总是很繁琐，这个插件可以简化这些操作，一键清理&lt;/p&gt;
&lt;h2&gt;Explain and Send Screenshots&lt;/h2&gt;
&lt;p&gt;页面截图工具，可截取整个网页或者部分（如视频的暂停）&lt;/p&gt;
&lt;h2&gt;fatkun图片批量下载&lt;/h2&gt;
&lt;p&gt;很强大的图片下载器，一张张的图片下载很麻烦，这个可以快速选择下载图片并且保存位置可修改，选择时可以按自己设定的大小选择，快速去除不符合要求的图片&lt;/p&gt;
&lt;h2&gt;fehelpr(前端助手)&lt;/h2&gt;
&lt;p&gt;里面有很多小工具很实用&lt;/p&gt;
&lt;h2&gt;onetab&lt;/h2&gt;
&lt;p&gt;标签打开太多，占用大量运行空间，但是暂时用不到，或者看不完，又不必完全保存为收藏标签，这个插件可以很好的保存标签页，且可导出导入，很方便&lt;/p&gt;
&lt;h2&gt;Print Friendly &amp;amp; PDF&lt;/h2&gt;
&lt;p&gt;自带的print输出pdf时在遇到大网页时加载预览时常卡住，且可定制的内容太少，该插件提供更好的pdf输出&lt;/p&gt;
&lt;h2&gt;Proxy SwitchyOmega&lt;/h2&gt;
&lt;p&gt;很好用的代理切换插件&lt;/p&gt;
&lt;h2&gt;Tampermonkey&lt;/h2&gt;
&lt;p&gt;不解释，提供了很多其他丰富的脚本，不用每一种功能去装一个插件了&lt;/p&gt;
&lt;h2&gt;划词翻译&lt;/h2&gt;
&lt;p&gt;单词悬浮翻译，选中翻译，监听剪切板等，不错的翻译工具&lt;/p&gt;
&lt;h2&gt;Vimium&lt;/h2&gt;
&lt;p&gt;让操作浏览器像 vim 一样
使用教程：&lt;a href="https://xiaoheidiannao.com/articles/Vim-For-Chrome.html#link-operation"&gt;https://xiaoheidiannao.com/articles/Vim-For-Chrome.html#link-operation&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;脚本&lt;/h1&gt;
&lt;p&gt;脚本的使用是在安装了 Tampermonkey 的基础上&lt;/p&gt;
&lt;h2&gt;all-search 全搜&lt;/h2&gt;
&lt;p&gt;一个搜索引擎快捷跳转菜单, 支持图形界面自定义
除了支持谷歌、百度、duck搜索等搜索引擎外，还支持图片、翻译、开发工具（github）等的快速跳转&lt;/p&gt;
&lt;h2&gt;Search By Image&lt;/h2&gt;
&lt;p&gt;通过ctrl开启热键后在想要搜索的图片右键即可跳出搜索图片的选择，多种搜索可选&lt;/p&gt;
&lt;h2&gt;百度去广告，blur(毛玻璃)搜索框，美化&lt;/h2&gt;
&lt;p&gt;在百度搜索的时候，为整个画面提供美化&lt;/p&gt;
&lt;h2&gt;百度热点搜索屏蔽&lt;/h2&gt;
&lt;p&gt;屏蔽点搜索后右侧的百度热点新闻，之前使用的，后来使用 Adblock 手动选择屏蔽就不用了&lt;/p&gt;</content><category term="Tools"></category><category term="linux"></category></entry><entry><title>Docker</title><link href="https://aiyoyo20.github.io/articles/docker.html" rel="alternate"></link><published>2020-09-03T10:20:00+08:00</published><updated>2020-09-03T10:20:00+08:00</updated><author><name>FING</name></author><id>tag:aiyoyo20.github.io,2020-09-03:/articles/docker.html</id><content type="html"></content><category term="Tools"></category><category term="linux"></category></entry><entry><title>服务器选择</title><link href="https://aiyoyo20.github.io/articles/fu-wu-qi-xuan-ze.html" rel="alternate"></link><published>2020-09-03T10:20:00+08:00</published><updated>2020-09-03T10:20:00+08:00</updated><author><name>FING</name></author><id>tag:aiyoyo20.github.io,2020-09-03:/articles/fu-wu-qi-xuan-ze.html</id><summary type="html">&lt;h1&gt;ME&lt;/h1&gt;
&lt;p class='ind'&gt;自己当初在选的时候主要对比了阿里的和百度的服务器，价格其实都还可以，但是中间是出了一个小插曲，自己在完成注册百度云后浏览了一下，但是并没有下单，然后过了几天有个小姐姐，说是销售经理，看我有这个意向就问了下我的需求，大概聊了一下，我给忘了聊了啥了然后加了微信，一看微信头像，嗯！还挺漂亮。我给细说了下我的需求然后给我推荐了一个，当时其实也不确定服务器自己拿来干啥就说再考虑几天，然后过了几天又来咨询，自己错过了几通电话但还是打过来，最后就买了一年的。记得那会花了178吧。&lt;/p&gt;
&lt;p class='ind'&gt;然后那会自己对linux并不熟悉，加上那会用ubuntu爱瞎鼓捣老是把系统弄崩溃，三天两头重装系统。就一直没怎么使用上，一直搁置了小半年。害，女人误事啊！&lt;/p&gt;

&lt;p class='ind'&gt;后来终于有时间了，就去鼓捣了wordpress博客，服务器配置、通过ip去访问的时候都挺好的，但是自己在注册域名的时候选择了一个国外的（1块钱1年），解析域名后过了一天提示域名不符合要求，意思就是这个域名是国外的，无法备案，又通过百度自己的注册了一个（也是1块钱1年），但是去解析的时候需要备案。自己是打算把这个博客当作一半日记本一半笔记本的，了解到一些其他的资料，对一些事有着自己的看法，可能会触及敏感，而且，国内的备案说白了就像让你脱了裤子在街上裸奔，虽然日常也差不多那样。而且近些年审查越来越让人摸不着头脑，写个东西还得去查查有没有敏感词汇，索性算了。自己存一个书签访问也没啥的 …&lt;/p&gt;</summary><content type="html">&lt;h1&gt;ME&lt;/h1&gt;
&lt;p class='ind'&gt;自己当初在选的时候主要对比了阿里的和百度的服务器，价格其实都还可以，但是中间是出了一个小插曲，自己在完成注册百度云后浏览了一下，但是并没有下单，然后过了几天有个小姐姐，说是销售经理，看我有这个意向就问了下我的需求，大概聊了一下，我给忘了聊了啥了然后加了微信，一看微信头像，嗯！还挺漂亮。我给细说了下我的需求然后给我推荐了一个，当时其实也不确定服务器自己拿来干啥就说再考虑几天，然后过了几天又来咨询，自己错过了几通电话但还是打过来，最后就买了一年的。记得那会花了178吧。&lt;/p&gt;
&lt;p class='ind'&gt;然后那会自己对linux并不熟悉，加上那会用ubuntu爱瞎鼓捣老是把系统弄崩溃，三天两头重装系统。就一直没怎么使用上，一直搁置了小半年。害，女人误事啊！&lt;/p&gt;

&lt;p class='ind'&gt;后来终于有时间了，就去鼓捣了wordpress博客，服务器配置、通过ip去访问的时候都挺好的，但是自己在注册域名的时候选择了一个国外的（1块钱1年），解析域名后过了一天提示域名不符合要求，意思就是这个域名是国外的，无法备案，又通过百度自己的注册了一个（也是1块钱1年），但是去解析的时候需要备案。自己是打算把这个博客当作一半日记本一半笔记本的，了解到一些其他的资料，对一些事有着自己的看法，可能会触及敏感，而且，国内的备案说白了就像让你脱了裤子在街上裸奔，虽然日常也差不多那样。而且近些年审查越来越让人摸不着头脑，写个东西还得去查查有没有敏感词汇，索性算了。自己存一个书签访问也没啥的。&lt;/p&gt;

&lt;p class='ind'&gt;快要到期的时候又打电话来询问使用情况，大概是看要不要续费吧，虽然这次是个男的，不过说话也很客气，就直说了备案的事，过了会来说其实有可以不用备案的服务器，但是自己还是想脱离这种情况，又聊了下审查的事，这些事大家都是心知肚明的，就也没有说啥了，让我记得备份数据以免到期影响不必要的损失。&lt;/p&gt;
&lt;p class='ind'&gt;国内的价格可能不是最低的，但是服务态度是很好的，如果不是那啥的话选择国内的服务器的话还是很好的，ping会更低，出了问题沟通也更方便。可惜了可惜了。&lt;/p&gt;

&lt;p class='ind'&gt;近期因为要再选择一个服务器，就去查了一些资料，下面的两篇资料都来源于知乎。&lt;/p&gt;

&lt;hr&gt;
&lt;h1&gt;国外和国内性价比比较高的云服务器对比：&lt;/h1&gt;
&lt;p&gt;&lt;img alt="" src="server_compare.png"&gt;&lt;/p&gt;
&lt;h2&gt;一、国外性价比较高的云服务器的厂商&lt;/h2&gt;
&lt;h3&gt;1、google云&lt;/h3&gt;
&lt;p&gt;官网：https://cloud.google.com/
优势：注册即送300美元的免费试用赠金，有效期是1年
&lt;img alt="" src="server_google.png"&gt;&lt;/p&gt;
&lt;p&gt;创建一个最低配的实例【1 vCPU；0.6GB内存；10GB硬盘】（我注册下来后，从来没用过，每个月大约花费1.14美元），
使用1年绝对是绰绰有余的。谷歌在这块还是挺良心的。
&lt;img alt="" src="server_google_price.png"&gt;
有两点需要注意一下：
1、注册的时候，需要填写一个美国地址。在这个http://www.shenfendaquan.com/网站可随机生成一个地址
2、需要持有一张双币信用卡去注册，有网友说visa不能注册，但是我的就是招商银行的visa信用卡，也是能正常注册的。&lt;/p&gt;
&lt;h3&gt;2、AWS&lt;/h3&gt;
&lt;p&gt;官网：https://amazonaws-china.com/cn/&lt;/p&gt;
&lt;p&gt;首页上的大Banner就挺吸引人的。
&lt;img alt="" src="server_aws.png"&gt;
对性能没有什么要求的同学，可以看
&lt;img alt="" src="server_aws_price.png"&gt;
申请EC2，12个月内，每个月可以免费使用750个小时（31天），如果不追求服务器的性能，这个性价比还是很高的。&lt;/p&gt;
&lt;h3&gt;3、Vultr&lt;/h3&gt;
&lt;p&gt;官网：https://www.vultr.com/
使用的Vultr的人还是挺多的，稳定性也还行，关键还可以支持支付宝支付。
以前注册时好像还有优惠码，但是现在好久没有用Vultr了，也不知道还有没有优惠。
&lt;img alt="" src="server_vultr.png"&gt;&lt;/p&gt;
&lt;h3&gt;4、搬瓦工&lt;/h3&gt;
&lt;p&gt;官网：https://www.bwh88.net/
配置和价格大概是这样婶的。
&lt;img alt="412e_720w" src="server_bwh.jpg"&gt;&lt;/p&gt;
&lt;p&gt;总结：&lt;/p&gt;
&lt;p&gt;如果要买国外的服务器，推荐用谷歌云和AWS，白嫖即艺术。&lt;/p&gt;
&lt;h2&gt;二、国内比较好的云服务器的厂商（腾讯云、阿里云）&lt;/h2&gt;
&lt;p&gt;虽然国外有限时免费的云服务器，但是我还是不推荐买国外的厂商，有点经济实力的，还是用国内的云服务器厂商比较靠谱。&lt;/p&gt;
&lt;p&gt;优势在于：
&lt;img alt="" src="server_home.png"&gt;&lt;/p&gt;
&lt;h3&gt;1、腾讯云&lt;/h3&gt;
&lt;p&gt;国内的云服务器厂商，稳定性、安全性、工单响应速度、性价比等方面，都还算不错，而腾讯云的性价比又是一大卖点，对于初级玩家来说，算是相当不错的了。&lt;/p&gt;
&lt;p&gt;现在恰逢618，腾讯云这么喜欢搞活动，肯定是少不了促销的啦！&lt;/p&gt;
&lt;p&gt;一年才95元，每天约等于0.26元，对于学生党来说，是相当友好的了。试想一下，去网咖开黑，一个小时好像都得10元了吧，如果拿这些钱省下来买个服务器，岂不美哉。&lt;/p&gt;
&lt;h3&gt;2、阿里云&lt;/h3&gt;
&lt;p&gt;口碑最佳，机器性能也十分不错，好多企业也都在用阿里云，毕竟阿里的技术真的没得黑。&lt;/p&gt;
&lt;p&gt;最令我敬佩的是，之前加了一个阿里云的销售，咨询阿里云服务器的问题，当时因为没有什么活动，就没有买。&lt;/p&gt;
&lt;p&gt;没想到每当阿里云有活动的时候，那个销售总会亲自通知我，云服务器搞优惠，这种敬业精神也是值得我们学习的。&lt;/p&gt;
&lt;p&gt;目前阿里云也是有活动的。&lt;/p&gt;
&lt;p&gt;&lt;img alt="v2-82f7ce8147a" src="server_ali.jpg"&gt;&lt;/p&gt;
&lt;p&gt;总结：如果是学习和工作的话，还是建议买国内的服务器，毕竟稳定、好用、售后服务更好。&lt;/p&gt;
&lt;hr&gt;
&lt;h1&gt;服务器有关知识&lt;/h1&gt;
&lt;p&gt;不知道大家是不是跟我一样，刚入行时总是搞不清物理服务器（独立服务器）、VPS服务器（虚拟专用）、云服务器、虚拟主机、裸金属服务器这些概念。说实话，我刚开始接触的时候也有点头大。后来随着了解地不断加深，逐渐清楚了这些服务器之间的区别，并且学会了如何挑选服务器。今天，我就将自己掌握的服务器有关知识全部分享给大家！希望对大家以后识别服务器、选购服务器能有帮助。&lt;/p&gt;
&lt;p&gt;既然提到了上面这些概念，那就先从区别这些服务器开始吧！&lt;/p&gt;
&lt;p&gt;物理服务器：又叫独立服务器或者传统服务器。顾名思义，物理服务器就是一台台看得见摸得着，摆在机房的实实在在的服务器。可以理解为是一台具有高计算能力、高性能、高安全性、高稳定性、高可控性，独立又完整的电脑。有硬盘、内存、CPU，可以自行分配实行多种网络功能服务，将各种软硬件资源集于一身。&lt;/p&gt;
&lt;p&gt;应用场景：适合大型网站及应用。&lt;/p&gt;
&lt;p&gt;优劣势：优点在于性能稳定、安全性高、更可控；缺点是需要专业的服务器运维人员管理，价格高，灵活性弱，扩展限制大。&lt;/p&gt;
&lt;p&gt;价格：高。&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;VPS服务器：又叫虚拟专用服务器。VPS服务器是用虚拟技术把物理服务器划分成若干个独立空间，每一个独立的空间都是虚拟专用服务器，也就是VPS服务器。由于是从物理服务器上虚拟出来的产品，因此没有物理服务器稳定，运算速度也要慢一些，性能不高，适合对配置要求不高的客户。&lt;/p&gt;
&lt;p&gt;应用场景：适合预算不多的网站和应用。&lt;/p&gt;
&lt;p&gt;优劣势：最主要的优势就是价格了，价格比物理服务器便宜很多，比虚拟主机贵不了多少，管理起来比较方便；缺点是在扩容、存储、稳定性方面都不及云服务器，这也是为什么大多数企业选择云服务器的原因。&lt;/p&gt;
&lt;p&gt;价格：便宜。&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;云服务器：又叫云主机，简称ECS。在一组集群服务器上虚拟出多个类似独立服务器的部分。云服务器不是单个的物理服务器，它们之间通过网络技术连接起来形成一台超级计算机，拥有独立的宽带和IP。云服务器具有安全可靠性高、易部署、扩展性高（即时扩展，按需扩展）、性价比高等特点。因为是多个服务器的集群，云服务器还具有硬件独享、资源独享、风险共享的优势。云服务器还具备容错性，故障恢复快，操作系统和软件环境皆可备份，恢复后无需重新配置软件环境。&lt;/p&gt;
&lt;p&gt;应用场景：适用于中小型网站和应用。&lt;/p&gt;
&lt;p&gt;优劣势：优点相比物理服务器更灵活，弹性伸缩管理，价格可按需实时制定，避免造成网络资源的浪费，降低了运营成本；缺点在安全性能方面，用户缺乏对云服务器的控制，因此出于企业数据安全层面考虑，建议选择大厂商。&lt;/p&gt;
&lt;p&gt;价格：低。&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;虚拟主机：又叫虚拟服务器或共享主机。是一种在单一主机或主机群上，比如物理服务器、VPS服务器或者云服务器上安装例如CPanel、Plesk等面板搭建而成的。虚拟主机市场比较混乱，使用云服务器最好（推荐阿里云），物理服务器也可以，但一般不推荐VPS作为虚拟主机的服务器。如果说用租房来比喻VPS和虚拟主机之间的区别，那VPS相当于整租，虚拟主机就是合租。但整租是毛坯房，合租是精装房。&lt;/p&gt;
&lt;p&gt;应用场景：适用于非Java项目，且流量、内存较小的网站应用。&lt;/p&gt;
&lt;p&gt;优劣势：优点在于价格便宜，和物理服务器相比降低了不少运营成本；缺点是稳定性、安全性等都很弱，网站在应对大流量访问时性能不足，对速度和流量有非常大的限制。&lt;/p&gt;
&lt;p&gt;价格：最便宜。&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;裸金属服务器：类似云上的专属物理服务器，在拥有弹性灵活的基础上，具有高性能的计算能力。计算性能与传统物理机无差别，具有安全物理隔离的特点。相当于传统物理服务器的“变态版”。裸金属服务器是集物理服务器的稳定性能，和云服务器高度弹性的资源优势于一身的超级平台。兼具超高计算性能的同时，满足用户对核心应用场景和服务器稳定性的要求。比如，阿里云弹性裸金属服务器-神龙，就具备这样的特点。&lt;/p&gt;
&lt;p&gt;应用场景：适用于对数据安全、性能配置、安全监管等都要求非常严格的Web网站、中大型企业等重量级数据库应用、游戏和金融等高性能网站和应用。&lt;/p&gt;
&lt;p&gt;优劣势：集合了物理服务器的稳定性和云服务器云上资源高度弹性的优势，性能更高，更灵活；缺点是价格相对较高。&lt;/p&gt;
&lt;p&gt;价格：较高。&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;讲完上面几种服务器的区别，可能有人会说还不知道服务器是什么呢，能不能系统地讲一下服务器到底是个什么东东啊？OK，继续往下看。&lt;/p&gt;
&lt;p&gt;服务器是指能向网络用户提供特定服务的软件和硬件。&lt;/p&gt;
&lt;p&gt;服务器的作用：&lt;/p&gt;
&lt;p&gt;是为网络提供特定的服务，人们通常用服务器所能提供的主要服务来命名服务器，比如提供文件共享服务的服务器称为文件服务器，提供打印队列共享服务的服务器称为打印服务器等。&lt;/p&gt;
&lt;p&gt;服务器工作原理：&lt;/p&gt;
&lt;p&gt;如果把服务器比作人，处理器就是服务器的大脑，各种总线就像是分布于全身肌肉中的神经。芯片组有点像骨架，I/O设备就像是通过神经系统支配的人的手、眼睛、耳朵和嘴。电源系统相当于血液循环系统，将能量输送到身体的各个地方。&lt;/p&gt;
&lt;p&gt;服务器作为软件，有很多形式的服务器：文件服务器、数据库服务器、Web服务器、邮件服务器、网页服务器、FTP服务器、域名服务器、应用程序服务器、代理服务器、游戏服务器等。&lt;/p&gt;
&lt;p&gt;服务器系统的硬件构成包括中央处理器、硬盘、内存、芯片组、I/O总线、I/O设备、电源、机箱和相关软件等，和我们平时所接触的电脑有诸多相似之处。但是由于需要提供高可靠的服务，因此在处理能力、稳定性、可靠性、安全性、可扩展性、可管理性等方面要求较高。&lt;/p&gt;
&lt;p&gt;作为服务器大脑的中央处理器，即服务器CPU，是衡量服务器性能的首要指标。接触过局域网络的朋友一定知道，服务器是网络中的重要设备，承载着成千上万用户的访问。因此对服务器有大数据量的快速吞吐、超强稳定性、长时间运行等严格要求。目前，服务器CPU仍按CPU的指令系统来区分，通常分为CISC型CPU和RISC型CPU。后来又出现了一种64位的VLIM指令系统的CPU。&lt;/p&gt;
&lt;p&gt;服务器常见的外型有四种：塔式服务器（又称台式服务器）、机架服务器（rack）、刀片服务器（blade server）、机柜式服务器。&lt;/p&gt;
&lt;p&gt;根据不同的计算能力，按网络规模划分，服务器又分为：工作组级服务器，部门级服务器和企业级服务器。这三者之间的关系是，由工作组级服务器到部门级服务器，再到企业级服务器，对所要服务的联网计算机的数量、处理速度和数据安全性、硬件配置、系统可靠性等要求依次递增。并且对应服务的是小型网络、中型网络、大型网络。&lt;/p&gt;
&lt;p&gt;按架构划分，服务器可分为：CISC架构服务器和RISC架构服务器。&lt;/p&gt;
&lt;p&gt;按用途划分，服务器又可分为通用型服务器和专用型（又称功能型）服务器。通用型服务器，顾名思义就是可以提供各种服务功能的服务器。当前大多数服务器属于通用型服务器。专用型服务器是为某一种或某几种功能专门设计的服务器，在某些方面与通用型服务器不同，比如光盘镜像服务器是用来存放光盘镜像的，就需要配置大容量、高速的硬盘以及光盘镜像软件。&lt;/p&gt;
&lt;p&gt;科普了这么多，可能大家最关心的还是如何选择适合自己的服务器。一般来说，选用服务器需要从以下几个维度来衡量性能指标：&lt;/p&gt;
&lt;p&gt;1.可用性&lt;/p&gt;
&lt;p&gt;可用性是指在一段时间内服务器可供访问者正常使用的时间的百分比。提高可用性可从两方面着手：减少硬件平均故障时间和利用专用功能机制。专用功能机制可在出现故障时自动执行系统或部件切换机制，避免或减少意外停机。&lt;/p&gt;
&lt;p&gt;2.高性能&lt;/p&gt;
&lt;p&gt;顾名思义，指服务器综合性能指标要高。主要要求在运行速度、磁盘空间、容错能力、扩展能力、稳定性、监测功能及电源等方面具有较高的性能指标。尤其是硬盘和电源的热插拔性能、网卡的自适应能力等性能指标要高。&lt;/p&gt;
&lt;p&gt;3.模块化&lt;/p&gt;
&lt;p&gt;模块化是指电源、网卡、SCSI卡、硬盘等部件为模块化结构，且都具有热插拔功能，可在线维护，从而使系统停机的可能性大大减小。特别是分布式电源技术可使每个重要的部件都有独立的电源。&lt;/p&gt;
&lt;p&gt;4.可扩展性&lt;/p&gt;
&lt;p&gt;为了使服务器随负荷的增加可以平稳升级，并保证服务器工作的安全性与稳定性，必须将服务器的可扩展性能作为一项重要衡量指标。首先，在机架上要有为硬盘和电源的增加而预留充分的空间。其次主机上的插槽不但要种类齐全，而且要有一定的余量。&lt;/p&gt;
&lt;p&gt;5.可管理性&lt;/p&gt;
&lt;p&gt;可管理性是指服务器的管理是否方便、快捷，应用软件是否丰富。在可管理性方面，基于Windows NT／2000平台的个人计算机服务器要优于Unix服务器。&lt;/p&gt;
&lt;p&gt;当然，除了以上这些因素是在选购服务器时需要重点考虑的之外。品牌、价格、售后服务以及厂商实力等因素也是需要考虑在内的。&lt;/p&gt;
&lt;p&gt;讲到这里，相信大家对服务器的种类区别，以及如何选择适合自己的服务器已经心里有数了。但我最近也收到一些用户的反馈，他们对另外一些服务器相关的问题还存在疑惑，希望我能帮忙解答一下。借此机会，我也一并分享下。&lt;/p&gt;
&lt;p&gt;问题一：一个网站需要多少服务器？&lt;/p&gt;
&lt;p&gt;这个问题没法直接给出具体数字，因为影响一个网站所需服务器数量的因素有很多，最简单的比如网站源代码。事实上源代码写得越牛，需要的服务器数量就可以越少。反之，则越多。其次，网站业务量越大，整体架构就会越复杂。服务器数量的评估，需要根据不同业务系统的特点具体分析。&lt;/p&gt;
&lt;p&gt;中小型企业需要多少服务器：&lt;/p&gt;
&lt;p&gt;情况一：企业自研发网站，就可以根据业务规模以及业务系统特点，选用不同配置的云服务器。比如阿里云服务器常用的配置有1核1G、1核2G、2核4G、2核8G、4核8G、4核16G、16核32G等，这些都是中小企业用户购买最多的，可以说是爆款云服务器配置。至于数量，这个需要根据网站的实际情况而定。&lt;/p&gt;
&lt;p&gt;情况二：如果企业是购买的阿里云模板建站、半定制化建站产品，则不需要购买服务器。比如阿里云速成美站和云企业官网，服务器是包含在建站费用里的。拥有云服务器（ECS）、负载匀衡(SLB)、云数据库（RDS）、云存储（OSS）、网络加速（CDN）等云计算资源集群，以SaaS的方式提供给用户，让每一个网页都能秒开，同时确保网站稳定。&lt;/p&gt;
&lt;p&gt;阿里云建站“速美”，高性价比，价格低至500元
​
aliyun3.wezhan.cn
图标&lt;/p&gt;
&lt;p&gt;大型网站需要多少服务器：&lt;/p&gt;
&lt;p&gt;对于电商网站来说，每天都会有大量用户访问，进行购买操作。所以服务器需要进行大量的数据请求处理，因此用于电商网站的服务器在CPU、内存上的要求会比较高。对于视频类网站，除了用户访问请求和下载数据外，还需要有大硬盘、大带宽的配置，才能保障用户在观看视频时不会出现卡顿。&lt;/p&gt;
&lt;p&gt;对于大型网站来说，无论是图片网站、视频网站、门户网站、企业网站、还是电商网站，在租用服务器时，需要注意基本的配置标准。比如CPU、硬盘、内存、带宽、防御上的配置都是需要我们考虑的。通常情况下，CPU建议最好是选择8核以上的，视频网站的话，内存不要低于16G，硬盘至少要1T，带宽独享100M会更好些。&lt;/p&gt;
&lt;p&gt;问题二：有没有便宜好用的云服务器推荐？&lt;/p&gt;
&lt;p&gt;现在买云服务器，大多数用户优先考虑的都是阿里云服务器。阿里云服务器以稳定、安全、方便以及高性价比等优势，一直以来都深受用户欢迎。阿里云服务器是一种高效，计算能力可弹性伸缩的云计算服务，用户可根据业务需要，随时创建、修改、释放云服务器ECS配置。&lt;/p&gt;
&lt;p&gt;运行于阿里云自研的飞天操作系统，具有计算性能可弹性伸缩，存储空间可扩展，网络配置可自定义的低耦合特性。实例规格、磁盘、网络、操作系统等作为云服务器ECS的组成部分，可以像搭积木一样任意组合卸载，满足用户多样化的需求。&lt;/p&gt;
&lt;p&gt;价格方面，阿里云服务器有各种各样便宜到爆的特惠活动。比如：个人新用户低至1折（限购1-2台）。企业新用户低至2.6折（限购3-5台）。每日10点限量抢爆款产品，先到先得。此外还有新注册用户专享，爆款云服务器免费试用12个月等优惠活动，0成本上云，0元试用18+款产品。了解详情可咨询阿里云官网。&lt;/p&gt;
&lt;p&gt;问题三：阿里云服务器怎么样？腾讯云与阿里云，哪个更好些？&lt;/p&gt;
&lt;p&gt;腾讯云，和青云、景安云、UCloud这几家比。平心而论，腾讯云是有一些优势的。但是和阿里云比，腾讯云目前还处于推广阶段，优惠比较多。但是性能方面，我没用过，所以特意问了一些用过的朋友，据他们反馈不是很好。&lt;/p&gt;
&lt;p&gt;阿里云，作为毫无争议的中国云服务第一品牌。从2009年创立，发展至今已有11个年头。拥有弹性计算10年的深厚技术积淀，技术领先，性能优异，稳如磐石。阿里云目前的服务范围已经覆盖200多个国家和地区，在全球18个地域开放了49个可用区，在全球部署了200多个飞天数据中心。&lt;/p&gt;
&lt;p&gt;阿里云服务全面覆盖IaaS、PaaS、SaaS三大云服务类型，产品涉及云计算基础、安全、大数据、人工智能、企业应用、物联网等众多领域。自主研发的超大规模通用计算操作系统飞天系统，已经全面服务于全球范围内的客户。飞天系统能够将遍布全球的百万级服务器连成一台超级计算机，以在线公共服务的方式提供计算能力。&lt;/p&gt;
&lt;p&gt;云服务器方面，阿里云目前从云服务器ECS已经衍生出了多个云服务器系列，包括适用于初级用户的轻量应用服务器、适合高性能场景的多种云服务器等。为中小型企业提供一站式互联网服务，专注于云计算领域的研究和研发，在全球云计算领域构建起强大的技术及市场优势。多年来一直保持着高增长，增速已经超越亚马逊云计算的业务增速，成为全球增速最快的云计算服务商。&lt;/p&gt;
&lt;p&gt;在云服务器市场，阿里云服务器占据近五成的国内市场份额，国内市场排名第一无可争议。阿里云服务器成为企业在部署各种应用场景的时候考虑云计算服务商的首选。跟其他云服务器厂商比，阿里云服务器有什么优势？&lt;/p&gt;
&lt;p&gt;1.弹性计算服务ECS：支持分钟级别创建1000台实例，多种弹性付费选择更贴合业务现状，同时带来弹性的扩容能力，实例与带宽均可随时升降配，云盘可扩容。帮助用户构建更稳定、更安全的应用。提升运维效率，降低IT整体成本，使用户更专注于核心业务创新。提供GPU和FPGA等异构计算服务器、弹性裸金属服务器以及通用的x86架构服务器。&lt;/p&gt;
&lt;p&gt;2.稳定可靠：同地域多可用区（机房）可为用户提供超高的容灾能力。单实例可用性达99.975%，多可用区多实例可用性达99.995%，云盘可靠性达99.9999999%。可实现自动宕机迁移、快照备份，进一步保障企业服务和数据安全。&lt;/p&gt;
&lt;p&gt;3.高安全性：提供虚拟防火墙、角色权限控制、内网隔离、防病毒攻击及流量监控等多重安全方案。免费提供 DDoS 防护、木马查杀、防暴力破解等服务，通过多方国际安全认证，ECS云盘支持数据加密功能等。&lt;/p&gt;
&lt;p&gt;4.高性能：单实例最高可选88vCPU，内存704GB，单实例性能最高可达到700万PPS网络收发包，35Gbps带宽。提供性能监控框架和主动运维体系。&lt;/p&gt;
&lt;p&gt;5.易部署：分钟级交付，快速部署，缩短应用上线周期。快速接入部署在全球范围内的数据中心和BGP机房。&lt;/p&gt;
&lt;p&gt;6.高性价：成本透明，按需使用，支持根据业务波动随时扩展和释放资源。支持包年月预付费，按需计费，满足不同用户场景需求。无需自建机房，无需采购以及配置硬件设施，无需服务器、网络和硬件等维护，零成本运维。提供10大类、40多个不同版本的免费基础操作系统。&lt;/p&gt;
&lt;p&gt;7.可扩展性：支持通过内网访问其他阿里云服务，形成丰富的行业解决方案，降低公网流量成本。ECS 可与阿里云各种丰富的云产品无缝衔接，可持续为业务发展提供完整的计算、存储、安全等解决方案。&lt;/p&gt;
&lt;p&gt;8.易用性：丰富的操作系统和应用软件，通过镜像可一键简单部署，同一镜像可在多台 ECS 中快速复制环境，轻松扩展。提供行业通用标准API，提高易用性和适用性。&lt;/p&gt;
&lt;p&gt;（配图来源于网络，侵删）&lt;/p&gt;
&lt;p&gt;参考资料：&lt;/p&gt;
&lt;p&gt;1.计算机网络与应用技术&lt;/p&gt;
&lt;p&gt;2.电子商务师、高级电子商务师&lt;/p&gt;
&lt;p&gt;3.大学计算机基础&lt;/p&gt;
&lt;hr&gt;
&lt;style&gt;
.ind {
text-indent: 2em;
}
/style&gt;</content><category term="Tools"></category><category term="linux"></category></entry><entry><title>Git</title><link href="https://aiyoyo20.github.io/articles/git.html" rel="alternate"></link><published>2020-09-03T10:20:00+08:00</published><updated>2020-09-03T10:20:00+08:00</updated><author><name>FING</name></author><id>tag:aiyoyo20.github.io,2020-09-03:/articles/git.html</id><summary type="html">&lt;h1&gt;Git 的使用 并传送文件至github&lt;/h1&gt;
&lt;h2&gt;注册github帐号&lt;/h2&gt;
&lt;p&gt;github.com 去注册一个自己的帐号&lt;/p&gt;
&lt;h2&gt;安装Git&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;yay -S git
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2&gt;初始化配置GIT&lt;/h2&gt;
&lt;h3&gt;配置用户信息&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;git config --global user.name &amp;quot;your name&amp;quot;
git config --global user.email &amp;quot;your email&amp;quot;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2&gt;上传文件&lt;/h2&gt;
&lt;p&gt;进入要传送的文件夹内，&lt;/p&gt;
&lt;h3&gt;初始化本地仓库&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;git init
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h3&gt;添加拟上传的对象&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;//上传文件夹1
git add f1

//上传指定文件
git add *.*

//上传所有修改的文件
git add .
or
Git add -A
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h3&gt;将修改后的文件提交到本地仓库&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;git commit …&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</summary><content type="html">&lt;h1&gt;Git 的使用 并传送文件至github&lt;/h1&gt;
&lt;h2&gt;注册github帐号&lt;/h2&gt;
&lt;p&gt;github.com 去注册一个自己的帐号&lt;/p&gt;
&lt;h2&gt;安装Git&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;yay -S git
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2&gt;初始化配置GIT&lt;/h2&gt;
&lt;h3&gt;配置用户信息&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;git config --global user.name &amp;quot;your name&amp;quot;
git config --global user.email &amp;quot;your email&amp;quot;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2&gt;上传文件&lt;/h2&gt;
&lt;p&gt;进入要传送的文件夹内，&lt;/p&gt;
&lt;h3&gt;初始化本地仓库&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;git init
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h3&gt;添加拟上传的对象&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;//上传文件夹1
git add f1

//上传指定文件
git add *.*

//上传所有修改的文件
git add .
or
Git add -A
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h3&gt;将修改后的文件提交到本地仓库&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;git commit -m ‘增加README.md说明文档’
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;img alt="" src="git_tip.png"&gt;&lt;/p&gt;
&lt;h3&gt;连接到远程仓库&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;git remote add origin 远程仓库地址
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h3&gt;推送&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;git push -u origin master
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;ssh-keygen -t rsa -C "aiyoyo20@gmail.com@github.com"
生成.ssh 文件夹
进入打开其 id_rsa.pub 复制其送有内容，github 打开设置找到 'Add SSH Key' 添加即可&lt;/p&gt;
&lt;h2&gt;Git&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;git&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;config&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="k"&gt;global&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;user&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="ss"&gt;&amp;quot;Michael728&amp;quot;&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="n"&gt;git&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;config&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="k"&gt;global&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;user&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;email&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="ss"&gt;&amp;quot;649168982@qq.com&amp;quot;&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="n"&gt;ssh&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;keygen&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;t&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;rsa&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;C&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="ss"&gt;&amp;quot;649168982@qq.com&amp;quot;&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="n"&gt;复制代码&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;[fish@fish-pc&lt;strong&gt; &lt;/strong&gt;etc&lt;strong&gt;**]$&lt;/strong&gt; ssh-keygen -t rsa -C "aiyoyo2729@gmail.com"
Generating public/private rsa key pair.
Enter file in which to save the key (/home/fish/.ssh/id_rsa):
Created directory '/home/fish/.ssh'.
Enter passphrase (empty for no passphrase):
Enter same passphrase again:
Your identification has been saved in /home/fish/.ssh/id_rsa
Your public key has been saved in /home/fish/.ssh/id_rsa.pub
The key fingerprint is:
SHA256:lspSTHzElY/EvDXaxmGHw7je12DCQI4cGu6S/Cx4H68 aiyoyo2729@gmail.com
The key's randomart image is:
+---[RSA 3072]----+
|    ..o=o+ .  |
|   o =.+B O .  |
|    = +..&amp;amp; =  |
|  . = . .= B o  |
|   + + S. o o o |
|  . * o  . . . .|
|  . + *    .  |
|  . + o     |
|    E..     |
+----[SHA256]-----+&lt;/p&gt;</content><category term="Tools"></category><category term="linux"></category></entry><entry><title>解、压缩</title><link href="https://aiyoyo20.github.io/articles/jie-ya-suo.html" rel="alternate"></link><published>2020-09-03T10:20:00+08:00</published><updated>2020-09-03T10:20:00+08:00</updated><author><name>FING</name></author><id>tag:aiyoyo20.github.io,2020-09-03:/articles/jie-ya-suo.html</id><summary type="html">&lt;h1&gt;1. tar&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;参数说明：&lt;/p&gt;
&lt;p&gt;-c: 建立压缩档案
-x：解压
-t：查看内容
-r：向压缩归档文件末尾追加文件
-u：更新原压缩包中的文件&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;这五个是独立的命令，压缩解压都要用到其中一个，可以和别的命令连用但只能用其中一个。下面的参数是根据需要在压缩或解压档案时可选的。&lt;/p&gt;
&lt;p&gt;-z：有gzip属性的
-j：有bz2属性的
-Z：有compress属性的
-v：显示所有过程
-O：将文件解开到标准输出&lt;/p&gt;
&lt;p&gt;下面的参数-f是必须的&lt;/p&gt;
&lt;p&gt;-f: 使用档案名字，切记，这个参数是最后一个参数，后面只能接档案名。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2&gt;1.1. tar&lt;/h2&gt;
&lt;p&gt;严格来说，tar文件只是归档但并未压缩&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;tar -cvf test.tar test1.log test2.log #归档多个文件
tar -cvf test …&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</summary><content type="html">&lt;h1&gt;1. tar&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;参数说明：&lt;/p&gt;
&lt;p&gt;-c: 建立压缩档案
-x：解压
-t：查看内容
-r：向压缩归档文件末尾追加文件
-u：更新原压缩包中的文件&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;这五个是独立的命令，压缩解压都要用到其中一个，可以和别的命令连用但只能用其中一个。下面的参数是根据需要在压缩或解压档案时可选的。&lt;/p&gt;
&lt;p&gt;-z：有gzip属性的
-j：有bz2属性的
-Z：有compress属性的
-v：显示所有过程
-O：将文件解开到标准输出&lt;/p&gt;
&lt;p&gt;下面的参数-f是必须的&lt;/p&gt;
&lt;p&gt;-f: 使用档案名字，切记，这个参数是最后一个参数，后面只能接档案名。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2&gt;1.1. tar&lt;/h2&gt;
&lt;p&gt;严格来说，tar文件只是归档但并未压缩&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;tar -cvf test.tar test1.log test2.log #归档多个文件
tar -cvf test.tar test/* &amp;amp;emsp;[[归档test]]目录下所有文件
tar -cvf test.tar *.log &amp;amp;emsp;#归档所有以.log结尾的文件
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;tar -xvf file.tar        //解压 tar包
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;hr&gt;
&lt;h2&gt;1.2. tar.gz&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;tar -zxvf file.tar.gz     //解压tar.gz
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;tar -zcvf test.tar.gz file1 file2 [[打包，并以gzip]]压缩
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2&gt;1.3. tar.bz2&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;tar -jxvf test.tar.bz2 file1 file2 [[打包，并以bzip2]]压缩
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;tar -jcvf test.tar.bz2 file1 file2 [[打包，并以bzip2]]压缩
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2&gt;1.4. tar.Z&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;tar -xZvf file.tar.Z    //解压tar.Z
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;tar -cZvf file.tar.Z    //压缩tar.Z
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2&gt;1.5. tar.xz&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;压缩tar.xz包
先创建xxx.tar文件

tar -cvf xxx.tar xxx
再创建xxx.tar.xz文件

xz -z xxx.tar
如果要保留被压缩的文件，需要加上参数-k
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;解压tar.xz包
这是两层压缩，外面是xz压缩，里层是tar压缩，所以分两步实现解压。

xz -d filename.tar.xz
tar -xvf filename.tar.xz

也可以直接解压
tar -xvJf filename.tar.xz
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h1&gt;2. zip/unzip&lt;/h1&gt;
&lt;p&gt;zip和unzip命令主要用于处理zip包。记得linux默认也是没有的，需要额外安装。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;zip
功能说明：压缩文件。
语　　法：zip [-AcdDfFghjJKlLmoqrSTuvVwXyz$][-b &amp;lt;工 作目录&amp;gt;][-ll][-n &amp;lt;字 尾字符串&amp;gt;][-t &amp;lt;日 期时间&amp;gt;][-&amp;lt;压 缩效率&amp;gt;][压 缩文件][文件...][-i &amp;lt;范本样式&amp;gt;][-x &amp;lt;范本样式&amp;gt;]
补充说明：zip是个使用广泛的压缩程序，文件经它压缩后会另外产生具 有".zip"扩展名 的压缩文件。
参　　数：
-A   调 整可执行的自动解压缩文件。
-b&amp;lt;工作目录&amp;gt;   指 定暂时存放文件的目录。
-c   替 每个被压缩的文件加上注释。
-d   从 压缩文件内删除指定的文件。
-D   压 缩文件内不建立目录名称。
-f   此 参数的效果和指定"-u"参 数类似，但不仅更新既有文件，如果某些文件原本不存在于压缩文件内，使用本参数会一并将其加入压缩文件中。
-F   尝 试修复已损坏的压缩文件。
-g   将 文件压缩后附加在既有的压缩文件之后，而非另行建立新的压缩文件。
-h   在 线帮助。
-i&amp;lt;范本样式&amp;gt;   只 压缩符合条件的文件。
-j   只 保存文件名称及其内容，而不存放任何目录名称。
-J   删 除压缩文件前面不必要的数据。
-k   使 用MS-DOS兼容格 式的文件名称。
-l   压 缩文件时，把LF字符 置换成LF+CR字 符。
-ll   压 缩文件时，把LF+CR字 符置换成LF字符。
-L   显 示版权信息。
-m   将 文件压缩并加入压缩文件后，删除原始文件，即把文件移到压缩文件中。
-n&amp;lt;字尾字符串&amp;gt;   不 压缩具有特定字尾字符串的文件。
-o   以 压缩文件内拥有最新更改时间的文件为准，将压缩文件的更改时间设成和该文件相同。
-q   不显 示指令执行过程。
-r   递 归处理，将指定目录下的所有文件和子目录一并处理。
-S   包 含系统和隐藏文件。
-t&amp;lt;日期时间&amp;gt;   把 压缩文件的日期设成指定的日期。
-T   检 查备份文件内的每个文件是否正确无误。
-u   更 换较新的文件到压缩文件内。
-v   显 示指令执行过程或显示版本信息。
-V   保 存VMS操作系统的文 件属性。
-w   在 文件名称里假如版本编号，本参数仅在VMS操 作系统下有效。
-x&amp;lt;范本样式&amp;gt;   压 缩时排除符合条件的文件。
-X   不 保存额外的文件属性。
-y   直 接保存符号连接，而非该连接所指向的文件，本参数仅在UNIX之 类的系统下有效。
-z   替 压缩文件加上注释。
-$   保 存第一个被压缩文件所在磁盘的卷册名称。
-&amp;lt;压缩效率&amp;gt;   压 缩效率是一个介于1-9的 数值。&lt;/p&gt;
&lt;p&gt;unzip
功 能说明：解压缩zip文 件
语　　法：unzip [-cflptuvz][-agCjLMnoqsVX][-P &amp;lt;密 码&amp;gt;][.zip文 件][文件][-d &amp;lt;目录&amp;gt;][-x &amp;lt;文件&amp;gt;] 或 unzip [-Z]
补充说明：unzip为.zip压缩文件的解压缩程序。
参　　数：
-c   将 解压缩的结果显示到屏幕上，并对字符做适当的转换。
-f   更 新现有的文件。
-l   显 示压缩文件内所包含的文件。
-p   与-c参数类似，会将解压缩的结果显示到屏幕上，但不会执行任 何的转换。
-t   检 查压缩文件是否正确。，但不解压。
-u   与-f参数类似，但是除了更新现有的文件外，也会将压缩文件中 的其他文件解压缩到目录中。
-v   执 行是时显示详细的信息。或查看压缩文件目录，但不解压。
-z   仅 显示压缩文件的备注文字。
-a   对 文本文件进行必要的字符转换。
-b   不 要对文本文件进行字符转换。
-C   压 缩文件中的文件名称区分大小写。
-j   不 处理压缩文件中原有的目录路径。
-L   将 压缩文件中的全部文件名改为小写。
-M   将 输出结果送到more程 序处理。
-n   解 压缩时不要覆盖原有的文件。
-o   不 必先询问用户，unzip执 行后覆盖原有文件。
-P&amp;lt;密码&amp;gt;   使 用zip的密码选项。
-q   执 行时不显示任何信息。
-s   将 文件名中的空白字符转换为底线字符。
-V   保 留VMS的文件版本信 息。
-X   解 压缩时同时回存文件原来的UID/GID。
[.zip文件]   指定.zip压缩文件。
[文件]   指定 要处理.zip压缩文 件中的哪些文件。
-d&amp;lt;目录&amp;gt;   指 定文件解压缩后所要存储的目录。
-x&amp;lt;文件&amp;gt;   指 定不要处理.zip压 缩文件中的哪些文件。
-Z   unzip -Z等 于执行zipinfo指 令。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2&gt;2.1. 压缩&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;zip test.zip filename # 压缩文件
zip -r test.zip test/ # 打包test目录下的文件
zip -rj test.zip test/ # 打包test目录下文件，且压缩包不带test目录
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;压缩时如果需要对压缩包进行加密，可使用-P参数：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;zip -r test.zip test1 test -P 66666 # 使用密码66666加密
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2&gt;2.2. 解压&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;unzip test.zips # 解压文件
unzip -o test.zip -d dir # 将test.zip解压到dir目录
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2&gt;2.3. jar包&lt;/h2&gt;
&lt;p&gt;jar包是java归档包，但同样可用unzip解压查看里面的文件：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;unzip -o java.jar -d dir
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h1&gt;3. gzip&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;涉及参数说明：
-k 保留源文件
-d 解开压缩文件
-r 递归处理，将指定目录下的所有文件及子目录一并处理
-v 显示指令执行过程&lt;/p&gt;
&lt;p&gt;tar命令带有-z参数，并且打包成tar.gz文件时，便调用gzip进行了压缩。gzip对文本的压缩率约有60%~70%，压缩包文件常以gz为后缀。使用-k参数保留源文件：&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;gzip -k ./* [[当前目录下所有文件进行压缩，每个文件一个gz]]包
gzip -rkv ./* 递归压缩
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;解压也很简单：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;gzip -dv test.gz
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h1&gt;4. bzip2&lt;/h1&gt;
&lt;p&gt;tar命令使用-j参数将文件打包为tar.bz2时，便调用了bzip2进行压缩。bzip2压缩或解压后，会将源文件删除。如果需要保留源文件，可使用-k参数:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;bzip2 -zk test  [[压缩test]]文件
bzip2 -dk test.bz2  #解压
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h1&gt;5. rar/unrar&lt;/h1&gt;
&lt;p&gt;rar和unrar命令并非linux发行版自带命令，需要另外安装。常见用法如下：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;rar a test.tar test  [[将test文件压缩为test]].tar
unrar e test.rar     [[解压test]].tar
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h1&gt;6. war&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;jar
-c   创建war包
-v   显示过程信息
-f    指定归档文件名
-M  不创建条目的清单文件
-0   这个是阿拉伯数字，只打包不压缩的意思&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;jar -xvf game.war # 解压war包并存储在当前目录下
jar -cvf filename.war filename  压缩
jar -cvfM0 game.war ./      # 把当前目录下的所有文件打包成game.war
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h1&gt;7. 压缩率比较&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;压缩率一般来说：
tar.bz2&amp;gt;tar.gz&amp;gt;zip&amp;gt;tar
压缩率越高，压缩以及解压的时间也就越长。
总结
对文件进行压缩能够节省磁盘空间，进行网络传输时，也能节省带宽，但是需要注意的是，空间和时间是需要根据实际应用进行权衡的。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;参考：
&lt;a href="https://juejin.im/post/6844903923132694536#heading-18"&gt;看完这篇Linux下的解压缩你还不会吗？&lt;/a&gt;
&lt;a href="https://www.cnblogs.com/nhdlb/p/11568991.html#_label2"&gt;Linux：linux下解压*压缩tar.xz、等文件方法&lt;/a&gt;&lt;/p&gt;</content><category term="Tools"></category><category term="linux"></category></entry><entry><title>Manjaro proxy</title><link href="https://aiyoyo20.github.io/articles/manjaro-proxy.html" rel="alternate"></link><published>2020-09-03T10:20:00+08:00</published><updated>2020-09-03T10:20:00+08:00</updated><author><name>FING</name></author><id>tag:aiyoyo20.github.io,2020-09-03:/articles/manjaro-proxy.html</id><summary type="html">&lt;h1&gt;一、（图形化软件）Qv2ray&lt;/h1&gt;
&lt;p&gt;全平台： linux、win 、mac 都可有可使用的版本
是开源的的第三方图形化界面，可以直接使用v2ray，在而且在添加插件后可使用 ssr、torjan 等其他，现在在使用的就是这个，还可以查看速度以及使用量，但是其默认监听端口不是1080,需要的可以自己改动一下。
项目地址：  &lt;a href="https://github.com/Qv2ray/Qv2ray/releases%0A"&gt;https://github.com/Qv2ray/Qv2ray/releases
&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;1、安装：&lt;/h2&gt;
&lt;p&gt;直接去项目地址下载 AppImage 包， 直接双击打开就能使用，但是会提示缺少核心文件&lt;/p&gt;
&lt;p&gt;&lt;img alt="pic_1 qv2ray_error" src="images/M_P_qv2ray_error.png"&gt;&lt;/p&gt;
&lt;p&gt;去查看核心文件的所在位置，两种解决方法，一是去安装v2ray后更改路径，二是把去下载相应的vcore文件复制移动到其默认路径下&lt;/p&gt;
&lt;p&gt;去 &lt;a href="https://github.com/v2ray/v2ray-core/releases/"&gt;https://github.com/v2ray/v2ray-core/releases/&lt;/a&gt;下载v2ray-linux-64.zip文件，解压位置自定，然后改路径&lt;/p&gt;
&lt;p&gt;&lt;img alt="pic_2 qv2ray_path" src="images/M_P_qv2ray_path.png"&gt;
&lt;img alt="pic_3 qv2ray_show" src="images/M_P_qv2ray_show.png"&gt;&lt;/p&gt;
&lt;h2&gt;2、注意：&lt;/h2&gt;
&lt;p&gt;留意这个设置 …&lt;/p&gt;</summary><content type="html">&lt;h1&gt;一、（图形化软件）Qv2ray&lt;/h1&gt;
&lt;p&gt;全平台： linux、win 、mac 都可有可使用的版本
是开源的的第三方图形化界面，可以直接使用v2ray，在而且在添加插件后可使用 ssr、torjan 等其他，现在在使用的就是这个，还可以查看速度以及使用量，但是其默认监听端口不是1080,需要的可以自己改动一下。
项目地址：  &lt;a href="https://github.com/Qv2ray/Qv2ray/releases%0A"&gt;https://github.com/Qv2ray/Qv2ray/releases
&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;1、安装：&lt;/h2&gt;
&lt;p&gt;直接去项目地址下载 AppImage 包， 直接双击打开就能使用，但是会提示缺少核心文件&lt;/p&gt;
&lt;p&gt;&lt;img alt="pic_1 qv2ray_error" src="images/M_P_qv2ray_error.png"&gt;&lt;/p&gt;
&lt;p&gt;去查看核心文件的所在位置，两种解决方法，一是去安装v2ray后更改路径，二是把去下载相应的vcore文件复制移动到其默认路径下&lt;/p&gt;
&lt;p&gt;去 &lt;a href="https://github.com/v2ray/v2ray-core/releases/"&gt;https://github.com/v2ray/v2ray-core/releases/&lt;/a&gt;下载v2ray-linux-64.zip文件，解压位置自定，然后改路径&lt;/p&gt;
&lt;p&gt;&lt;img alt="pic_2 qv2ray_path" src="images/M_P_qv2ray_path.png"&gt;
&lt;img alt="pic_3 qv2ray_show" src="images/M_P_qv2ray_show.png"&gt;&lt;/p&gt;
&lt;h2&gt;2、注意：&lt;/h2&gt;
&lt;p&gt;留意这个设置，该客户端的默认端口不是1080，需要改的自己修改下才能使用&lt;/p&gt;
&lt;p&gt;&lt;img alt="pic_4 qv2ray_port" src="images/M_P_qv2ray_port.png"&gt;&lt;/p&gt;
&lt;h1&gt;二、代理的应用：&lt;/h1&gt;
&lt;h2&gt;1、Firefox&lt;/h2&gt;
&lt;p&gt;&lt;img alt="pic_5 " src="images/M_P_firefox.png"&gt;
填入代理端口：（例如：1080）
然后可以正常爬墙，不过是全局代理&lt;/p&gt;
&lt;h2&gt;2、Chrome （插件）（ SwitchOmega ）&lt;/h2&gt;
&lt;p&gt;(1)、把情景模式下的 proxy 和 auto switch 都删除&lt;/p&gt;
&lt;p&gt;(2)、新建情景模式：
1 )名称：Proxy；类型：代理服务器。
&lt;img alt="pic_6 SwitchOmega" src="images/M_P_SwitchOmega.png"&gt;
 2) 名称：Auto；类型：自动切换模式。
&lt;img alt="pic_7 auto" src="images/M_P_auto.png"&gt;
3). 设置 Proxy
   代理协议：HTTP；代理服务器：127.0.0.1；代理端口：1080
   &lt;img alt="pic_8 proxy_example" src="images/M_P_proxy_example.png"&gt;
4). 设置 Auto
个人感觉：实际应用中并不是很好用。所以自己在后期都不设置这项了。就直接连接和使用代理总有一个是能用的。&lt;/p&gt;
&lt;p&gt;在上面规则列表规则的情景模式里选择 proxy
规则列表格式选 AutoProxy
在 &lt;strong&gt;添加规则列表&lt;/strong&gt; 里面输入如下网址&lt;/p&gt;
&lt;p&gt;&lt;code&gt;https://raw.githubusercontent.com/gfwlist/gfwlist/master/gfwlist.txt&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;并点击下载链接里面的内容到本地&lt;/p&gt;
&lt;p&gt;&lt;img alt="pic_9 auto_example" src="images/M_P_auto_example.png"&gt;&lt;/p&gt;
&lt;p&gt;5). 应用选项，测试
   &lt;strong&gt;上面有一个细节，在点击下载文件的时候需要事先去SwitchOmega切换到代理，链接是被墙的，没有先开代理的话会一直提示下载失败（无法连接到网络）&lt;/strong&gt;&lt;/p&gt;
&lt;h2&gt;3、Telegram的使用：&lt;/h2&gt;
&lt;p&gt;telegram 也是需要手动去配置代理，上面说的什么方法对它都不管用，使用是必须使用代理的。&lt;/p&gt;
&lt;p&gt;&lt;img alt="pic_10 telegram" src="images/M_P_telegram.png"&gt;&lt;/p&gt;
&lt;p&gt;这样就可以正常的使用了。&lt;/p&gt;
&lt;h2&gt;4、终端代理&lt;/h2&gt;
&lt;p&gt;终端需要额外配置：
以上面的 qv2ray 为例，该客户端有两种方法，一个是 socket 通信,一个是 http 通信,两个方式对应的端口不同&lt;/p&gt;
&lt;h3&gt;(1)一次性的：&lt;/h3&gt;
&lt;p&gt;如果有想要 http 通信，http 的代理端口设置 12333，想执行 wget 或者 curl来下载国外的东西，可以使用如下命令：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="n"&gt;http_proxy&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;http://127.0.0.1:12333&amp;quot;&lt;/span&gt;
&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="n"&gt;https_proxy&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;http://127.0.0.1:12333&amp;quot;&lt;/span&gt;
&lt;span class="err"&gt;或者直接：&lt;/span&gt;
&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="n"&gt;ALL_PROXY&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;http&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="o"&gt;//&lt;/span&gt;&lt;span class="mf"&gt;127.0&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="mf"&gt;0.1&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;12333&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;或者走 socket5 协议的话，代理端口设置 1080&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="n"&gt;http_proxy&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;socks5://127.0.0.1:1080&amp;quot;&lt;/span&gt;
&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="n"&gt;https_proxy&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;socks5://127.0.0.1:1080&amp;quot;&lt;/span&gt;
&lt;span class="err"&gt;或者：&lt;/span&gt;
&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="n"&gt;ALL_PROXY&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;socks5://127.0.0.1:1080&amp;quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h3&gt;(2)永久的：&lt;/h3&gt;
&lt;p&gt;把代理服务器地址写入shell配置文件.bashrc或者.zshrc 直接在.bashrc或者.zshrc添加下面内容&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="n"&gt;http_proxy&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;http://127.0.0.1:12333&amp;quot;&lt;/span&gt;
&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="n"&gt;https_proxy&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;http://127.0.0.1:12333&amp;quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;或者走socket5协议的话，代理端口是1080&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="n"&gt;http_proxy&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;socks5://127.0.0.1:1080&amp;quot;&lt;/span&gt;
&lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="n"&gt;https_proxy&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;socks5://127.0.0.1:1080&amp;quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;然后刷新设置&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;source ~/.bashrc
或者：
source ~/.zshrc
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h3&gt;(3)自动开启关闭：&lt;/h3&gt;
&lt;p&gt;或者通过设置 alias 简写来简化操作，每次要用的时候输入setproxy，不用了就unsetproxy。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;alias&lt;/span&gt; &lt;span class="n"&gt;setSocks&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;export ALL_PROXY=socks5://127.0.0.1:1080&amp;quot;&lt;/span&gt;
&lt;span class="n"&gt;alias&lt;/span&gt; &lt;span class="n"&gt;setHttp&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;export ALL_PROXY=&amp;quot;&lt;/span&gt;&lt;span class="n"&gt;http&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="o"&gt;//&lt;/span&gt;&lt;span class="mf"&gt;127.0&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="mf"&gt;0.1&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;12333&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;
&lt;span class="n"&gt;alias&lt;/span&gt; &lt;span class="n"&gt;unsetproxy&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;unset ALL_PROXY&amp;quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;或在~/.zshrc中添加如下脚本后刷新&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="p"&gt;[[&lt;/span&gt;&lt;span class="err"&gt;设置&lt;/span&gt;&lt;span class="n"&gt;socks5&lt;/span&gt;&lt;span class="p"&gt;]]&lt;/span&gt;&lt;span class="err"&gt;代理&lt;/span&gt;
&lt;span class="n"&gt;function&lt;/span&gt; &lt;span class="n"&gt;setsocks5&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="n"&gt;ALL_PROXY&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;socks5://127.0.0.1:1080&amp;quot;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="p"&gt;[[&lt;/span&gt;&lt;span class="err"&gt;设置&lt;/span&gt;&lt;span class="n"&gt;http&lt;/span&gt;&lt;span class="p"&gt;]]&lt;/span&gt;&lt;span class="err"&gt;代理&lt;/span&gt;
&lt;span class="n"&gt;function&lt;/span&gt; &lt;span class="n"&gt;http&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="n"&gt;ALL_PROXY&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;http://127.0.0.1:12333&amp;quot;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="c1"&gt;# 取消终端代理&lt;/span&gt;
&lt;span class="n"&gt;function&lt;/span&gt; &lt;span class="n"&gt;unsetProxy&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="n"&gt;unset&lt;/span&gt; &lt;span class="n"&gt;ALL_PROXY&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="c1"&gt;# 测试终端代理&lt;/span&gt;
&lt;span class="n"&gt;function&lt;/span&gt; &lt;span class="n"&gt;testProxy&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="n"&gt;curl&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;http://ip.cn&amp;#39;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h1&gt;通常端口号是固定的，不过如果有需要随时变换的参考如下脚本&lt;/h1&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;function&lt;/span&gt; &lt;span class="n"&gt;setProxy&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;export&lt;/span&gt; &lt;span class="n"&gt;ALL_PROXY&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;socks5://127.0.0.1:${1}&amp;quot;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="err"&gt;启动为：&lt;/span&gt;
&lt;span class="n"&gt;setProxy&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;port&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;   &lt;span class="c1"&gt;# 启动终端代理连接&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;可以使用&lt;code&gt;curl -i httpbin.org/get&lt;/code&gt;来查看自己的 ip，如果确实发生了改变，那应该就是成功地设置代理了。&lt;/p&gt;
&lt;h2&gt;5、git加速&lt;/h2&gt;
&lt;p&gt;git很明显是被墙的额而且经常使用，直接配置git的命令。使用 ss/ssr ( socks5 类的都可以)来加快 git 的速度
分辨需要设置的代理&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;HTTP 形式：&lt;blockquote&gt;
&lt;p&gt;git clone https://github.com/owner/git.git&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;SSH 形式：&lt;blockquote&gt;
&lt;p&gt;git clone git@github.com/owner/git.git&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;一、HTTP 形式&lt;/h3&gt;
&lt;h4&gt;法一：&lt;/h4&gt;
&lt;p&gt;走 HTTP 代理&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;git config --global http.proxy &amp;quot;http://127.0.0.1:12333&amp;quot;
git config --global https.proxy &amp;quot;http://127.0.0.1:12333&amp;quot;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;走 socks5 代理（如 Shadowsocks）&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;git config --global http.proxy &amp;quot;socks5://127.0.0.1:1080&amp;quot;
git config --global https.proxy &amp;quot;socks5://127.0.0.1:1080&amp;quot;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;取消设置&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;git config --global --unset http.proxy
git config --global --unset https.proxy
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h4&gt;法二：&lt;/h4&gt;
&lt;p&gt;在 ~/.gitconfig 文件中加入以下配置:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;[http]&lt;/span&gt;
    &lt;span class="na"&gt;proxy&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;socks5://127.0.0.1:1080&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;注意，上明配置等同于命令 &lt;code&gt;git config --global http.proxy 'socks5://127.0.0.1:1080'&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Git不认https.proxy，设置http.proxy就可以支持 https 了。&lt;/p&gt;
&lt;h3&gt;二、SSH 形式&lt;/h3&gt;
&lt;p&gt;在 ~/.ssh/config 文件中加入以下配置:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;Host github.com
HostName github.com
User git
Port 22
ProxyCommand /usr/bin/ncat --proxy 127.0.0.1:1080 --proxy-type socks5 %h %p
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h3&gt;端口被占用解决方法：&lt;/h3&gt;
&lt;p&gt;有时候会出现弹窗警告1080端口被占用提示：
manjaro的端口管理工具：net-tools是&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;yay&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;S&lt;/span&gt; &lt;span class="n"&gt;net&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;tools&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;查看相应的端口号占用的程序：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;netstat -lnp&lt;span class="p"&gt;|&lt;/span&gt;grep &lt;span class="m"&gt;1080&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;img alt="pic_11 port_error" src="images/M_P_port_error.png"&gt;&lt;/p&gt;
&lt;p&gt;关闭应用：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;kill -9 [42058]
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;不知道这个原因的出现是bug还是什么的吧，切换节点但是端口释放不成功需要像上面那样，有时候退出后也会有端口释放不成功，被长期占用的情况，而且使用会导致电脑卡，在退出的时候尤为明显，有个3、5秒的卡顿。&lt;/p&gt;
&lt;h1&gt;二、 脚本安装&lt;/h1&gt;
&lt;h1&gt;1、ssr&lt;/h1&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;cd /opt
# 下载
curl https://raw.githubusercontent.com/the0demiurge/CharlesScripts/master/charles/bin/ssr -o &amp;quot;ssr&amp;quot;
# 或者
wget https://raw.githubusercontent.com/the0demiurge/CharlesScripts/master/charles/bin/ssr -O &amp;quot;ssr&amp;quot;
# 添加执行权限
chmod a+x ssr
# 为脚本创造软链接
sudo ln -s /home/fish/opt/ssr /usr/bin/ssr
# 安装依赖
yaourt -S jq tsocks
# 安装ssr客户端
ssr install
# 配置
ssr config  # 详细配置见ssr配置文件说明
# 启动
ssr start
# 停止
ssr stop
# 重启
ssr restart
# 卸载
ssr uninstall
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h1&gt;2、v2ray&lt;/h1&gt;</content><category term="Tools"></category><category term="linux"></category></entry><entry><title>酸酸乳配置</title><link href="https://aiyoyo20.github.io/articles/suan-suan-ru-pei-zhi.html" rel="alternate"></link><published>2020-09-03T10:20:00+08:00</published><updated>2020-09-03T10:20:00+08:00</updated><author><name>FING</name></author><id>tag:aiyoyo20.github.io,2020-09-03:/articles/suan-suan-ru-pei-zhi.html</id><summary type="html">&lt;h1&gt;1. 配置文件各项说明&lt;/h1&gt;
&lt;p&gt;各选项说明（注意，你应该修改使用initcfg.sh脚本初始化后的user-config.json）：&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Name&lt;/th&gt;
&lt;th&gt;Explanation&lt;/th&gt;
&lt;th&gt;中文说明&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;server&lt;/td&gt;
&lt;td&gt;the address your server listens&lt;/td&gt;
&lt;td&gt;监听地址&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;server_ipv6&lt;/td&gt;
&lt;td&gt;the ipv6 address your server listens&lt;/td&gt;
&lt;td&gt;ipv6地址&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;server_port&lt;/td&gt;
&lt;td&gt;server port&lt;/td&gt;
&lt;td&gt;监听端口&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;local_address&lt;/td&gt;
&lt;td&gt;the address your local listens&lt;/td&gt;
&lt;td&gt;本地地址&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;local_port&lt;/td&gt;
&lt;td&gt;local port&lt;/td&gt;
&lt;td&gt;本地端口&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;password&lt;/td&gt;
&lt;td&gt;password used for encryption&lt;/td&gt;
&lt;td&gt;密码&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;timeout&lt;/td&gt;
&lt;td&gt;in seconds&lt;/td&gt;
&lt;td&gt;超时时间 …&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;</summary><content type="html">&lt;h1&gt;1. 配置文件各项说明&lt;/h1&gt;
&lt;p&gt;各选项说明（注意，你应该修改使用initcfg.sh脚本初始化后的user-config.json）：&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Name&lt;/th&gt;
&lt;th&gt;Explanation&lt;/th&gt;
&lt;th&gt;中文说明&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;server&lt;/td&gt;
&lt;td&gt;the address your server listens&lt;/td&gt;
&lt;td&gt;监听地址&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;server_ipv6&lt;/td&gt;
&lt;td&gt;the ipv6 address your server listens&lt;/td&gt;
&lt;td&gt;ipv6地址&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;server_port&lt;/td&gt;
&lt;td&gt;server port&lt;/td&gt;
&lt;td&gt;监听端口&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;local_address&lt;/td&gt;
&lt;td&gt;the address your local listens&lt;/td&gt;
&lt;td&gt;本地地址&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;local_port&lt;/td&gt;
&lt;td&gt;local port&lt;/td&gt;
&lt;td&gt;本地端口&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;password&lt;/td&gt;
&lt;td&gt;password used for encryption&lt;/td&gt;
&lt;td&gt;密码&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;timeout&lt;/td&gt;
&lt;td&gt;in seconds&lt;/td&gt;
&lt;td&gt;超时时间&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;udp_timeout&lt;/td&gt;
&lt;td&gt;in seconds&lt;/td&gt;
&lt;td&gt;UDP链超时时间&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;udp_cache&lt;/td&gt;
&lt;td&gt;cache size&lt;/td&gt;
&lt;td&gt;UDP链缓冲区大小&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;method&lt;/td&gt;
&lt;td&gt;default: "aes-256-cfb", see Encryption&lt;/td&gt;
&lt;td&gt;加密方式&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;protocol&lt;/td&gt;
&lt;td&gt;default："origin"&lt;/td&gt;
&lt;td&gt;协议插件，默认"origin"&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;protocol_param&lt;/td&gt;
&lt;td&gt;default：""&lt;/td&gt;
&lt;td&gt;协议插件参数，默认""&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;obfs&lt;/td&gt;
&lt;td&gt;default："tls1.2_ticket_auth_compatible"&lt;/td&gt;
&lt;td&gt;混淆插件，默认"tls1.2_ticket_auth_compatible"&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;obfs_param&lt;/td&gt;
&lt;td&gt;default：""&lt;/td&gt;
&lt;td&gt;混淆插件参数，默认""&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;redirect&lt;/td&gt;
&lt;td&gt;default：""&lt;/td&gt;
&lt;td&gt;重定向参数，默认""&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;dns_ipv6&lt;/td&gt;
&lt;td&gt;default:false&lt;/td&gt;
&lt;td&gt;是否优先使用IPv6地址，有IPv6时可开启&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;fast_open&lt;/td&gt;
&lt;td&gt;use TCP_FASTOPEN, true / false&lt;/td&gt;
&lt;td&gt;快速打开(仅限linux客户端)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;workers&lt;/td&gt;
&lt;td&gt;number of workers, available on Unix/Linux&lt;/td&gt;
&lt;td&gt;线程（仅限linux客户端）&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;verbose&lt;/td&gt;
&lt;td&gt;display verbose debug info&lt;/td&gt;
&lt;td&gt;显示调试信息&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;connect_verbose_info&lt;/td&gt;
&lt;td&gt;display connection verbose info&lt;/td&gt;
&lt;td&gt;显示连接信息&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;forbidden_ip&lt;/td&gt;
&lt;td&gt;forbidden IP set for outbound&lt;/td&gt;
&lt;td&gt;阻止连接到此IP列表&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;forbidden_port&lt;/td&gt;
&lt;td&gt;forbidden port set for outbound&lt;/td&gt;
&lt;td&gt;阻止连接到此端口列表&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;ignore_bind&lt;/td&gt;
&lt;td&gt;not bind the IP set&lt;/td&gt;
&lt;td&gt;不绑定的IP列表&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;out_bind&lt;/td&gt;
&lt;td&gt;force bind this IPv4 IP&lt;/td&gt;
&lt;td&gt;强制绑定此IPv4地址&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;out_bindv6&lt;/td&gt;
&lt;td&gt;force bind this IPv6 IP&lt;/td&gt;
&lt;td&gt;强制绑定此IPv6地址&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;additional_ports&lt;/td&gt;
&lt;td&gt;additional ports for multiuser mode&lt;/td&gt;
&lt;td&gt;多用户模式下配置额外端口&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;speed_limit_per_con&lt;/td&gt;
&lt;td&gt;rate limit for each connection&lt;/td&gt;
&lt;td&gt;单连接限速，单位KB&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;speed_limit_per_user&lt;/td&gt;
&lt;td&gt;rate limit for each user&lt;/td&gt;
&lt;td&gt;单用户限速，单位KB&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;其中各protocol与obfs介绍参见：&lt;a href="https://github.com/shadowsocksr-backup/shadowsocks-rss/wiki/obfs"&gt;混淆插件说明&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;注：客户端的protocol和obfs配置必须与服务端的一致，除非服务端配置为兼容插件。&lt;/p&gt;
&lt;p&gt;redirect参数说明：&lt;/p&gt;
&lt;p&gt;值为空字符串或一个列表，若为列表示例如&lt;/p&gt;
&lt;p&gt;"redirect":["bing.com", "cloudflare.com:443"],&lt;/p&gt;
&lt;p&gt;作用是在连接方的数据不正确的时候，把数据重定向到列表中的其中一个地址和端口（不写端口则 视为80），以伪装为目标服务器。&lt;/p&gt;
&lt;p&gt;dns_ipv6参数说明：&lt;/p&gt;
&lt;p&gt;为true则指定服务器优先使用IPv6地址。仅当服务器能访问IPv6地址时可以用，否则会导致有IPv6地 址的网站无法打开。&lt;/p&gt;
&lt;p&gt;一般情况下，只需要修改以下五项即可：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&amp;quot;server_port&amp;quot;:8388,        //端口
&amp;quot;password&amp;quot;:&amp;quot;password&amp;quot;,     //密码
&amp;quot;protocol&amp;quot;:&amp;quot;origin&amp;quot;,       //协议插件
&amp;quot;obfs&amp;quot;:&amp;quot;http_simple&amp;quot;,      //混淆插件
&amp;quot;method&amp;quot;:&amp;quot;aes-256-cfb&amp;quot;,    //加密方式
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2&gt;1.1. 多端口配置&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;{
    &amp;quot;server&amp;quot;:&amp;quot;0.0.0.0&amp;quot;,
    &amp;quot;server_ipv6&amp;quot;: &amp;quot;[::]&amp;quot;,
    &amp;quot;local_address&amp;quot;:&amp;quot;127.0.0.1&amp;quot;,
    &amp;quot;local_port&amp;quot;:1080,
    &amp;quot;port_password&amp;quot;:{
        &amp;quot;80&amp;quot;:&amp;quot;password1&amp;quot;,
        &amp;quot;443&amp;quot;:&amp;quot;password2&amp;quot;
    },
    &amp;quot;timeout&amp;quot;:300,
    &amp;quot;method&amp;quot;:&amp;quot;aes-256-cfb&amp;quot;,
    &amp;quot;protocol&amp;quot;: &amp;quot;auth_sha1_compatible&amp;quot;,
    &amp;quot;protocol_param&amp;quot;: &amp;quot;&amp;quot;,
    &amp;quot;obfs&amp;quot;: &amp;quot;http_simple_compatible&amp;quot;,
    &amp;quot;obfs_param&amp;quot;: &amp;quot;&amp;quot;,
    &amp;quot;redirect&amp;quot;: &amp;quot;&amp;quot;,
    &amp;quot;dns_ipv6&amp;quot;: false,
    &amp;quot;fast_open&amp;quot;: false,
    &amp;quot;workers&amp;quot;: 1
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;按照格式修改端口和密码：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;    &amp;quot;port_password&amp;quot;:{
        &amp;quot;80&amp;quot;:&amp;quot;password1&amp;quot;,       //端口和密码1
        &amp;quot;443&amp;quot;:&amp;quot;password2&amp;quot;       //端口和密码2
    },
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;如果要为每个端口配置不同的混淆协议，请写入以下配置：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;{
    &amp;quot;server&amp;quot;:&amp;quot;0.0.0.0&amp;quot;,
    &amp;quot;server_ipv6&amp;quot;:&amp;quot;::&amp;quot;,
    &amp;quot;local_address&amp;quot;:&amp;quot;127.0.0.1&amp;quot;,
    &amp;quot;local_port&amp;quot;:1080,
    &amp;quot;port_password&amp;quot;:{
        &amp;quot;8388&amp;quot;:{&amp;quot;protocol&amp;quot;:&amp;quot;auth_simple&amp;quot;, &amp;quot;password&amp;quot;:&amp;quot;abcde&amp;quot;, &amp;quot;obfs&amp;quot;:&amp;quot;http_simple&amp;quot;, &amp;quot;obfs_param&amp;quot;:&amp;quot;&amp;quot;},
        &amp;quot;8389&amp;quot;:{&amp;quot;protocol&amp;quot;:&amp;quot;origin&amp;quot;, &amp;quot;password&amp;quot;:&amp;quot;abcde&amp;quot;}
    },
    &amp;quot;timeout&amp;quot;:300,
    &amp;quot;method&amp;quot;:&amp;quot;aes-256-cfb&amp;quot;,
    &amp;quot;protocol&amp;quot;: &amp;quot;auth_sha1_compatible&amp;quot;,
    &amp;quot;protocol_param&amp;quot;: &amp;quot;&amp;quot;,
    &amp;quot;obfs&amp;quot;: &amp;quot;http_simple_compatible&amp;quot;,
    &amp;quot;obfs_param&amp;quot;: &amp;quot;&amp;quot;,
    &amp;quot;redirect&amp;quot;: &amp;quot;&amp;quot;,
    &amp;quot;dns_ipv6&amp;quot;: false,
    &amp;quot;fast_open&amp;quot;: false,
    &amp;quot;workers&amp;quot;: 1
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;按格式修改端口、密码以及混淆协议。也可以和以前的格式混合使用，如果某个端口不配置混淆协 议，则会使用下面的默认"obfs"配置。&lt;/p&gt;</content><category term="Tools"></category><category term="linux"></category></entry><entry><title>sublime</title><link href="https://aiyoyo20.github.io/articles/sublime.html" rel="alternate"></link><published>2020-09-03T10:20:00+08:00</published><updated>2020-09-03T10:20:00+08:00</updated><author><name>FING</name></author><id>tag:aiyoyo20.github.io,2020-09-03:/articles/sublime.html</id><summary type="html">&lt;h1&gt;一、安装&lt;/h1&gt;
&lt;p&gt;官网下载压缩包 :   &lt;a href="https://www.sublimetext.com/3"&gt;https://www.sublimetext.com/3&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;win&lt;/h2&gt;
&lt;h3&gt;正常安装&lt;/h3&gt;
&lt;p&gt;windows 的安装下载包然后双击安装就好了，如果有自己之前的配置文件备份的话，复制到&lt;code&gt;C:\Users\aiyoy\AppData\Roaming\Sublime Text 3&lt;/code&gt;即可。&lt;/p&gt;
&lt;h3&gt;便携版本&lt;/h3&gt;
&lt;p&gt;安装的时候选择一个比较容易找到的位置，默认的也可以，不过得去找到安装的位置，安装好之后先不要打开，在 Sublime Text 3 文件夹下新建一个  Data (注意大小写) 文件夹并删除 &lt;code&gt;C:\Users\aiyoy\AppData\Roaming\&lt;/code&gt;下的 Sublime Text 3 文件夹，这时候启动安装插件就会在Data目录中了，也可以直接复制自己的配置文件到Data目录中&lt;/p&gt;
&lt;p&gt;然后这个文件夹就可以复制进u盘随身带着了&lt;/p&gt;
&lt;h2&gt;linux …&lt;/h2&gt;</summary><content type="html">&lt;h1&gt;一、安装&lt;/h1&gt;
&lt;p&gt;官网下载压缩包 :   &lt;a href="https://www.sublimetext.com/3"&gt;https://www.sublimetext.com/3&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;win&lt;/h2&gt;
&lt;h3&gt;正常安装&lt;/h3&gt;
&lt;p&gt;windows 的安装下载包然后双击安装就好了，如果有自己之前的配置文件备份的话，复制到&lt;code&gt;C:\Users\aiyoy\AppData\Roaming\Sublime Text 3&lt;/code&gt;即可。&lt;/p&gt;
&lt;h3&gt;便携版本&lt;/h3&gt;
&lt;p&gt;安装的时候选择一个比较容易找到的位置，默认的也可以，不过得去找到安装的位置，安装好之后先不要打开，在 Sublime Text 3 文件夹下新建一个  Data (注意大小写) 文件夹并删除 &lt;code&gt;C:\Users\aiyoy\AppData\Roaming\&lt;/code&gt;下的 Sublime Text 3 文件夹，这时候启动安装插件就会在Data目录中了，也可以直接复制自己的配置文件到Data目录中&lt;/p&gt;
&lt;p&gt;然后这个文件夹就可以复制进u盘随身带着了&lt;/p&gt;
&lt;h2&gt;linux（manjaro）&lt;/h2&gt;
&lt;h3&gt;（1）手动下载安装&lt;/h3&gt;
&lt;p&gt;解压缩，将目录名改为sublime_text，移动到 &lt;code&gt;/opt/&lt;/code&gt;目录下&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;sudo mv sublime_text_3 sublime_text
sudo mv sublime_text /opt/
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;打开解压目录找到 .desktop 文件打开修改路径然后复制到相应的位置，或者电脑快捷方式所在的&lt;code&gt;/usr/share/applications&lt;/code&gt;即可在应用管理器里面找到。&lt;/p&gt;
&lt;h3&gt;（2）通过命令行安装&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;yay -S sublime-text-3
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2&gt;mac&lt;/h2&gt;
&lt;h1&gt;二、配置&lt;/h1&gt;
&lt;h2&gt;安装 Package Control (插件管理工具)：&lt;/h2&gt;
&lt;p&gt;按 ctrl + ` 或者 View &amp;gt; Show Console ，打开 Console 一次性输入如下代码，回车：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;urllib.request&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;&lt;span class="nn"&gt;os&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;&lt;span class="nn"&gt;hashlib&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;h&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;6f4c264a24d933ce70df5dedcf1dcaee&amp;#39;&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;ebe013ee18cced0ef93d5f746d80ef60&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;pf&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;Package Control.sublime-package&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;ipp&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;sublime&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;installed_packages_path&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt; &lt;span class="n"&gt;urllib&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;install_opener&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;urllib&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;build_opener&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;urllib&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ProxyHandler&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="n"&gt;by&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;urllib&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;urlopen&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;http://packagecontrol.io/&amp;#39;&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;pf&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;replace&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39; &amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;%20&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;read&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt; &lt;span class="n"&gt;dh&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;hashlib&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sha256&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;by&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;hexdigest&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt; &lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Error validating download (got &lt;/span&gt;&lt;span class="si"&gt;%s&lt;/span&gt;&lt;span class="s1"&gt; instead of &lt;/span&gt;&lt;span class="si"&gt;%s&lt;/span&gt;&lt;span class="s1"&gt;), please try manual install&amp;#39;&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;dh&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;h&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;dh&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="n"&gt;h&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="nb"&gt;open&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;join&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;ipp&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;pf&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;wb&amp;#39;&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;write&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;by&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h3&gt;为 Package Control 设置代理&lt;/h3&gt;
&lt;p&gt;（不设置也可以正常使用，但是在安装插件及更新插件的时候会比较慢）&lt;/p&gt;
&lt;p&gt;Prefrences --&amp;gt; Packages Settings  --&amp;gt; Package Control  --&amp;gt; Settngs 增添下面的代码&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;{
    &amp;quot;auto_upgrade&amp;quot;: false,
    &amp;quot;bootstrapped&amp;quot;: true,
    // proxy setting
    &amp;quot;http_proxy&amp;quot;:&amp;quot;http://127.0.0.1:12333&amp;quot;,
    &amp;quot;https_proxy&amp;quot;:&amp;quot;http://127.0.0.1:12333&amp;quot;,
    &amp;quot;in_process_packages&amp;quot;:
    [
    ],
    &amp;quot;install_missing&amp;quot;: false,
    &amp;quot;installed_packages&amp;quot;:
    [
        &amp;quot;Anaconda&amp;quot;,
        &amp;quot;AutoPEP8&amp;quot;,
        &amp;quot;Git&amp;quot;,
        &amp;quot;Git blame&amp;quot;,
        &amp;quot;Godef&amp;quot;,
        &amp;quot;HTML-CSS-JS Prettify&amp;quot;,
        &amp;quot;Package Control&amp;quot;,
        &amp;quot;PackageResourceViewer&amp;quot;,
        &amp;quot;SublimeCodeIntel&amp;quot;
    ],
    &amp;quot;remove_orphaned&amp;quot;: false,
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2&gt;插件：&lt;/h2&gt;
&lt;h3&gt;安装方法：&lt;/h3&gt;
&lt;h4&gt;1、自动安装：&lt;/h4&gt;
&lt;p&gt;&lt;code&gt;Ctrl+Shift+P&lt;/code&gt; 打开命令行模式，输入 pci（习惯性问题，输入 Package Control: Install Package 里面的有的字母的简写都会模糊匹配出来的），然后回车选择：&lt;code&gt;Package Control: Install Package&lt;/code&gt; 。搜索插件名称即可自动安装，注意留意底部的安装进程，如果安装失败的话可以选择手动安装。&lt;/p&gt;
&lt;h4&gt;2、手动安装&lt;/h4&gt;
&lt;p&gt;去 github 上或者你能找到的渠道下载相应的包。
如果插件是打包好的话复制到 Installed Packages下，是文件目录的话复制到 Packages文件夹下。&lt;/p&gt;
&lt;h3&gt;1、Web&lt;/h3&gt;
&lt;h4&gt;emmet：&lt;/h4&gt;
&lt;p&gt;前端神器。一个可以极大提高 web 开发者 HTML 和 CSS 工作效率的工具箱组件。
在开发前端项目时，常常需要编写大量的 HTML/CSS代码，标签、属性等使用常规方式一个一个敲打效率极低。
还好有 Emmet，它提供了相对简单的语法规则。使得编写很少的代码就能生成预期，极大的提高了代码的编写效率，并且它还支持觉得多数的编辑器，查看更多。
&lt;a href="https://packagecontrol.io/packages/Emmet"&gt;查看介绍&lt;/a&gt;&lt;/p&gt;
&lt;h5&gt;问题一：&lt;/h5&gt;
&lt;p&gt;如下报错：&lt;/p&gt;
&lt;p&gt;&lt;img alt="pic_1 sublime_pyV8_error" src="images/sublime_pyV8_error.png"&gt;&lt;/p&gt;
&lt;p&gt;因为下载下来的 PyV8 的包是一个文件夹，按照正常情况是放在 packages 下的，但是安装之后一直无法使用，以为是快捷键冲突，又是改快捷键、又是删除其余的包、又是重装、又是更换不同版本的 PyV8 的包的都没有解决，然后想着是不是包管理器给安装错误了，调出命令面板想重装一下，然后留意到加载emmet包然后加载 PyV8 插件的时候是报错，也就是包未加载成功。
&lt;img alt="pic_2 sublime_pyV8_error_tip" src="images/sublime_pyv8_error_tip.png"&gt;&lt;/p&gt;
&lt;p&gt;最后终于找到解决方法：PyV8 包的位置应该是在与 emmet 包同级目录下。也就是&lt;code&gt;.config/sublime-text-3/Installed Packages/&lt;/code&gt;下，而不是reference－－Browser Packages指定的&lt;code&gt;.config/sublime-text-3/Packages/&lt;/code&gt;下。
解决方法：
    去提示的网址：https://github.com/emmetio/pyv8-binaries 下载相应的包，解压到里面的文件 &lt;code&gt;/home/fish/.config/sublime-text-3/Packages/PyV8&lt;/code&gt;下，没有PyV8文件夹就创建一个（比如我的 &lt;code&gt;pyv8-linux64-p3&lt;/code&gt;，或者我在测试的时候发现把里面的文件复制到 PyV8 里面也是可以的，但直接复制比较方便快捷，也易于下次区分是什么系统的文件），然后重启解决。&lt;/p&gt;
&lt;p&gt;做完这些后不会弹窗报错了，但是启动的时候地下的任务栏都会提示加载 PyV8,调出命令板也是每次都会有提示，但那不是错误，而是其默认会在启动时检查并更新 PyV8，阻止PyV8 的更新设置方法是：Preferences-&amp;gt;Packages Settings--&amp;gt;Emmet--&amp;gt;Settings User，修改 Emmet 的配置文件即可，内容是：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;{&amp;quot;disable_pyv8_update&amp;quot;:true}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;使用方法：
https://docs.emmet.io/cheat-sheet/
https://code.z01.com/Emmet/&lt;/p&gt;
&lt;h4&gt;ColorHighLight&lt;/h4&gt;
&lt;p&gt;它可以展示你所选择的颜色代码（
像 “FFFFFF”, “rgb(255,255,255)”, “white”）的真正颜色。同时它还包含一个颜色选择器让你可以方便地更改颜色。&lt;/p&gt;
&lt;h4&gt;HTML-CSS-JS Prettify&lt;/h4&gt;
&lt;p&gt;有时候会报错
&lt;img alt="20201003192502711_7297" src="images/sublime_node_path_error.png"&gt;
安装后需要配合nodejs使用所以需要安装nodejs并设置node的位置
&lt;img alt="屏幕截图(6)" src="images/sublime_node_setting.png"&gt;
如果想要改快捷键
Preferences-&amp;gt;Key Bindings–User”里新增：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;{
&amp;quot;keys&amp;quot;: [&amp;quot;ctrl+shift+o&amp;quot;],
&amp;quot;command&amp;quot;: &amp;quot;htmlprettify&amp;quot;
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;为了正常使用建议更改后测试一下是否有效，防止与其他的互相冲突&lt;/p&gt;
&lt;h4&gt;SideBarEnhancements&lt;/h4&gt;
&lt;p&gt;右键菜单增强插件
SideBarEnhancements是一款很实用的右键菜单增强插件，有以 diff 形式显示未保存的修改、在文件管理器中显示该文件、复制文件路径、在侧边栏中定位该文件等功能，也有基础的诸如新建文件/目录，编辑，打开/运行，显示，在选择中/上级目录/项目中查找，剪切，复制，粘贴，重命名，删除，刷新等常见功能。&lt;/p&gt;
&lt;p&gt;Copy as Text... 是 SideBarEnhancements 的又一个特色功能，可以复制包含各种形式的路径、URL（甚至包括 base64 的 data:uri）、转码后的文件名、各种 HTML Tag（a、img、script、style）等&lt;/p&gt;
&lt;p&gt;编辑快捷键在浏览器打开
Preferences-&amp;gt;Key Bindings–User”里新增：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;[
    // side_bar 设置快速在浏览器打开
    // chrome，请根据个人电脑修改浏览器路径
    {
        &amp;quot;keys&amp;quot;: [&amp;quot;f1&amp;quot;],
        &amp;quot;command&amp;quot;: &amp;quot;side_bar_files_open_with&amp;quot;,
        &amp;quot;args&amp;quot;: { &amp;quot;paths&amp;quot;: [], &amp;quot;application&amp;quot;:&amp;quot;C:/Program Files (x86)/Google/Chrome/Application/chrome.exe&amp;quot;, &amp;quot;extensions&amp;quot;:&amp;quot;.*&amp;quot; }
    },
    // firefox
    {
        &amp;quot;keys&amp;quot;: [&amp;quot;f2&amp;quot;],
        &amp;quot;command&amp;quot;: &amp;quot;side_bar_files_open_with&amp;quot;,
        &amp;quot;args&amp;quot;: { &amp;quot;paths&amp;quot;: [], &amp;quot;application&amp;quot;: &amp;quot;C:/Program Files (x86)/Mozilla Firefox/firefox.exe&amp;quot;, &amp;quot;extensions&amp;quot;:&amp;quot;.*&amp;quot; }
    },
    // Edge
    {
        &amp;quot;keys&amp;quot;: [&amp;quot;f3&amp;quot;],
        &amp;quot;command&amp;quot;: &amp;quot;side_bar_files_open_with&amp;quot;,
        &amp;quot;args&amp;quot;: { &amp;quot;paths&amp;quot;: [], &amp;quot;application&amp;quot;: &amp;quot;C:/Program Files (x86)/Microsoft/Edge/Application/msedge.exe&amp;quot;, &amp;quot;extensions&amp;quot;:&amp;quot;.*&amp;quot; }
    },
    // IE
     {
        &amp;quot;keys&amp;quot;: [&amp;quot;f4&amp;quot;],
        &amp;quot;command&amp;quot;: &amp;quot;side_bar_files_open_with&amp;quot;,
        &amp;quot;args&amp;quot;: { &amp;quot;paths&amp;quot;: [], &amp;quot;application&amp;quot;: &amp;quot;C:/Program Files/Internet Explorer/iexplore.exe&amp;quot;, &amp;quot;extensions&amp;quot;:&amp;quot;.*&amp;quot; }
    },
]
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;个人习惯不太喜欢这个，虽然增加了很多功能，但是很多实际上并不需要，且在linux的命令行下移动、改名、删除会更方便，就放弃使用了&lt;/p&gt;
&lt;h4&gt;AdvancedNewFile&lt;/h4&gt;
&lt;p&gt;用 Sublime text 新建文件的快捷键是，ctrl+ N会新建一个名为untitled的文件，CTRL+S 保存，然后在弹出的 Finder 中填写真正需要的文件名，然后点击 Save 。可谓很是麻烦，而且如果需要新建多层次的文件夹，则需要转换到 Finder 进入到相应的工程目录下，一层一层新建，操作步骤十分繁琐而且费事。&lt;/p&gt;
&lt;p&gt;然而，如果用 AdvancedNewFile，一切将会变得十分简单。&lt;/p&gt;
&lt;p&gt;ctrl+ art + N 即新建，然后 sublime text 底部会弹出一个文本输入框，只要在里面输入文件名，或多层次的路径，然后回车即可。
相应文件或多层次的路径就会立刻在工程目录下新建完成。
另外再输入的时候也支持tab补全操作。&lt;/p&gt;
&lt;h4&gt;AlignTab&lt;/h4&gt;
&lt;p&gt;使用正则表达式来帮助代码对齐，比如几行代码以=号对齐。
&lt;a href="https://packagecontrol.io/packages/AlignTab"&gt;查看介绍&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;以上插件覆盖HTML，CSS，JavaScript，jQuery，CSS颜色显示，代码块级高亮，代码格式化，代码对齐，满足绝大多数前端的需求。&lt;/p&gt;
&lt;p&gt;至于用Sass就装Sass，Sassbuild，git就下sublimeGit，git Gutter，想用某个主题就下主题，想扩展侧边栏就扩展侧边栏，这毕竟不是每个人必须的。&lt;/p&gt;
&lt;h4&gt;All Autocomplete&lt;/h4&gt;
&lt;p&gt;Sublime Text 默认的 Autocomplete 功能只考虑当前的文件，而 AllAutocomplete 插件会搜索所有打开的文件来寻找匹配的提示词。&lt;/p&gt;
&lt;hr&gt;
&lt;h4&gt;CSS3：&lt;/h4&gt;
&lt;p&gt;CSS3语法高亮、CSS语法提示，美中不足的是缺少游览器私有属性高亮。
&lt;a href="https://packagecontrol.io/packages/CSS3"&gt;查看介绍&lt;/a&gt;&lt;/p&gt;
&lt;h4&gt;CSS Extended Completions：&lt;/h4&gt;
&lt;p&gt;关联CSS文件，智能提示css文件中的类名，非常好用。
&lt;a href="https://packagecontrol.io/packages/CSS Extended Completions"&gt;查看介绍&lt;/a&gt;&lt;/p&gt;
&lt;h4&gt;JavaScript Completions&lt;/h4&gt;
&lt;p&gt;支持javascript原生语法提示，妈妈再也不用担心我输入document.getElementById(id)。
&lt;a href="https://packagecontrol.io/packages/JavaScript Completions"&gt;查看介绍&lt;/a&gt;&lt;/p&gt;
&lt;h4&gt;jQuery&lt;/h4&gt;
&lt;p&gt;为jQuery的大部分方法提供了示例代码段，让jQuery的API更加容易使用。
&lt;a href="https://packagecontrol.io/packages/jQuery"&gt;查看介绍&lt;/a&gt;&lt;/p&gt;
&lt;h4&gt;BracketHighlighter&lt;/h4&gt;
&lt;p&gt;括号以及标签层级显示，不用担心选中的代码属于哪个代码块，一目了然。
&lt;a href="https://packagecontrol.io/packages/BracketHighlighter"&gt;查看介绍&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;这里再推荐一个主题插件，主题库比较丰富，感觉大多数人都能用上，避免视觉疲劳：&lt;/p&gt;
&lt;h3&gt;2、Markdown&lt;/h3&gt;
&lt;p&gt;不建议使用，无论是在软件中，还是在浏览器中打开的效果都不是很好。&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;插件&lt;/th&gt;
&lt;th&gt;功能&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;MarkdownEditing&lt;/td&gt;
&lt;td&gt;一个提高Sublime中Markdown编辑特性的插件&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;MarkdownPreview&lt;/td&gt;
&lt;td&gt;Markdown转HTML，提供在浏览器中的预览功能&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;MarkdownLivePreview&lt;/td&gt;
&lt;td&gt;提供在编辑框中实时预览的功能&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;LiveReload&lt;/td&gt;
&lt;td&gt;一个提供md/html等文档的实时刷新预览的的插件&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;记笔记需要用到markdown，但是单独打开一个应用的话没有必要也麻烦，干脆就配置sublime的环境吧
本次使用了 MarkdownEditing 和 MarkdownLivePreview 实现实时预览，其他的都需要在网页预览，与自己的需求不符&lt;/p&gt;
&lt;p&gt;MarkdownEditing安装后无需配置
 MarkdownLivePreview看以前的说是要改设置，但这次没有看到，官方给出的是添加快捷键去实现弹出窗口预览&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt; [
 // markdown预览
    {
    &amp;quot;keys&amp;quot;: [&amp;quot;alt+m&amp;quot;],
    &amp;quot;command&amp;quot;: &amp;quot;open_markdown_preview&amp;quot;
    }
]
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h3&gt;Python&lt;/h3&gt;
&lt;h4&gt;AutoPep8：&lt;/h4&gt;
&lt;p&gt;python 开发规范 pep8
SublimeCodeIntel: 代码提示插件，可根据是python、java等自动代码提示（安装后没有找到合适的配置方法，感觉好像没生效，先搁置吧，提示补充代码anaconda感觉足够了）&lt;/p&gt;
&lt;h3&gt;Go&lt;/h3&gt;
&lt;h3&gt;4、Golang&lt;/h3&gt;
&lt;p&gt;目前只安装了Golang build和GoSublime，在都安装后在配置的时候先去配置了gosublime，但是无论怎么调都会报错，gopath无法被加载，后来删除了gosublime还存在这个问题才知道是golang build引起的，但是不知道是不是因为之前配置的gosubime的一些文件遗留下来了，单独golang build也会存在一些问题，目前也没办法也懒得去慢慢重置整个sublime环境去重现错误去一一解决了，等下一次找个其他的电脑或者啥的再去慢慢解决吧&lt;/p&gt;
&lt;h4&gt;Golang build&lt;/h4&gt;
&lt;p&gt;Preferences -&amp;gt; package settings -&amp;gt; Golang config-&amp;gt; Settings - Uesr，配置GOPATH，GOROOT&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="err"&gt;{&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="ss"&gt;&amp;quot;osx&amp;quot;&lt;/span&gt;&lt;span class="err"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;{&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="ss"&gt;&amp;quot;PATH&amp;quot;&lt;/span&gt;&lt;span class="err"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="ss"&gt;&amp;quot;/Users/jsmith/go/bin&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="ss"&gt;&amp;quot;GOPATH&amp;quot;&lt;/span&gt;&lt;span class="err"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="ss"&gt;&amp;quot;/Users/jsmith/go&amp;quot;&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="err"&gt;}&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="ss"&gt;&amp;quot;windows&amp;quot;&lt;/span&gt;&lt;span class="err"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;{&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="ss"&gt;&amp;quot;PATH&amp;quot;&lt;/span&gt;&lt;span class="err"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="ss"&gt;&amp;quot;C:\\Users\\jsmith\\go\\bin&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="ss"&gt;&amp;quot;GOPATH&amp;quot;&lt;/span&gt;&lt;span class="err"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="ss"&gt;&amp;quot;C:\\Users\\jsmith\\go&amp;quot;&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="err"&gt;}&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="ss"&gt;&amp;quot;linux&amp;quot;&lt;/span&gt;&lt;span class="err"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;{&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="ss"&gt;&amp;quot;PATH&amp;quot;&lt;/span&gt;&lt;span class="err"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="ss"&gt;&amp;quot;/usr/lib/go/bin&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="ss"&gt;&amp;quot;GOPATH&amp;quot;&lt;/span&gt;&lt;span class="err"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="ss"&gt;&amp;quot;/home/fish/go&amp;quot;&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="err"&gt;}&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="err"&gt;}&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h4&gt;GoSublime&lt;/h4&gt;
&lt;p&gt;不知道什么原因直接在sublime搜索不到这个插件，只能手动安装
https://github.com/DisposaBoy/GoSublime
下载后将整个目录复制到/home/fish/.config/sublime-text-3/Packages/下，将其Packages/GoSublime/src/margo.sh/extension-example/下的extension-example.go文件复制到GoSublime/src/margo/目录下，没有margo文件夹就创建一个&lt;/p&gt;
&lt;p&gt;Preferences -&amp;gt; package settings -&amp;gt; GoSublime-&amp;gt; Settings - Uesr&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="err"&gt;{&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="ss"&gt;&amp;quot;env&amp;quot;&lt;/span&gt;&lt;span class="err"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;{&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="ss"&gt;&amp;quot;GOPATH&amp;quot;&lt;/span&gt;&lt;span class="err"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="ss"&gt;&amp;quot;/home/fish/go&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="ss"&gt;&amp;quot;GOROOT&amp;quot;&lt;/span&gt;&lt;span class="err"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="ss"&gt;&amp;quot;/usr/lib/go&amp;quot;&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="err"&gt;}&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="err"&gt;}&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h1&gt;三、美化：&lt;/h1&gt;
&lt;p&gt;@ 安装图标和主题的方式和安装插件一样&lt;/p&gt;
&lt;p&gt;图标：A File Icon
主题：material theme&lt;/p&gt;
&lt;p&gt;安装后preferences &amp;gt;&amp;gt; settings user输入配置&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;{
    // 主题、配色相关
    &amp;quot;theme&amp;quot;: &amp;quot;Material-Theme.sublime-theme&amp;quot;, // 整体界面
    &amp;quot;color_scheme&amp;quot;: &amp;quot;Packages/Material Theme/schemes/Material-Theme.tmTheme&amp;quot;, // 配色方案
    // &amp;quot;sidebar_no_icon&amp;quot;: true,
    &amp;quot;sidebar_size_13&amp;quot;: true,
    &amp;quot;sidebar_row_padding_medium&amp;quot;: true,
    &amp;quot;folder_no_icon&amp;quot;: true,
    &amp;quot;tabs_small&amp;quot;: true,
    &amp;quot;tabs_padding_small&amp;quot;: true,
    &amp;quot;tabs_padding_medium&amp;quot;: true,
    // &amp;quot;tabs_label_not_italic&amp;quot;: true,
    &amp;quot;status_bar_brighter&amp;quot;: true,
    &amp;quot;color_inactive_tabs&amp;quot;: true,

    // 整体设置
    // &amp;quot;font_face&amp;quot;: &amp;quot;YaHei Consolas Hybrid&amp;quot;,
    // &amp;quot;font_face&amp;quot;: &amp;quot;Microsoft Yahei Mono&amp;quot;, // 字体类型
    &amp;quot;font_size&amp;quot;: 12.5, // 字号
    // &amp;quot;font_options&amp;quot;: [ &amp;quot;gray_antialias&amp;quot; ], // On retina Mac
    &amp;quot;highlight_line&amp;quot;: true, // 高亮当前行
    // &amp;quot;line_numbers&amp;quot;: true, // 显示行号
    // &amp;quot;gutter&amp;quot;: false, // 显示行号边栏
    // &amp;quot;margin&amp;quot;: 0, // 行号边栏和文字的间距
    &amp;quot;line_padding_top&amp;quot;: 2, // 行的上间距
    &amp;quot;line_padding_bottom&amp;quot;: 2, // 行的下间距
    // &amp;quot;draw_white_space&amp;quot;: &amp;quot;all&amp;quot;, // 显示空白符
    &amp;quot;show_encoding&amp;quot;: true, // 状态栏显示当前文件编码
    &amp;quot;always_show_minimap_viewport&amp;quot;: true, // 右侧总是显示代码地图可视区域
    // &amp;quot;draw_minimap_border&amp;quot;: true, // 显示可视区域部分的边框
    // &amp;quot;bold_folder_labels&amp;quot;: true, // 左侧边栏文字加粗
    &amp;quot;indent_guide_options&amp;quot;: [ &amp;quot;draw_normal&amp;quot;, &amp;quot;draw_active&amp;quot; ], // 制表位的对齐线
    &amp;quot;remember_open_files&amp;quot;: true, // 记忆之前打开的文件
    // &amp;quot;overlay_scroll_bars&amp;quot;: &amp;quot;system&amp;quot;,
    &amp;quot;dpi_scale&amp;quot;: 1.0, // 高分屏必须调整此设置
    &amp;quot;show_full_path&amp;quot;: true, // 标题栏显示打开文件的完整路径

    // 删除你想要忽略的插件，需要重启
    &amp;quot;ignored_packages&amp;quot;:
    [
        &amp;quot;Vintage&amp;quot; // 是否禁用 vim 模式
    ],

    // 编辑行为
    &amp;quot;default_encoding&amp;quot;: &amp;quot;UTF-8&amp;quot;, // 默认编码格式
    &amp;quot;tab_size&amp;quot;: 4,  // Tab键制表符宽度
    &amp;quot;translate_tabs_to_spaces&amp;quot;: true, // 设为true时，缩进和遇到Tab键时使用空格替代
    &amp;quot;scroll_past_end&amp;quot;: false, // 设置为false时，滚动到文本的最下方时，没有缓冲区
    // &amp;quot;highlight_modified_tabs&amp;quot;: true, // 高亮内容有修改的标签
    // &amp;quot;find_selected_text&amp;quot;: true, // 匹配选中的文本
    &amp;quot;trim_trailing_white_space_on_save&amp;quot;: true, // 保存文件时是否删除每行结束后多余的空格
    // &amp;quot;ensure_newline_at_eof_on_save&amp;quot;: false,  // 保存文件时光标是否在文件的最后向下换一行
    // &amp;quot;save_on_focus_lost&amp;quot;: false, // 切换到其它文件标签或点击其它非本软件区域，文件是否自动保存
    // &amp;quot;auto_close_tags&amp;quot;: true, // 自动闭合标签
    // &amp;quot;tab_completion&amp;quot;: true,
    // &amp;quot;auto_complete&amp;quot;: true, // 代码提示
    // &amp;quot;auto_complete_delay&amp;quot;: 50, // 代码提示延迟显示
    &amp;quot;auto_complete_triggers&amp;quot;: [ // 设置触发代码提醒的关键字
        {
            &amp;quot;selector&amp;quot;: &amp;quot;text.html&amp;quot;,
            &amp;quot;characters&amp;quot;: &amp;quot;abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ.&amp;lt;&amp;quot;
        },
        {
            &amp;quot;selector&amp;quot;: &amp;quot;text.xml&amp;quot;,
            &amp;quot;characters&amp;quot;: &amp;quot;abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ.&amp;lt;&amp;quot;
        },
        {
            &amp;quot;selector&amp;quot;: &amp;quot;text.php&amp;quot;,
            &amp;quot;characters&amp;quot;: &amp;quot;abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ.&amp;lt;&amp;quot;
        },
        {
            &amp;quot;selector&amp;quot;: &amp;quot;text.css&amp;quot;,
            &amp;quot;characters&amp;quot;: &amp;quot;abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ.&amp;lt;&amp;quot;
        },
        {
            &amp;quot;selector&amp;quot;: &amp;quot;text.js&amp;quot;,
            &amp;quot;characters&amp;quot;: &amp;quot;abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ.&amp;lt;&amp;quot;
        }
    ],
    // &amp;quot;auto_match_enabled&amp;quot;: true, // 自动匹配引号，括号等

    // 光标样式
    &amp;quot;caret_style&amp;quot;: &amp;quot;smooth&amp;quot;, // 光标闪动方式 &amp;quot;smooth&amp;quot;, &amp;quot;phase&amp;quot;, &amp;quot;blink&amp;quot;, &amp;quot;wide&amp;quot; and &amp;quot;solid&amp;quot;
    &amp;quot;caret_extra_bottom&amp;quot;: 1,
    &amp;quot;caret_extra_top&amp;quot;: 1,
    &amp;quot;caret_extra_width&amp;quot;: 1,

    // Word wrapping - follow PEP 8 recommendations
    // &amp;quot;rulers&amp;quot;: [ 82, 92 ],
    // &amp;quot;wrap_width&amp;quot;: 80, // 设置窗口内文字区域的宽度
    &amp;quot;word_wrap&amp;quot;: false, // true | false | auto

    // 禁止自动更新
    &amp;quot;update_check&amp;quot;: false
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h1&gt;四、汉化：&lt;/h1&gt;
&lt;p&gt;​Ctrl+Shift+P打开命令行模式，输入pci，然后回车选择：Package Control: Install Package。&lt;/p&gt;
&lt;p&gt;​稍等一会，在弹出的下拉菜单输入”ChineseLocalization”,help &amp;gt;&amp;gt; language 进行语言切换&lt;/p&gt;
&lt;h1&gt;五、破解&lt;/h1&gt;
&lt;h2&gt;1、&lt;/h2&gt;
&lt;p&gt;2020-6-6日测试可用。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;sudo nano /etc/hosts  #添加如下内容到文件里面
127.0..0.1 www.sublimetext.com
127.0.0.1 license.sublimehq.com
127.0.0.1 45.55.255.55
127.0.0.1 45.55.41.223
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;注册码：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;  ZYNGA INC.
  50 User License
  EA7E-811825
  927BA117 84C9300F 4A0CCBC4 34A56B44
  985E4562 59F2B63B CCCFF92F 0E646B83
  0FD6487D 1507AE29 9CC4F9F5 0A6F32E3
  0343D868 C18E2CD5 27641A71 25475648
  309705B3 E468DDC4 1B766A18 7952D28C
  E627DDBA 960A2153 69A2D98A C87C0607
  45DC6049 8C04EC29 D18DFA40 442C680B
  1342224D 44D90641 33A3B9F2 46AADB8F
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;由于这个是一个Sublime Text 2的验证码，注册成功后会弹出提示说这个注册码是Sublime Text 2的，是否要升级之类的，选择取消就好了，接下来就可以正常使用了。
    最后的最后，我觉得还是应该支持正版，拒绝盗版，条件允许的情况下还是建议购买官方注册码。&lt;/p&gt;
&lt;h2&gt;2、&lt;/h2&gt;
&lt;p&gt;上面的方法在linux的时候可用，但是在 win 的时候不成功，找了另一个方法&lt;/p&gt;
&lt;h3&gt;改hosts：&lt;/h3&gt;
&lt;p&gt;加上下面这段代码：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="mf"&gt;127.0.0.1&lt;/span&gt;    &lt;span class="n"&gt;www&lt;/span&gt;&lt;span class="mf"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sublimetext&lt;/span&gt;&lt;span class="mf"&gt;.&lt;/span&gt;&lt;span class="n"&gt;com&lt;/span&gt;
&lt;span class="mf"&gt;127.0.0.1&lt;/span&gt;    &lt;span class="n"&gt;sublimetext&lt;/span&gt;&lt;span class="mf"&gt;.&lt;/span&gt;&lt;span class="n"&gt;com&lt;/span&gt;
&lt;span class="mf"&gt;127.0.0.1&lt;/span&gt;    &lt;span class="n"&gt;sublimehq&lt;/span&gt;&lt;span class="mf"&gt;.&lt;/span&gt;&lt;span class="n"&gt;com&lt;/span&gt;
&lt;span class="mf"&gt;127.0.0.1&lt;/span&gt;    &lt;span class="n"&gt;license&lt;/span&gt;&lt;span class="mf"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sublimehq&lt;/span&gt;&lt;span class="mf"&gt;.&lt;/span&gt;&lt;span class="n"&gt;com&lt;/span&gt;
&lt;span class="mf"&gt;127.0.0.1&lt;/span&gt;    &lt;span class="mf"&gt;45.55.255.55&lt;/span&gt;
&lt;span class="mf"&gt;127.0.0.1&lt;/span&gt;    &lt;span class="mf"&gt;45.55.41.223&lt;/span&gt;
&lt;span class="mf"&gt;0.0.0.0&lt;/span&gt;     &lt;span class="n"&gt;license&lt;/span&gt;&lt;span class="mf"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sublimehq&lt;/span&gt;&lt;span class="mf"&gt;.&lt;/span&gt;&lt;span class="n"&gt;com&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h3&gt;输入注册码：&lt;/h3&gt;
&lt;p&gt;一定要改一下hosts在输入注册码，否则可能失败。Help-&amp;gt;enter license,复制粘贴下列全部粘贴至打开的对话框。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="o"&gt;-----&lt;/span&gt; &lt;span class="kr"&gt;BEGIN&lt;/span&gt; &lt;span class="n"&gt;LICENSE&lt;/span&gt; &lt;span class="o"&gt;-----&lt;/span&gt;
&lt;span class="n"&gt;Member&lt;/span&gt; &lt;span class="n"&gt;J2TeaM&lt;/span&gt;
&lt;span class="n"&gt;Single&lt;/span&gt; &lt;span class="n"&gt;User&lt;/span&gt; &lt;span class="n"&gt;License&lt;/span&gt;
&lt;span class="n"&gt;EA7E&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1011316&lt;/span&gt;
&lt;span class="n"&gt;D7DA350E&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="n"&gt;B8B0760&lt;/span&gt; &lt;span class="mi"&gt;972&lt;/span&gt;&lt;span class="n"&gt;F8B60&lt;/span&gt; &lt;span class="n"&gt;F3E64036&lt;/span&gt;
&lt;span class="n"&gt;B9B4E234&lt;/span&gt; &lt;span class="n"&gt;F356F38F&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="n"&gt;AD1E3B7&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="n"&gt;E9C5FAD&lt;/span&gt;
&lt;span class="n"&gt;FA0A2ABE&lt;/span&gt; &lt;span class="mi"&gt;25&lt;/span&gt;&lt;span class="n"&gt;F65BD8&lt;/span&gt; &lt;span class="n"&gt;D51458E5&lt;/span&gt; &lt;span class="mi"&gt;3923&lt;/span&gt;&lt;span class="n"&gt;CE80&lt;/span&gt;
&lt;span class="mi"&gt;87428428&lt;/span&gt; &lt;span class="mi"&gt;79079&lt;/span&gt;&lt;span class="n"&gt;A01&lt;/span&gt; &lt;span class="n"&gt;AA69F319&lt;/span&gt; &lt;span class="n"&gt;A1AF29A4&lt;/span&gt;
&lt;span class="n"&gt;A684C2DC&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="n"&gt;B1583D4&lt;/span&gt; &lt;span class="mi"&gt;19&lt;/span&gt;&lt;span class="n"&gt;CBD290&lt;/span&gt; &lt;span class="mi"&gt;217618&lt;/span&gt;&lt;span class="n"&gt;CD&lt;/span&gt;
&lt;span class="mi"&gt;5653&lt;/span&gt;&lt;span class="n"&gt;E0A0&lt;/span&gt; &lt;span class="n"&gt;BACE3948&lt;/span&gt; &lt;span class="n"&gt;BB2EE45E&lt;/span&gt; &lt;span class="mi"&gt;422&lt;/span&gt;&lt;span class="n"&gt;D2C87&lt;/span&gt;
&lt;span class="n"&gt;DD9AF44B&lt;/span&gt; &lt;span class="mi"&gt;99&lt;/span&gt;&lt;span class="n"&gt;C49590&lt;/span&gt; &lt;span class="n"&gt;D2DBDEE1&lt;/span&gt; &lt;span class="mi"&gt;75860&lt;/span&gt;&lt;span class="n"&gt;FD2&lt;/span&gt;
&lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="n"&gt;C8BB2AD&lt;/span&gt; &lt;span class="n"&gt;B2ECE5A4&lt;/span&gt; &lt;span class="n"&gt;EFC08AF2&lt;/span&gt; &lt;span class="mi"&gt;25&lt;/span&gt;&lt;span class="n"&gt;A9B864&lt;/span&gt;
&lt;span class="o"&gt;------&lt;/span&gt; &lt;span class="kr"&gt;END&lt;/span&gt; &lt;span class="n"&gt;LICENSE&lt;/span&gt; &lt;span class="o"&gt;------&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;接下来应该是显示激活成功，激活成功后可将之前hosts文件添加内容删掉&lt;/p&gt;
&lt;h3&gt;设置软件不更新：&lt;/h3&gt;
&lt;p&gt;菜单栏-&amp;gt;preferences-&amp;gt;settings,在右侧代码框里添加下面这句代码&lt;/p&gt;
&lt;p&gt;"update_check":false&lt;/p&gt;
&lt;h1&gt;六、其他：&lt;/h1&gt;
&lt;p&gt;包管理自定义设置：Preferences &amp;gt; Package Setting &amp;gt; Package Control &amp;gt; Setting User
主要是禁止自动删除手动安装的包&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;{
    &lt;span class="o"&gt;//&lt;/span&gt; 是否自动更新
    &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="s"&gt;auto_upgrade&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;: &lt;span class="nv"&gt;false&lt;/span&gt;,

    &lt;span class="o"&gt;//&lt;/span&gt; 暂时不知道这个是干嘛的，先留着吧
    &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="s"&gt;bootstrapped&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;: &lt;span class="nv"&gt;true&lt;/span&gt;,

    &lt;span class="o"&gt;//&lt;/span&gt; 包丢失自动下载安装
    &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="s"&gt;install_missing&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;: &lt;span class="nv"&gt;false&lt;/span&gt;,

    &lt;span class="o"&gt;//&lt;/span&gt; &lt;span class="k"&gt;If&lt;/span&gt; &lt;span class="nv"&gt;a&lt;/span&gt; &lt;span class="nv"&gt;package&lt;/span&gt; &lt;span class="nv"&gt;was&lt;/span&gt; &lt;span class="nv"&gt;installed&lt;/span&gt; &lt;span class="nv"&gt;by&lt;/span&gt; &lt;span class="nv"&gt;Package&lt;/span&gt; &lt;span class="nv"&gt;Control&lt;/span&gt; &lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;has&lt;/span&gt; &lt;span class="nv"&gt;a&lt;/span&gt;
    &lt;span class="o"&gt;//&lt;/span&gt; &lt;span class="nv"&gt;package&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nv"&gt;metadata&lt;/span&gt;.&lt;span class="nv"&gt;json&lt;/span&gt; &lt;span class="nv"&gt;file&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt; &lt;span class="nv"&gt;but&lt;/span&gt; &lt;span class="nv"&gt;is&lt;/span&gt; &lt;span class="nv"&gt;not&lt;/span&gt; &lt;span class="nv"&gt;in&lt;/span&gt; &lt;span class="nv"&gt;installed_packages&lt;/span&gt;, &lt;span class="nv"&gt;remove&lt;/span&gt; &lt;span class="nv"&gt;it&lt;/span&gt;
    &lt;span class="o"&gt;//&lt;/span&gt; &lt;span class="nv"&gt;based&lt;/span&gt; &lt;span class="nv"&gt;upon&lt;/span&gt; &lt;span class="nv"&gt;the&lt;/span&gt; &lt;span class="nv"&gt;assumption&lt;/span&gt; &lt;span class="nv"&gt;that&lt;/span&gt; &lt;span class="nv"&gt;it&lt;/span&gt; &lt;span class="nv"&gt;was&lt;/span&gt; &lt;span class="nv"&gt;removed&lt;/span&gt; &lt;span class="nv"&gt;on&lt;/span&gt; &lt;span class="nv"&gt;another&lt;/span&gt; &lt;span class="nv"&gt;machine&lt;/span&gt; &lt;span class="nv"&gt;and&lt;/span&gt;
    &lt;span class="o"&gt;//&lt;/span&gt; &lt;span class="nv"&gt;the&lt;/span&gt; &lt;span class="nv"&gt;Package&lt;/span&gt; &lt;span class="nv"&gt;Control&lt;/span&gt;.&lt;span class="nv"&gt;sublime&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nv"&gt;settings&lt;/span&gt; &lt;span class="nv"&gt;file&lt;/span&gt; &lt;span class="nv"&gt;was&lt;/span&gt; &lt;span class="nv"&gt;synced&lt;/span&gt; &lt;span class="nv"&gt;to&lt;/span&gt; &lt;span class="nv"&gt;this&lt;/span&gt; &lt;span class="nv"&gt;machine&lt;/span&gt;.
    &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="s"&gt;remove_orphaned&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;: &lt;span class="nv"&gt;false&lt;/span&gt;
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="mf"&gt;4&lt;/span&gt;&lt;span class="err"&gt;、&lt;/span&gt;&lt;span class="n"&gt;常用快捷键&lt;/span&gt;&lt;span class="err"&gt;（&lt;/span&gt;&lt;span class="n"&gt;默认&lt;/span&gt;&lt;span class="err"&gt;）&lt;/span&gt;
&lt;span class="n"&gt;Ctrl&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="n"&gt;Shift&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="n"&gt;P&lt;/span&gt;&lt;span class="err"&gt;：&lt;/span&gt;&lt;span class="n"&gt;打开命令面板&lt;/span&gt;
&lt;span class="n"&gt;Ctrl&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="n"&gt;P&lt;/span&gt;&lt;span class="err"&gt;：&lt;/span&gt;&lt;span class="n"&gt;搜索项目中的文件&lt;/span&gt;
&lt;span class="n"&gt;Ctrl&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="n"&gt;G&lt;/span&gt;&lt;span class="err"&gt;：&lt;/span&gt;&lt;span class="n"&gt;跳转到第几行&lt;/span&gt;
&lt;span class="n"&gt;Ctrl&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="n"&gt;W&lt;/span&gt;&lt;span class="err"&gt;：&lt;/span&gt;&lt;span class="n"&gt;关闭当前打开文件&lt;/span&gt;
&lt;span class="n"&gt;Ctrl&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="n"&gt;Shift&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="n"&gt;W&lt;/span&gt;&lt;span class="err"&gt;：&lt;/span&gt;&lt;span class="n"&gt;关闭所有打开文件&lt;/span&gt;
&lt;span class="n"&gt;Ctrl&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="n"&gt;Shift&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="n"&gt;V&lt;/span&gt;&lt;span class="err"&gt;：&lt;/span&gt;&lt;span class="n"&gt;粘贴并格式化&lt;/span&gt;
&lt;span class="n"&gt;Ctrl&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="n"&gt;D&lt;/span&gt;&lt;span class="err"&gt;：&lt;/span&gt;&lt;span class="n"&gt;选择单词&lt;/span&gt;&lt;span class="err"&gt;，&lt;/span&gt;&lt;span class="n"&gt;重复可增加选择下一个相同的单词&lt;/span&gt;
&lt;span class="n"&gt;Ctrl&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="n"&gt;L&lt;/span&gt;&lt;span class="err"&gt;：&lt;/span&gt;&lt;span class="n"&gt;选择行&lt;/span&gt;&lt;span class="err"&gt;，&lt;/span&gt;&lt;span class="n"&gt;重复可依次增加选择下一行&lt;/span&gt;
&lt;span class="n"&gt;Ctrl&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="n"&gt;Shift&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="n"&gt;L&lt;/span&gt;&lt;span class="err"&gt;：&lt;/span&gt;&lt;span class="n"&gt;选择多行&lt;/span&gt;
&lt;span class="n"&gt;Ctrl&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="n"&gt;Shift&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="n"&gt;Enter&lt;/span&gt;&lt;span class="err"&gt;：&lt;/span&gt;&lt;span class="n"&gt;在当前行前插入新行&lt;/span&gt;
&lt;span class="n"&gt;Ctrl&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="n"&gt;X&lt;/span&gt;&lt;span class="err"&gt;：&lt;/span&gt;&lt;span class="n"&gt;删除当前行&lt;/span&gt;
&lt;span class="n"&gt;Ctrl&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="n"&gt;M&lt;/span&gt;&lt;span class="err"&gt;：&lt;/span&gt;&lt;span class="n"&gt;跳转到对应括号&lt;/span&gt;
&lt;span class="n"&gt;Ctrl&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="n"&gt;U&lt;/span&gt;&lt;span class="err"&gt;：&lt;/span&gt;&lt;span class="n"&gt;软撤销&lt;/span&gt;&lt;span class="err"&gt;，&lt;/span&gt;&lt;span class="n"&gt;撤销光标位置&lt;/span&gt;
&lt;span class="n"&gt;Ctrl&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="n"&gt;J&lt;/span&gt;&lt;span class="err"&gt;：&lt;/span&gt;&lt;span class="n"&gt;选择标签内容&lt;/span&gt;
&lt;span class="n"&gt;Ctrl&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="n"&gt;F&lt;/span&gt;&lt;span class="err"&gt;：&lt;/span&gt;&lt;span class="n"&gt;查找内容&lt;/span&gt;
&lt;span class="n"&gt;Ctrl&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="n"&gt;Shift&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="n"&gt;F&lt;/span&gt;&lt;span class="err"&gt;：&lt;/span&gt;&lt;span class="n"&gt;查找并替换&lt;/span&gt;
&lt;span class="n"&gt;Ctrl&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="n"&gt;H&lt;/span&gt;&lt;span class="err"&gt;：&lt;/span&gt;&lt;span class="n"&gt;替换&lt;/span&gt;
&lt;span class="n"&gt;Ctrl&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="n"&gt;R&lt;/span&gt;&lt;span class="err"&gt;：&lt;/span&gt;&lt;span class="n"&gt;前往&lt;/span&gt; &lt;span class="n"&gt;method&lt;/span&gt;
&lt;span class="n"&gt;Ctrl&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="n"&gt;N&lt;/span&gt;&lt;span class="err"&gt;：&lt;/span&gt;&lt;span class="n"&gt;新建窗口&lt;/span&gt;
&lt;span class="n"&gt;Ctrl&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="n"&gt;K&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="n"&gt;B&lt;/span&gt;&lt;span class="err"&gt;：&lt;/span&gt;&lt;span class="n"&gt;开关侧栏&lt;/span&gt;
&lt;span class="n"&gt;Ctrl&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="n"&gt;Shift&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="n"&gt;M&lt;/span&gt;&lt;span class="err"&gt;：&lt;/span&gt;&lt;span class="n"&gt;选中当前括号内容&lt;/span&gt;&lt;span class="err"&gt;，&lt;/span&gt;&lt;span class="n"&gt;重复可选着括号本身&lt;/span&gt;
&lt;span class="n"&gt;Ctrl&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="n"&gt;F2&lt;/span&gt;&lt;span class="err"&gt;：&lt;/span&gt;&lt;span class="n"&gt;设置&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;删除标记&lt;/span&gt;
&lt;span class="n"&gt;Ctrl&lt;/span&gt;&lt;span class="o"&gt;+/&lt;/span&gt;&lt;span class="err"&gt;：&lt;/span&gt;&lt;span class="n"&gt;注释当前行&lt;/span&gt;
&lt;span class="n"&gt;Ctrl&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="n"&gt;Shift&lt;/span&gt;&lt;span class="o"&gt;+/&lt;/span&gt;&lt;span class="err"&gt;：&lt;/span&gt;&lt;span class="n"&gt;当前位置插入注释&lt;/span&gt;
&lt;span class="n"&gt;Ctrl&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="n"&gt;Alt&lt;/span&gt;&lt;span class="o"&gt;+/&lt;/span&gt;&lt;span class="err"&gt;：&lt;/span&gt;&lt;span class="n"&gt;块注释&lt;/span&gt;&lt;span class="err"&gt;，&lt;/span&gt;&lt;span class="n"&gt;并Focus到首行&lt;/span&gt;&lt;span class="err"&gt;，&lt;/span&gt;&lt;span class="n"&gt;写注释说明用的&lt;/span&gt;
&lt;span class="n"&gt;Ctrl&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="n"&gt;Shift&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="n"&gt;A&lt;/span&gt;&lt;span class="err"&gt;：&lt;/span&gt;&lt;span class="n"&gt;选择当前标签前后&lt;/span&gt;&lt;span class="err"&gt;，&lt;/span&gt;&lt;span class="n"&gt;修改标签用的&lt;/span&gt;
&lt;span class="n"&gt;F11&lt;/span&gt;&lt;span class="err"&gt;：&lt;/span&gt;&lt;span class="n"&gt;全屏&lt;/span&gt;
&lt;span class="n"&gt;Shift&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="n"&gt;F11&lt;/span&gt;&lt;span class="err"&gt;：&lt;/span&gt;&lt;span class="n"&gt;全屏免打扰模式&lt;/span&gt;&lt;span class="err"&gt;，&lt;/span&gt;&lt;span class="n"&gt;只编辑当前文件&lt;/span&gt;
&lt;span class="n"&gt;Alt&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="n"&gt;F3&lt;/span&gt;&lt;span class="err"&gt;：&lt;/span&gt;&lt;span class="n"&gt;选择所有相同的词&lt;/span&gt;
&lt;span class="n"&gt;Alt&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mf"&gt;.&lt;/span&gt;&lt;span class="err"&gt;：&lt;/span&gt;&lt;span class="n"&gt;闭合标签&lt;/span&gt;
&lt;span class="n"&gt;Alt&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="n"&gt;Shift&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="n"&gt;数字&lt;/span&gt;&lt;span class="err"&gt;：&lt;/span&gt;&lt;span class="n"&gt;分屏显示&lt;/span&gt;
&lt;span class="n"&gt;Alt&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="n"&gt;数字&lt;/span&gt;&lt;span class="err"&gt;：&lt;/span&gt;&lt;span class="n"&gt;切换打开第N个文件&lt;/span&gt;
&lt;span class="n"&gt;Shift&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="n"&gt;右键拖动&lt;/span&gt;&lt;span class="err"&gt;：&lt;/span&gt;&lt;span class="n"&gt;光标多不&lt;/span&gt;&lt;span class="err"&gt;，&lt;/span&gt;&lt;span class="n"&gt;用来更改或插入列内容&lt;/span&gt;
&lt;span class="n"&gt;鼠标的前进后退键可切换Tab文件&lt;/span&gt;
&lt;span class="n"&gt;按Ctrl&lt;/span&gt;&lt;span class="err"&gt;，&lt;/span&gt;&lt;span class="n"&gt;依次点击或选取&lt;/span&gt;&lt;span class="err"&gt;，&lt;/span&gt;&lt;span class="n"&gt;可需要编辑的多个位置&lt;/span&gt;
&lt;span class="n"&gt;按Ctrl&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="n"&gt;Shift&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="n"&gt;上下键&lt;/span&gt;&lt;span class="err"&gt;，&lt;/span&gt;&lt;span class="n"&gt;可替换行&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</content><category term="Tools"></category><category term="linux"></category></entry><entry><title>Vim、Nvim</title><link href="https://aiyoyo20.github.io/articles/vim-nvim.html" rel="alternate"></link><published>2020-09-03T10:20:00+08:00</published><updated>2020-09-03T10:20:00+08:00</updated><author><name>FING</name></author><id>tag:aiyoyo20.github.io,2020-09-03:/articles/vim-nvim.html</id><summary type="html">&lt;h1&gt;Vim&lt;/h1&gt;
&lt;h2&gt;安装&lt;/h2&gt;
&lt;p&gt;win：gvim
没有去window下折腾的想法，比较麻烦，但还是放一个介绍安装的&lt;a href="https://zhuanlan.zhihu.com/p/64856646"&gt;网址&lt;/a&gt;吧，如果挂了网上找找，很多的&lt;/p&gt;
&lt;p&gt;linux：
manjaro下安装&lt;code&gt;yay -S vim&lt;/code&gt; or &lt;code&gt;sudo pacman -S vim&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;mac：
 自带了，升级&lt;code&gt;brew install vim --with-lua --with-override-system-vi&lt;/code&gt;
 方法也挺多样的，从源码编译，覆盖安装，保留版本安装都有，自行搜索&lt;/p&gt;
&lt;h2&gt;配置&lt;/h2&gt;
&lt;p&gt;不知道是版本的问题还是系统的问题，~/下没有.vim文件夹， 也没有.vimrc文件，无奈只能自己创建
.vim主要用于插件或者主题等文件，.vimrc是写入配置，读取.vim里面的文件&lt;/p&gt;
&lt;p&gt;新建补齐没有的文件夹以及文件&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;mkdir&lt;/span&gt; &lt;span class="o"&gt;~/.&lt;/span&gt;&lt;span class="n"&gt;vim&lt;/span&gt;
&lt;span class="n"&gt;mkdir&lt;/span&gt; &lt;span class="o"&gt;~/.&lt;/span&gt;&lt;span class="n"&gt;vim …&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</summary><content type="html">&lt;h1&gt;Vim&lt;/h1&gt;
&lt;h2&gt;安装&lt;/h2&gt;
&lt;p&gt;win：gvim
没有去window下折腾的想法，比较麻烦，但还是放一个介绍安装的&lt;a href="https://zhuanlan.zhihu.com/p/64856646"&gt;网址&lt;/a&gt;吧，如果挂了网上找找，很多的&lt;/p&gt;
&lt;p&gt;linux：
manjaro下安装&lt;code&gt;yay -S vim&lt;/code&gt; or &lt;code&gt;sudo pacman -S vim&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;mac：
 自带了，升级&lt;code&gt;brew install vim --with-lua --with-override-system-vi&lt;/code&gt;
 方法也挺多样的，从源码编译，覆盖安装，保留版本安装都有，自行搜索&lt;/p&gt;
&lt;h2&gt;配置&lt;/h2&gt;
&lt;p&gt;不知道是版本的问题还是系统的问题，~/下没有.vim文件夹， 也没有.vimrc文件，无奈只能自己创建
.vim主要用于插件或者主题等文件，.vimrc是写入配置，读取.vim里面的文件&lt;/p&gt;
&lt;p&gt;新建补齐没有的文件夹以及文件&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;mkdir&lt;/span&gt; &lt;span class="o"&gt;~/.&lt;/span&gt;&lt;span class="n"&gt;vim&lt;/span&gt;
&lt;span class="n"&gt;mkdir&lt;/span&gt; &lt;span class="o"&gt;~/.&lt;/span&gt;&lt;span class="n"&gt;vim&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;autoload&lt;/span&gt;
&lt;span class="n"&gt;touch&lt;/span&gt; &lt;span class="o"&gt;~/.&lt;/span&gt;&lt;span class="n"&gt;vimrc&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2&gt;插件&lt;/h2&gt;
&lt;h3&gt;包管理器&lt;/h3&gt;
&lt;h4&gt;vim_plug&lt;/h4&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;curl&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;fLo&lt;/span&gt; &lt;span class="o"&gt;~/.&lt;/span&gt;&lt;span class="n"&gt;vim&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;autoload&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;plug&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;vim&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="n"&gt;create&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;dirs&lt;/span&gt; &lt;span class="n"&gt;https&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="o"&gt;//&lt;/span&gt;&lt;span class="n"&gt;raw&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;githubusercontent&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;com&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;junegunn&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;vim&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;plug&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="k"&gt;master&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;plug&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;vim&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;我的安装失败
&lt;img alt="" src="vim_error.png"&gt;&lt;/p&gt;
&lt;p&gt;所以通过浏览器打开https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim保存为plug.vim文件后复制到~/.vim/autoload下&lt;/p&gt;
&lt;h4&gt;vundle&lt;/h4&gt;
&lt;h3&gt;NERDTree&lt;/h3&gt;
&lt;p&gt;这个插件是几乎所有研发人员都会安装的一个插件——目录树，可以支持在不退出vim的编辑器的前提下，在文件中快速切换，同时能让开发人员快速掌握项目目录结构，是提升开发效率必不可少的工具。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;Plug 'preservim/nerdtree'&lt;/code&gt;
NERDTree默认无须配置即可直接使用，当然更改部分映射后，可以使得目录树试用起来更加得心应手。最常见的配置在~/.vimrc添加如下命令，即可使用Ctrl+n快速开启目录树。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;map &amp;lt;C-n&amp;gt; :NERDTreeToggle&amp;lt;CR&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h3&gt;auto-pairs&lt;/h3&gt;
&lt;p&gt;这个就是插件的功能简单而实用：在输入/删除左括号时，能自动补上/删除右括号。
1.安装&lt;/p&gt;
&lt;p&gt;Plug 'jiangmiao/auto-pairs'&lt;/p&gt;
&lt;p&gt;2.使用&lt;/p&gt;
&lt;p&gt;开箱即用的插件，无需过多的配置。
&lt;code&gt;au Filetype FILETYPE let b:AutoPairs = {"(": ")"}au FileType php      let b:AutoPairs = AutoPairsDefine({'&amp;lt;?' : '?&amp;gt;', '&amp;lt;?php': '?&amp;gt;'})&lt;/code&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h1&gt;NeoVim&lt;/h1&gt;
&lt;p&gt;github项目：&lt;a href="https://github.com/neovim/neovim/releases"&gt;https://github.com/neovim/neovim/releases&lt;/a&gt;
官网：&lt;a href="https://neovim.io/"&gt;https://neovim.io/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;目前没有去使用过Nvim,但是根据看到的资料，很多人在对比其两个软件。&lt;/p&gt;
&lt;p&gt;对于nvim来说，代码更简洁，后期的维护会方便很多，新增的各种语言的接口为一些想要为其提供插件的作者有了更多的选择，而不是去学习制作nvim的语言，插件的增加可以使得这个软件更加方便和人性化，现在的大多数人就目前的版本来说nvim的口碑会更好一些，不可否认的是nvim引入了很多新的东西，做了一些很大胆的尝试，也有不完善的地方，但是它还很年轻，未来可期&lt;/p&gt;
&lt;p&gt;后期vim作者也感受到了压力，接受了更多的建议，使得其发展逐渐跟上时代的发展&lt;/p&gt;
&lt;h1&gt;Vim 和 Neovim 的前世今生&lt;/h1&gt;
&lt;div class="post-content"&gt;
      &lt;h1 id="引子"&gt;&lt;a href="#引子" class="headerlink anchor"&gt;&lt;i class="iconfont icon-link"&gt;&lt;/i&gt;&lt;/a&gt;引子&lt;/h1&gt;
&lt;p&gt;从完全使用 &lt;a href="https://neovim.io/"&gt;Neovim&lt;/a&gt; 进行日常&lt;a href="https://jdhao.github.io/2018/12/24/centos_nvim_install_use_guide_en/"&gt;代码开发&lt;/a&gt;与&lt;a href="https://jdhao.github.io/2019/01/15/markdown_edit_preview_nvim/"&gt;文档编写&lt;/a&gt;到现在，已经过去了大约一年半的时间，一年半以前，我对 Vim 的了解还处在非常初级的阶段，经过长时间的&lt;a href="https://jdhao.github.io/categories/Nvim/"&gt;使用与学习&lt;/a&gt;，已经达到了熟练使用的程度。当然，Vim 的知识过于庞大，即便我已经使用了一年半的时间，还有很多 Vim/Neovim 的特性或者知识仍然有待了解与发掘。&lt;/p&gt;
&lt;p&gt;在使用 Neovim 的过程中，我对 Neovim 和 Vim 的历史以及它们之间的&lt;em&gt;恩怨情仇&lt;/em&gt;也产生了兴趣，散布在互联网上各处的博客、视频以及论坛讨论让我对过去的历史有了一定了解。&lt;/p&gt;
&lt;h1 id="vim-的历史"&gt;&lt;a href="[[vim]]-的历史" class="headerlink anchor"&gt;&lt;i class="iconfont icon-link"&gt;&lt;/i&gt;&lt;/a&gt;Vim 的历史&lt;/h1&gt;
&lt;p&gt;想要了解 Vim 的历史，一个很好的资料是 Vim 创始人 &lt;a href="https://en.wikipedia.org/wiki/Bram_Moolenaar"&gt;Bram Moolenaar&lt;/a&gt; 在 VimConf&lt;sup id="fnref:1"&gt;&lt;a href="[[fn]]:1" class="footnote-ref" role="doc-noteref"&gt;1&lt;/a&gt;&lt;/sup&gt; 2018 上的专题演讲，他在演讲中回顾了 Vim 的发展以及 Vim 即将添加的一些新特性。出于兴趣，我把他的 &lt;a href="https://www.youtube.com/watch?v=ES1L2SPgIDI"&gt;原始演讲视频&lt;/a&gt; 从 YouTube 上扒了下来，添加了英文字幕，&lt;a href="https://www.bilibili.com/video/av79242778"&gt;上传到了 B 站&lt;/a&gt;。另外一个很好的视频是 Bram 在 &lt;a href="https://www.youtube.com/watch?v=ayc_qpB-93o"&gt;Vim 25 周年活动上发表的演讲&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;简单来说，Vim 于 1991 年由 Bram 发布，最初 Vim 模仿了 &lt;a href="https://en.wikipedia.org/wiki/Vi"&gt;Vi 编辑器&lt;/a&gt;的特性，后面加以扩展，逐步添加了很多新功能。今年距离 Vim 首次发布已经快要 30 年了，Vim 这个强大的编辑器仍然在&lt;a href="https://github.com/vim/vim/commits/master"&gt;不断更新&lt;/a&gt;，并且被许多人所使用和讨论，这也从侧面说明了 Vim 的魅力 (Vim 被网友们尊称为&lt;a href="https://www.google.com/search?q=vim+%E7%BC%96%E8%BE%91%E5%99%A8%E4%B9%8B%E7%A5%9E&amp;amp;oq=vim+%E7%BC%96%E8%BE%91%E5%99%A8%E4%B9%8B%E7%A5%9E&amp;amp;aqs=chrome..69i57.8927j0j4&amp;amp;sourceid=chrome&amp;amp;ie=UTF-8"&gt;「编辑器之神」&lt;/a&gt;)。刚开始，Vim 完全由 Bram 独立开发维护，后来有开发者不断加入 Vim 的开发，并把 Vim 移植到了不同的系统平台上。有一段时间，Bram 甚至辞去了工作，全力投入到 Vim 的开发中，靠着网友的捐助维持基本生活。2006 年 Bram 加入了 Google 位于苏黎世的分部，Google 出于对 Bram 的尊重以及对开源文化的认同，同意 Bram 每周可以花 20% 的工作时间用于和 Vim 相关的工作，谷歌真是一家开明的公司。&lt;/p&gt;
&lt;h1 id="vim-开发模式与弊端"&gt;&lt;a href="[[vim]]-开发模式与弊端" class="headerlink anchor"&gt;&lt;i class="iconfont icon-link"&gt;&lt;/i&gt;&lt;/a&gt;Vim 开发模式与弊端&lt;/h1&gt;
&lt;p&gt;Vim 最初开发的年代，虽然已经兴起了&lt;a href="https://en.wikipedia.org/wiki/Open-source-software_movement"&gt;开源运动&lt;/a&gt;，例如大名鼎鼎的 &lt;a href="https://en.wikipedia.org/wiki/GNU"&gt;GNU&lt;/a&gt; 项目，但是开源项目的组织与运行还不像现在这样方便，Git 和 GitHub 要在十几年后才会出现。其他开发者向 Bram 贡献 Vim 源代码的方式是通过邮件，向 Bram 提交 &lt;a href="https://en.wikipedia.org/wiki/Patch_(computing)"&gt;patch&lt;/a&gt;，如果 Bram 觉得这个 patch 不错，就会把 patch 加入到 Vim 的源代码中。20 多年过去了，开源项目的协作方式由于 &lt;a href="https://git-scm.com/"&gt;Git&lt;/a&gt; 和 GitHub 的出现发生很大变化。很多顶级开源项目都选择使用 GitHub 进行代码的开发和管理，开发者通过 Git 提交 pull request 方式贡献自己的代码，如果项目的维护者觉得代码的质量 OK，就会合并这个请求，将代码并入主线代码中。&lt;/p&gt;
&lt;h2 id="是否可持续发展的隐忧"&gt;&lt;a href="#是否可持续发展的隐忧" class="headerlink anchor"&gt;&lt;i class="iconfont icon-link"&gt;&lt;/i&gt;&lt;/a&gt;是否可持续发展的隐忧&lt;/h2&gt;
&lt;p&gt;Vim 代码曾托管在 &lt;a href="https://code.google.com/archive/"&gt;Google Code&lt;/a&gt;，随着 Google Code 于 2015 年关闭，Vim 源代码被&lt;a href="https://www.vim.org/movetogithub.php"&gt;迁移到 GitHub&lt;/a&gt;。虽然表面上看起来 Vim 的开发模式遵循了开源项目的范式，实际上并不是，因为 Vim 并没有采用 GitHub pull request 的方式。关于 Vim 开发相关的讨论，都在 &lt;a href="https://groups.google.com/forum/#!forum/vim_dev"&gt;vim-dev&lt;/a&gt; 进行，开发者仍然要向 Bram 提交 patch，如果 patch 通过，再由 Bram 本人提交到 GitHub 上&lt;sup id="fnref:2"&gt;&lt;a href="[[fn]]:2" class="footnote-ref" role="doc-noteref"&gt;2&lt;/a&gt;&lt;/sup&gt;，和之前的开发方式并没有本质区别。所以 Vim 虽然看起来也有很多贡献者，但是只有 Bram 才有权力决定什么代码可以合并入 Vim，什么样的代码不行。Bram 对于添加新功能非常谨慎，导致之前有很多开发者提交的 patch 都没有被合并，引起了一些开发者对 Vim 开发模式的不满。这也引发了很多人对 Vim 项目未来能否可持续发展的&lt;a href="https://joshtronic.com/2018/08/12/will-vim-die-with-bram-moolenaar/"&gt;担忧&lt;/a&gt;，当 Bram 去世以后，Vim 的未来会怎样？甚至 Bram 本人在采访中被问到，如何确保 Vim 项目可持续发展，他的回答是&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Keep me alive.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;不知是开玩笑，还是他真正想法如此？也正是因为 Bram 的这种对新功能的「审慎」态度，Vim 7.0 版本于 2006 发布，一直到了&lt;a href="https://www.linuxbabe.com/vim/install-vim-8-0-debian-ubuntu-linux-mint-fedora-centos-arch-linux"&gt;十年之后的 2016 年&lt;/a&gt;，Vim 才发布了有重大更新的 8.0 版本，增加了开发者期待已久的异步操作等新特性。&lt;/p&gt;
&lt;h1 id="neovim-的诞生"&gt;&lt;a href="[[neovim]]-的诞生" class="headerlink anchor"&gt;&lt;i class="iconfont icon-link"&gt;&lt;/i&gt;&lt;/a&gt;Neovim 的诞生&lt;/h1&gt;
&lt;p&gt;Neovim 之所以诞生，就与 Vim 这种「怪异」的开发模式有关。Vim 在版本 8.0 之前是没有异步执行功能的，这意味着，如果你运行一个命令，必须等到命令执行完毕，才可以继续操作当前 buffer，命令执行过程，会阻断当前的 UI，用户只能等着。Neovim 项目的发起人 &lt;a href="https://github.com/tarruda"&gt;tarruda&lt;/a&gt;&lt;sup id="fnref:3"&gt;&lt;a href="[[fn]]:3" class="footnote-ref" role="doc-noteref"&gt;3&lt;/a&gt;&lt;/sup&gt; 曾经给 Vim &lt;a href="https://groups.google.com/forum/#!msg/vim_dev/QF7Bzh1YABU/02-YGr7_sCwJ"&gt;提了一个 patch&lt;/a&gt;，为 Vim 增加了 job 功能，可以帮助 Vim 异步执行操作。不过遗憾的是，该 patch 不知为什么没有被 Bram 接受。因此 Tarruda 在 2014 年 fork 了 Vim，发起了 &lt;a href="https://github.com/neovim/neovim"&gt;Neovim 项目&lt;/a&gt;，开始改变 Vim 的开发模式，遵循现代开源项目的开发流程，同时对 Vim 的代码进行了大的清理和重构，去掉了对老旧系统的支持，同时添加了新的特性。&lt;/p&gt;
&lt;h2 id="neovim-特性"&gt;&lt;a href="[[neovim]]-特性" class="headerlink anchor"&gt;&lt;i class="iconfont icon-link"&gt;&lt;/i&gt;&lt;/a&gt;Neovim 特性&lt;/h2&gt;
&lt;p&gt;经过几年的发展，Neovim 没有陷入凋亡，目前来看，项目很活跃，开发者众多。Neovim 实现了很多新特性，例如内置 terminal 和异步功能都是 Neovim 率先实现，然后 Vim 才跟进实现的，可能是 Bram 也感受到了来自 Neovim 竞争的压力，不希望自己的项目失去开发者的青睐，加快了开发的步伐。遗憾的是，Vim 重新实现的异步功能，方法命名上选择了与 Neovim 不兼容，在 Neovim 中，发起和停止 job 的方法是 &lt;code&gt;jobstart()&lt;/code&gt; 和 &lt;code&gt;jobstop()&lt;/code&gt;，但是 Vim 使用的是 &lt;code&gt;job_start()&lt;/code&gt; 和 &lt;code&gt;job_stop()&lt;/code&gt;，这也给&lt;a href="https://github.com/vim/vim/issues/904"&gt;开发者和用户&lt;/a&gt;&lt;a href="https://github.com/neovim/neovim/issues/8547"&gt;造成了不必要的麻烦&lt;/a&gt;，在使用异步功能的时候，需要面对两套不同的 API&lt;sup id="fnref:4"&gt;&lt;a href="[[fn]]:4" class="footnote-ref" role="doc-noteref"&gt;4&lt;/a&gt;&lt;/sup&gt;。&lt;/p&gt;
&lt;p&gt;在用户层面来看，使用 Neovim 或者 Vim，区别不明显，Neovim 主要改变在软件架构方面，例如 Neovim 增加了 RPC 通信功能，插件可以通过 &lt;a href="https://neovim.io/doc/user/api.html#API"&gt;messagepack&lt;/a&gt; 协议与 Neovim 进行通信，控制 Neovim 的行为。这种方式的好处是插件不必使用原生的 Vim script 编写，大部分的功能都可以通过更加强大的编程语言来实现，例如 Python，或者 JavaScript，利用这个特性的最典型的插件如 &lt;a href="https://github.com/Shougo/deoplete.nvim"&gt;deoplete&lt;/a&gt; 和 &lt;a href="https://github.com/neoclide/coc.nvim"&gt;coc.nvim&lt;/a&gt;，特别是 coc.nvim 插件，利用 JavaScript 实现了非常强大的代码自动补全功能，可以媲美 VS code 提供的代码补全功能。&lt;/p&gt;
&lt;p&gt;由于 Neovim 支持 RPC，在此基础上可以有&lt;a href="https://github.com/neovim/neovim/wiki/Related-projects#gui"&gt;很多 GUI 的实现&lt;/a&gt;，GUI &lt;a href="https://neovim.io/doc/user/ui.html#UI"&gt;通过 RPC 与 Neovim 进行通信&lt;/a&gt;。一些优秀的 GUI 客户端有 &lt;a href="https://github.com/equalsraf/neovim-qt"&gt;nvim-qt&lt;/a&gt;，&lt;a href="https://github.com/qvacua/vimr"&gt;vimR&lt;/a&gt;，&lt;a href="https://github.com/yatli/fvim"&gt;fvim&lt;/a&gt; (19 年刚出来的客户端，还不错)。同时，Neovim 可以充当一个 server，被嵌入到其他编辑器或者程序中，因此你不必使用蹩脚的 Vim 按键模拟插件，可以使用真正的 Vim，例如 &lt;a href="https://marketplace.visualstudio.com/items?itemName=asvetliakov.vscode-neovim"&gt;vscode-neovim&lt;/a&gt; 把 Neovim 嵌入到了 VS code 中，&lt;a href="https://github.com/glacambre/firenvim"&gt;firenvim&lt;/a&gt; 把 Neovim 嵌入到了网页的 textarea 中，非常酷的插件，firenvim 的使用可以参考我之前的 &lt;a href="https://jdhao.github.io/2020/01/01/firenvim_nvim_inside_browser/"&gt;博文&lt;/a&gt;。&lt;/p&gt;
&lt;h1 id="vim-与-neovim-最新进展"&gt;&lt;a href="[[vim-与-neovim]]-最新进展" class="headerlink anchor"&gt;&lt;i class="iconfont icon-link"&gt;&lt;/i&gt;&lt;/a&gt;Vim 与 Neovim 最新进展&lt;/h1&gt;
&lt;h2 id="vim-新进展"&gt;&lt;a href="[[vim]]-新进展" class="headerlink anchor"&gt;&lt;i class="iconfont icon-link"&gt;&lt;/i&gt;&lt;/a&gt;Vim 新进展&lt;/h2&gt;
&lt;p&gt;Bram 在 2018 年做了&lt;a href="https://github.com/vim/vim/issues/3573"&gt;一个调查&lt;/a&gt;，希望了解 Vim 插件开发者目前最需要 Vim 实现哪些功能，其中呼声比较高的是 &lt;a href="https://github.com/vim/vim/issues/3573#issuecomment-433731148"&gt;floating windows&lt;/a&gt;，也就是在当前窗口的任意位置再建立一个悬浮窗口，用来显示额外的信息。2019 年 12 月，在 &lt;a href="https://www.vim.org/vim-8.2-released.php"&gt;Vim 8.2&lt;/a&gt; 版本中，正式加入了 floating window 功能。&lt;/p&gt;
&lt;p&gt;同时 Bram 已经在考虑 &lt;a href="https://groups.google.com/forum/#!topic/vim_dev/__gARXMigYE"&gt;Vim 9.0&lt;/a&gt; 的开发事宜，目前主要考虑的是加快 vim script 执行的速度，逐渐去掉 vim 的 Python，perl 等 interface，以及新的定义函数的方式等。Bram 已经在 GitHub 上创建了 &lt;a href="https://github.com/brammool/vim9"&gt;vim9 仓库&lt;/a&gt;，开始 Vim 9 的开发工作。&lt;/p&gt;
&lt;h2 id="neovim-新进展"&gt;&lt;a href="[[neovim]]-新进展" class="headerlink anchor"&gt;&lt;i class="iconfont icon-link"&gt;&lt;/i&gt;&lt;/a&gt;Neovim 新进展&lt;/h2&gt;
&lt;p&gt;Neovim 团队在 19 年 9 月份，先于 Vim ，在 Neovim &lt;a href="https://github.com/neovim/neovim/commit/e2cc5fe09d98ce1ccaaa666a835c896805ccc196"&gt;0.4 版本&lt;/a&gt;中正式推出了 &lt;a href="https://github.com/neovim/neovim/pull/6619"&gt;floating window 特性&lt;/a&gt;，马上就有一批插件利用 floating window 做了一些功能，例如 &lt;a href="https://github.com/Yggdroot/LeaderF"&gt;leaderf&lt;/a&gt; 利用 floating window 显示文件模糊查找的窗口，coc.nvim 利用 floating window 显示函数方法的签名等，整体感觉炫酷而实用，给人一种 IDE 的既视感。&lt;/p&gt;
&lt;p&gt;另外，Neovim 已经合并了 &lt;a href="https://microsoft.github.io/language-server-protocol/"&gt;Language Server Protocol&lt;/a&gt; 的&lt;a href="https://github.com/neovim/neovim/issues/5522"&gt;客户端实现&lt;/a&gt;，并且专门&lt;a href="https://github.com/neovim/nvim-lsp"&gt;开了一个仓库&lt;/a&gt;帮助用户配置 LSP，对于不喜欢使用第三方 LSP 插件的用户，多了一种选择。&lt;/p&gt;
&lt;p&gt;Neovim 开发者正在开发的一个功能是 &lt;a href="https://github.com/neovim/neovim/pull/9219"&gt;tree-sitter 集成&lt;/a&gt;，目前 Neovim 和 Vim 的语法高亮都是通过正则表达式实现的，效率不高，复杂的正则表达式可能会造成卡顿。&lt;a href="https://github.com/tree-sitter/tree-sitter"&gt;Tree-sitter&lt;/a&gt; 是一个用 C 语言实现的源代码解析工具，等该功能合并进 Neovim 以后，能够进一步提高 Neovim 的速度，解决基于正则表达式的语法高亮的卡顿问题。&lt;/p&gt;
&lt;h1 id="参考"&gt;&lt;a href="#参考" class="headerlink anchor"&gt;&lt;i class="iconfont icon-link"&gt;&lt;/i&gt;&lt;/a&gt;参考&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://news.ycombinator.com/item?id=9263193"&gt;Hacker New 对 Vim 迁移到 GitHub 的讨论&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=yv6KAzRPHkc"&gt;The history of Vim&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.free-soft.org/FSM/english/issue01/vim.html"&gt;Vim, an open-source editor.&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/vim/vim-history"&gt;Vim 各个版本发布信息&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://lwn.net/Articles/713114/"&gt;Vim 8 version release&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://news.ycombinator.com/item?id=21772223"&gt;Hacker News 上对 Vim 8.2 的讨论&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Tarruda
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.reddit.com/r/neovim/comments/85vj86/what_happened_to_tarruda/"&gt;What happened to tarruda&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.reddit.com/r/neovim/comments/3knzem/what_exactly_does_tarruda_do/"&gt;What exactly does tarruda do?&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.reddit.com/r/neovim/comments/b2tc1g/what_i_am_looking_forward_to_builtin_lsp/"&gt;Reddit 上对 Neovim LSP 和 tree-sitter 功能的讨论&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.reddit.com/r/vim/comments/d4xjuv/neovim_v040_released_multigrid_floating_windows/"&gt;Neovim 0.4 版本的讨论&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.reddit.com/r/vim/comments/ebz0cj/vim_9/"&gt;/r/vim 关于 Vim 9.0 的讨论&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.reddit.com/r/neovim/comments/ebz0p1/vim_9/"&gt;/r/neovim 上关于 Vim 9.0 的讨论&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://geoff.greer.fm/2015/01/15/why-neovim-is-better-than-vim/"&gt;Why Neovim is better than Vim&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://groups.google.com/forum/#!searchin/vim_dev/neovim/vim_dev/x0BF9Y0Uby8/Xse9Bvyza0AJ"&gt;Bram 对 Neovim 的看法&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.hostingadvice.com/blog/vim-creator-champions-charityware/"&gt;https://www.hostingadvice.com/blog/vim-creator-champions-charityware/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;section class="footnotes" role="doc-endnotes"&gt;
&lt;ol&gt;
&lt;li id="fn:1" role="doc-endnote"&gt;
&lt;p&gt;&lt;a href="https://vimconf.org/"&gt;VimConf&lt;/a&gt; 是由日本的 Vim 使用与爱好者举办的一年一度的会议，迄今为止已举办了七届。 &lt;a href="[[fnref]]:1" class="footnote-backref" role="doc-backlink"&gt;↩︎&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id="fn:2" role="doc-endnote"&gt;
&lt;p&gt;所以查看 &lt;a href="https://github.com/vim/vim/graphs/contributors"&gt;Vim 项目的贡献者&lt;/a&gt;，就会发现很奇葩的现象：贡献者只有两人，并且几乎所有的 commit 作者都是 Bram。 &lt;a href="[[fnref]]:2" class="footnote-backref" role="doc-backlink"&gt;↩︎&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id="fn:3" role="doc-endnote"&gt;
&lt;p&gt;Tarruda 目前已经不再担任 Neovim 的维护者，目前 Neovim 项目的&lt;a href="https://gitter.im/neovim/neovim?at=5588a8951c3ba5ef5bff811a"&gt;负责人&lt;/a&gt;是 &lt;a href="https://github.com/justinmk"&gt;Justin M. Keyes&lt;/a&gt;. &lt;a href="[[fnref]]:3" class="footnote-backref" role="doc-backlink"&gt;↩︎&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id="fn:4" role="doc-endnote"&gt;
&lt;p&gt;有开发者专门开发了&lt;a href="https://github.com/prabirshrestha/async.vim"&gt;一个插件&lt;/a&gt;，用来抹平 Neovim 和 Vim 异步特性的差异。 &lt;a href="[[fnref]]:4" class="footnote-backref" role="doc-backlink"&gt;↩︎&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/section&gt;
    &lt;/div&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align="center"&gt;转自： &lt;a href="https://jdhao.github.io/2020/01/12/vim_nvim_history_development/"&gt;https://jdhao.github.io/2020/01/12/vim_nvim_history_development/&lt;/a&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;hr&gt;
&lt;h1&gt;Why Neovim is Better than(15 Jan 2015)&lt;/h1&gt;
&lt;article&gt;

&lt;/div&gt;
&lt;div class="post"&gt;
&lt;p&gt;I know Vim better than most. Vim was my first real text editor.&lt;sup&gt;&lt;a href="[[ref_1]]"&gt;[1]&lt;/a&gt;&lt;/sup&gt; I used it for years. I helped write the &lt;a href="https://github.com/Floobits/floobits-vim"&gt;Floobits plugin for Vim&lt;/a&gt;. I’ve delved into Vim’s source code to figure out its workings. I even &lt;a href="https://groups.google.com/d/msg/vim_dev/-4pqDJfHCsM/LkYNCpZjQ70J"&gt;helped write a patch&lt;/a&gt; (though it was rejected). Considering these credentials, I hope you’ll accept that I know what I’m talking about.&lt;/p&gt;

&lt;p&gt;It may come as a shock when I say: The only good part of Vim is its user interface.&lt;/p&gt;

&lt;p&gt;Every other aspect of Vim is irredeemable. The codebase is atrocious. The plugin API is cumbersome and restrictive. The dev community is apathetic. The benevolent dictator is averse to change. There is no chance of fixing these problems.&lt;/p&gt;

&lt;p&gt;I wish it were otherwise, but it isn’t.&lt;/p&gt;

&lt;p&gt;Considering the degree of these criticisms, I should back them up with specific examples.&lt;/p&gt;

&lt;h3 id="the-plugin-api"&gt;The Plugin API&lt;/h3&gt;

&lt;p&gt;Vim’s plugin API is just plain bad. First, all plugin code runs synchronously. That means if any plugin’s code is executing, Vim’s UI is frozen. This makes many types of plugins difficult or impossible to implement. Linters have to finish in milliseconds or risk annoying the user. External commands (such as &lt;code class="highlighter-rouge"&gt;make&lt;/code&gt;) can’t be cancelled, and they must finish before the user can resume editing.&lt;/p&gt;

&lt;p&gt;Another annoyance is that writing plugins requires knowledge of Vim’s special language: vimscript. This is true even if you’re using a Vim compiled with support for other languages. Yes, &lt;code class="highlighter-rouge"&gt;+python&lt;/code&gt; gives you access to Python’s libraries and syntax. But your code will be littered with calls to &lt;code class="highlighter-rouge"&gt;vim.eval()&lt;/code&gt; and &lt;code class="highlighter-rouge"&gt;vim.command()&lt;/code&gt;. Here’s an example:&lt;/p&gt;

&lt;figure class="highlight"&gt;&lt;pre&gt;&lt;code class="language-python" data-lang="python"&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;vim&lt;/span&gt;

&lt;span class="c1"&gt;# Show current directory in Vim
&lt;/span&gt;&lt;span class="n"&gt;cwd&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;vim&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="nb"&gt;eval&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'getcwd()'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;vim&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;command&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;':Explore &lt;/span&gt;&lt;span class="si"&gt;%&lt;/span&gt;&lt;span class="s"&gt;s | redraw'&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="n"&gt;cwd&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;You might notice that issues could arise from failing to properly escape variables in calls to &lt;code class="highlighter-rouge"&gt;eval()&lt;/code&gt; and &lt;code class="highlighter-rouge"&gt;command()&lt;/code&gt;. You’d be right. It’s not uncommon for special character inputs to cause Vim plugins to crash or misbehave.&lt;/p&gt;

&lt;h3 id="the-codebase"&gt;The Codebase&lt;/h3&gt;

&lt;p&gt;I started programming in C almost 20 years ago. Vim is, without question, the worst C codebase I have seen. Copy-pasted but subtly changed code abounds. Indentation is haphazard. Lines contain tabs mixed with spaces. Source files are &lt;em&gt;huge&lt;/em&gt;. There are almost 25,000 lines in &lt;code class="highlighter-rouge"&gt;eval.c&lt;/code&gt;. That file contains over 500 &lt;code class="highlighter-rouge"&gt;[[ifdef]]&lt;/code&gt;s and references globals defined in the 2,000 line &lt;code class="highlighter-rouge"&gt;globals.h&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Some of Vim’s source code isn’t even valid text. It’s not ASCII or UTF-8. The venerable &lt;a href="http://en.wikipedia.org/wiki/File_%28command%29"&gt;&lt;code class="highlighter-rouge"&gt;file&lt;/code&gt;&lt;/a&gt; can’t figure out the encoding.&lt;/p&gt;

&lt;div class="highlighter-rouge"&gt;&lt;div class="highlight"&gt;&lt;pre class="highlight"&gt;&lt;code&gt;ggreer@carbon:~/code/vim% file -I src/digraph.c
src/digraph.c: text/x-c; charset=unknown-8bit
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Thankfully, &lt;code class="highlighter-rouge"&gt;eval.c&lt;/code&gt; is pure ASCII.&lt;/p&gt;

&lt;p&gt;Many of Vim’s &lt;code class="highlighter-rouge"&gt;[[ifdef]]&lt;/code&gt;s are for platforms that became irrelevant decades ago: BeOS, VMS, Amiga, Mac OS Classic, IRIX. These preprocessor statements may seem innocuous, but they slow development and inhibit new features. Also, Vim doesn’t even work on most of these platforms anymore. It’s just that nobody has an ancient system with which to test Vim. Neovim developers analyzed many of the preprocessor statements and &lt;a href="https://github.com/neovim/neovim/pull/814"&gt;found a significant number that could never be included&lt;/a&gt; in a working Vim.&lt;/p&gt;

&lt;p&gt;Complexity stemming from cross-platform support may be excusable, but even something as simple as reading keyboard input is a nightmare in Vim. Stepping through with a debugger will result in call stacks such as &lt;code class="highlighter-rouge"&gt;inchar()&lt;/code&gt; in &lt;code class="highlighter-rouge"&gt;getchar.c&lt;/code&gt; calling &lt;code class="highlighter-rouge"&gt;ui_inchar()&lt;/code&gt; in &lt;code class="highlighter-rouge"&gt;ui.c&lt;/code&gt;, which calls &lt;code class="highlighter-rouge"&gt;mch_inchar()&lt;/code&gt; in &lt;code class="highlighter-rouge"&gt;os_unix.c&lt;/code&gt;, which calls &lt;code class="highlighter-rouge"&gt;WaitForChar()&lt;/code&gt;, which calls &lt;code class="highlighter-rouge"&gt;RealWaitForChar()&lt;/code&gt;. This call stack can be completely different on different platforms. It also differs when running in command line versus GUI mode.&lt;/p&gt;

&lt;p&gt;Figuring out Vim’s control flow is harrowing. Even when you hit paydirt in &lt;code class="highlighter-rouge"&gt;RealWaitForChar()&lt;/code&gt;, the code is extremely hard to follow. Here’s a snippet. You can view the whole function at my &lt;a href="/vim/[[realwaitforchar]]"&gt;Vim Hall of WTF&lt;/a&gt;.&lt;/p&gt;

&lt;figure class="highlight"&gt;&lt;pre&gt;&lt;code class="language-c" data-lang="c"&gt;&lt;span class="cp"&gt;# if defined(HAVE_GETTIMEOFDAY) &amp;amp;&amp;amp; defined(HAVE_SYS_TIME_H)
&lt;/span&gt;    &lt;span class="cm"&gt;/* Remember at what time we started, so that we know how much longer we
     * should wait after being interrupted. */&lt;/span&gt;
&lt;span class="cp"&gt;#  define USE_START_TV
&lt;/span&gt;    &lt;span class="k"&gt;struct&lt;/span&gt; &lt;span class="n"&gt;timeval&lt;/span&gt;  &lt;span class="n"&gt;start_tv&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;msec&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
&lt;span class="cp"&gt;#  ifdef FEAT_XCLIPBOARD
&lt;/span&gt;        &lt;span class="n"&gt;xterm_Shell&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Widget&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;
&lt;span class="cp"&gt;#   if defined(USE_XSMP) || defined(FEAT_MZSCHEME)
&lt;/span&gt;        &lt;span class="o"&gt;||&lt;/span&gt;
&lt;span class="cp"&gt;#   endif

&lt;/span&gt;        &lt;span class="n"&gt;xsmp_icefd&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;
&lt;span class="cp"&gt;#   ifdef FEAT_MZSCHEME
&lt;/span&gt;        &lt;span class="o"&gt;||&lt;/span&gt;
&lt;span class="cp"&gt;#   endif

&lt;/span&gt;    &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;mzthreads_allowed&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="n"&gt;p_mzq&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="cp"&gt;#  endif
&lt;/span&gt;        &lt;span class="p"&gt;))&lt;/span&gt;
    &lt;span class="n"&gt;gettimeofday&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;start_tv&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;NULL&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="cp"&gt;# endif&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;That &lt;code class="highlighter-rouge"&gt;if&lt;/code&gt; statement’s conditions span 17 lines and 4 different &lt;code class="highlighter-rouge"&gt;[[ifdef]]&lt;/code&gt;s. All to call &lt;code class="highlighter-rouge"&gt;gettimeofday()&lt;/code&gt;. Amusingly, even the body of that statement has a bug: times returned by &lt;code class="highlighter-rouge"&gt;gettimeofday()&lt;/code&gt; are not guaranteed to increase. User intervention or ntpd can cause the system clock to go back in time. The correct solution is to use a monotonically increasing time function, such Linux’s &lt;code class="highlighter-rouge"&gt;clock_gettime()&lt;/code&gt; or OS X’s &lt;code class="highlighter-rouge"&gt;mach_absolute_time()&lt;/code&gt;.&lt;/p&gt;

&lt;h3 id="the-developer-community"&gt;The Developer Community&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://github.com/kans"&gt;Matt&lt;/a&gt; and I worked for months to &lt;a href="https://news.floobits.com/2013/09/17/adding-settimeout-to-vim/"&gt;add asynchronous functionality to Vim&lt;/a&gt;. From that experience, I have few good things to say about Vim’s dev community. In fact, out of all the developer communities I’ve encountered, Vim’s is the most hostile to change. Anything that isn’t a bug fix is frowned upon.&lt;/p&gt;

&lt;p&gt;Patches are often criticized for ridiculous reasons. After we &lt;a href="https://groups.google.com/d/msg/vim_dev/-4pqDJfHCsM/LkYNCpZjQ70J"&gt;posted our patch to the Vim-dev mailing list&lt;/a&gt;, the first reply was:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;NOTE: Don’t use ANSI style function declarations. A few people still have to use a compiler that doesn’t support it.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Seriously? C89 is a quarter-century old. The number of people stuck on older compilers can be counted on one hand. This is a non-concern. Still, I acquiesced. It was easier to make the change than argue with the critic.&lt;/p&gt;

&lt;p&gt;The rest of that thread is me being as civil as possible, despite discouragement at every turn. The replies might as well be a paint-by-numbers guide on how to alienate new contributors.&lt;/p&gt;

&lt;p&gt;On a more general note: After reading random posts on the Vim-dev mailing list, I get the impression that the developer community is fragmented. Some want Vim to be similar to &lt;a href="http://www.sublimetext.com/"&gt;Sublime Text&lt;/a&gt;: A flexible, extensible text editor for developers. Some (including &lt;a href="http://en.wikipedia.org/wiki/Benevolent_dictator_for_life"&gt;BDFL&lt;/a&gt; Bram Moolenaar) are afraid of Vim becoming an IDE.&lt;/p&gt;

&lt;h3 id="the-overly-cautious-dictator-for-life"&gt;The Overly Cautious Dictator for Life&lt;/h3&gt;

&lt;p&gt;Speaking of Bram Moolenaar: His merge criteria are inscrutable. Some patches he ignores. Some, he attacks. Others, he merges.&lt;/p&gt;

&lt;p&gt;Take a look again at &lt;a href="https://groups.google.com/d/msg/vim_dev/-4pqDJfHCsM/LkYNCpZjQ70J"&gt;the thread where Matt and I submitted our patch&lt;/a&gt;. We did our best to cater to Bram’s every whim, but it was a waste of time. Had he immediately told us to give up, it would have been a better outcome for all involved. Instead, we were given hope and strung along, working on a patch that had no chance of getting merged.&lt;/p&gt;

&lt;h3 id="the-alternative"&gt;The Alternative&lt;/h3&gt;

&lt;p&gt;A couple of months after my disillusionment with Vim, &lt;a href="https://github.com/tarruda"&gt;Thiago de Arruda&lt;/a&gt; &lt;a href="https://groups.google.com/d/msg/vim_dev/QF7Bzh1YABU/02-YGr7_sCwJ"&gt;submitted a similar patch&lt;/a&gt;. It was likewise rejected. But unlike me, Thiago didn’t give up. He started &lt;a href="http://neovim.org/"&gt;NeoVim&lt;/a&gt; and &lt;a href="https://www.bountysource.com/teams/neovim"&gt;created a Bountysource for it&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Neovim is exactly what it claims to be. It fixes every issue I have with Vim: The plugin API. The codebase. The community. The BDFL.&lt;/p&gt;

&lt;p&gt;Neovim’s plugin API is backwards-compatible with Vim, but it also allows asynchronous execution. Users have already made plugins that Vim can never have. For example, &lt;a href="https://github.com/benekastah/neomake"&gt;Neomake&lt;/a&gt; allows async linters. That feature alone is worth making the switch for.&lt;/p&gt;

&lt;p&gt;Neovim’s codebase is a substantial improvement. They’ve &lt;a href="https://github.com/neovim/neovim/wiki/Porting-OS-layer-to-libuv"&gt;replaced much of the hacky, platform-specific code with libuv&lt;/a&gt;. They’ve fixed the problems with indentation, style, and bad file encodings. They’ve removed old code for ancient, unused platforms. They’ve drastically increased test quality and coverage. There’s still much to be done, but the difference is already worlds better.&lt;/p&gt;

&lt;p&gt;Neovim’s development community is excellent. They respond to issues. They merge pull requests. They give quality feedback. And most importantly, they’re nice to newbies.&lt;/p&gt;

&lt;p&gt;In fact, they’re nice to everyone. The main dev team holds no enmity toward Bram Moolenaar. They recognize Vim’s failings, but they don’t feel the need to criticize it.&lt;/p&gt;

&lt;p&gt;The only thing Neovim is missing is a tagged stable release. But there’s no need to wait. Right now you can clone Neovim, compile it, and have an editor that works with all your existing plugins.&lt;/p&gt;

&lt;p&gt;If you are a Vim user, I strongly recommend switching to Neovim. It’s the Vim you’re used to, but with plugins you never knew you wanted.&lt;/p&gt;



&lt;p&gt;Thanks to both &lt;a href="http://bjorn.tipling.com/"&gt;Bjorn Tipling&lt;/a&gt; and &lt;a href="https://github.com/kans"&gt;Matt Kaniaris&lt;/a&gt; for their help with this post.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;&lt;span id="ref_1"&gt;&lt;/span&gt;&lt;a href="https://en.wikipedia.org/wiki/MS-DOS_Editor"&gt;Edit&lt;/a&gt; and &lt;a href="http://en.wikipedia.org/wiki/Pico_%28text_editor%29"&gt;pico&lt;/a&gt; don’t count.&lt;/li&gt;
&lt;/ol&gt;

&lt;/div&gt;
&lt;/article&gt;

&lt;hr&gt;
&lt;h2&gt;翻译&lt;/h2&gt;
&lt;article&gt;
&lt;div class="post-header"&gt;
&lt;div class="post-title" itemprop="title"&gt;&lt;a href="/2015/01/15/why-neovim-is-better-than-vim/"&gt;&lt;font style="vertical-align: inherit;"&gt;&lt;font style="vertical-align: inherit;"&gt;为什么Neovim比Vim更好&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;/div&gt;
&lt;div class="post-date" itemprop="pubdate"&gt;&lt;font style="vertical-align: inherit;"&gt;&lt;font style="vertical-align: inherit;"&gt;2015年1月15日&lt;/font&gt;&lt;/font&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="post"&gt;
&lt;p&gt;&lt;font style="vertical-align: inherit;"&gt;&lt;font style="vertical-align: inherit;"&gt;我比大多数人更了解Vim。&lt;/font&gt;&lt;font style="vertical-align: inherit;"&gt;Vim是我的第一个真实文本编辑器。&lt;/font&gt;&lt;/font&gt;&lt;sup&gt;&lt;a href="[[ref_1]]"&gt;&lt;font style="vertical-align: inherit;"&gt;&lt;font style="vertical-align: inherit;"&gt;[1]&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;/sup&gt;&lt;font style="vertical-align: inherit;"&gt;&lt;font style="vertical-align: inherit;"&gt;我使用了多年。&lt;/font&gt;&lt;font style="vertical-align: inherit;"&gt;我帮助编写了&lt;/font&gt;&lt;/font&gt;&lt;a href="https://github.com/Floobits/floobits-vim"&gt;&lt;font style="vertical-align: inherit;"&gt;&lt;font style="vertical-align: inherit;"&gt;Vim&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style="vertical-align: inherit;"&gt;&lt;font style="vertical-align: inherit;"&gt;的&lt;/font&gt;&lt;a href="https://github.com/Floobits/floobits-vim"&gt;&lt;font style="vertical-align: inherit;"&gt;Floobits插件&lt;/font&gt;&lt;/a&gt;&lt;font style="vertical-align: inherit;"&gt;。&lt;/font&gt;&lt;font style="vertical-align: inherit;"&gt;我已经研究了Vim的源代码以弄清其工作原理。&lt;/font&gt;&lt;font style="vertical-align: inherit;"&gt;我什至&lt;/font&gt;&lt;/font&gt;&lt;a href="https://groups.google.com/d/msg/vim_dev/-4pqDJfHCsM/LkYNCpZjQ70J"&gt;&lt;font style="vertical-align: inherit;"&gt;&lt;font style="vertical-align: inherit;"&gt;帮助写了一个补丁&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style="vertical-align: inherit;"&gt;&lt;font style="vertical-align: inherit;"&gt;（尽管被拒绝了）。&lt;/font&gt;&lt;font style="vertical-align: inherit;"&gt;考虑到这些凭据，希望您会接受我知道我在说什么。&lt;/font&gt;&lt;/font&gt;&lt;/p&gt;

&lt;p&gt;&lt;font style="vertical-align: inherit;"&gt;&lt;font style="vertical-align: inherit;"&gt;当我说：Vim唯一好的方面就是它的用户界面时，可能会感到震惊。&lt;/font&gt;&lt;/font&gt;&lt;/p&gt;

&lt;p&gt;&lt;font style="vertical-align: inherit;"&gt;&lt;font style="vertical-align: inherit;"&gt;Vim的所有其他方面都是不可挽回的。&lt;/font&gt;&lt;font style="vertical-align: inherit;"&gt;该代码库是残酷的。&lt;/font&gt;&lt;font style="vertical-align: inherit;"&gt;插件API繁琐且受限。&lt;/font&gt;&lt;font style="vertical-align: inherit;"&gt;开发人员社区无动于衷。&lt;/font&gt;&lt;font style="vertical-align: inherit;"&gt;仁慈的独裁者不愿改变。&lt;/font&gt;&lt;font style="vertical-align: inherit;"&gt;没有机会解决这些问题。&lt;/font&gt;&lt;/font&gt;&lt;/p&gt;

&lt;p&gt;&lt;font style="vertical-align: inherit;"&gt;&lt;font style="vertical-align: inherit;"&gt;我希望不是这样，但事实并非如此。&lt;/font&gt;&lt;/font&gt;&lt;/p&gt;

&lt;p&gt;&lt;font style="vertical-align: inherit;"&gt;&lt;font style="vertical-align: inherit;"&gt;考虑到这些批评的程度，我应该用具体的例子来支持它们。&lt;/font&gt;&lt;/font&gt;&lt;/p&gt;

&lt;h3 id="the-plugin-api"&gt;&lt;font style="vertical-align: inherit;"&gt;&lt;font style="vertical-align: inherit;"&gt;插件API&lt;/font&gt;&lt;/font&gt;&lt;/h3&gt;

&lt;p&gt;&lt;font style="vertical-align: inherit;"&gt;&lt;font style="vertical-align: inherit;"&gt;Vim的插件API很糟糕。&lt;/font&gt;&lt;font style="vertical-align: inherit;"&gt;首先，所有插件代码均同步运行。&lt;/font&gt;&lt;font style="vertical-align: inherit;"&gt;这意味着，如果任何插件的代码正在执行，Vim的用户界面将被冻结。&lt;/font&gt;&lt;font style="vertical-align: inherit;"&gt;这使得许多类型的插件难以实现或无法实现。&lt;/font&gt;&lt;font style="vertical-align: inherit;"&gt;短绒必须在毫秒内完成，否则有可能惹恼用户。&lt;/font&gt;&lt;font style="vertical-align: inherit;"&gt;外部命令（例如&lt;/font&gt;&lt;/font&gt;&lt;code class="highlighter-rouge"&gt;make&lt;/code&gt;&lt;font style="vertical-align: inherit;"&gt;&lt;font style="vertical-align: inherit;"&gt;）不能取消，它们必须先完成，用户才能继续编辑。&lt;/font&gt;&lt;/font&gt;&lt;/p&gt;

&lt;p&gt;&lt;font style="vertical-align: inherit;"&gt;&lt;font style="vertical-align: inherit;"&gt;另一个烦人的问题是编写插件需要了解Vim的特殊语言：vimscript。&lt;/font&gt;&lt;font style="vertical-align: inherit;"&gt;即使您正在使用支持其他语言的Vim编译，也是如此。&lt;/font&gt;&lt;font style="vertical-align: inherit;"&gt;是的，&lt;/font&gt;&lt;/font&gt;&lt;code class="highlighter-rouge"&gt;+python&lt;/code&gt;&lt;font style="vertical-align: inherit;"&gt;&lt;font style="vertical-align: inherit;"&gt;您可以访问Python的库和语法。&lt;/font&gt;&lt;font style="vertical-align: inherit;"&gt;但是，您的代码会被调用&lt;/font&gt;&lt;/font&gt;&lt;code class="highlighter-rouge"&gt;vim.eval()&lt;/code&gt;&lt;font style="vertical-align: inherit;"&gt;&lt;font style="vertical-align: inherit;"&gt;和&lt;/font&gt;&lt;font style="vertical-align: inherit;"&gt;所困扰&lt;/font&gt;&lt;/font&gt;&lt;code class="highlighter-rouge"&gt;vim.command()&lt;/code&gt;&lt;font style="vertical-align: inherit;"&gt;&lt;font style="vertical-align: inherit;"&gt;。&lt;/font&gt;&lt;font style="vertical-align: inherit;"&gt;这是一个例子：&lt;/font&gt;&lt;/font&gt;&lt;/p&gt;

&lt;figure class="highlight"&gt;&lt;pre&gt;&lt;code class="language-python" data-lang="python"&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;vim&lt;/span&gt;&lt;font&gt;&lt;/font&gt;
&lt;font&gt;&lt;/font&gt;
&lt;span class="c1"&gt;# Show current directory in Vim
&lt;/span&gt;&lt;span class="n"&gt;cwd&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;vim&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="nb"&gt;eval&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'getcwd()'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;vim&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;command&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;':Explore &lt;/span&gt;&lt;span class="si"&gt;%&lt;/span&gt;&lt;span class="s"&gt;s | redraw'&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="n"&gt;cwd&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;&lt;font style="vertical-align: inherit;"&gt;&lt;font style="vertical-align: inherit;"&gt;您可能会注意到，如果无法正确调用&lt;/font&gt;&lt;/font&gt;&lt;code class="highlighter-rouge"&gt;eval()&lt;/code&gt;&lt;font style="vertical-align: inherit;"&gt;&lt;font style="vertical-align: inherit;"&gt;和&lt;/font&gt;&lt;font style="vertical-align: inherit;"&gt;，则可能会引起问题&lt;/font&gt;&lt;/font&gt;&lt;code class="highlighter-rouge"&gt;command()&lt;/code&gt;&lt;font style="vertical-align: inherit;"&gt;&lt;font style="vertical-align: inherit;"&gt;。&lt;/font&gt;&lt;font style="vertical-align: inherit;"&gt;没错 &lt;/font&gt;&lt;font style="vertical-align: inherit;"&gt;特殊字符输入导致Vim插件崩溃或行为异常的情况并不少见。&lt;/font&gt;&lt;/font&gt;&lt;/p&gt;

&lt;h3 id="the-codebase"&gt;&lt;font style="vertical-align: inherit;"&gt;&lt;font style="vertical-align: inherit;"&gt;代码库&lt;/font&gt;&lt;/font&gt;&lt;/h3&gt;

&lt;p&gt;&lt;font style="vertical-align: inherit;"&gt;&lt;font style="vertical-align: inherit;"&gt;大约20年前，我开始用C编程。&lt;/font&gt;&lt;font style="vertical-align: inherit;"&gt;毫无疑问，Vim是我所见过的最糟糕的C代码库。&lt;/font&gt;&lt;font style="vertical-align: inherit;"&gt;复制粘贴但微妙更改的代码比比皆是。&lt;/font&gt;&lt;font style="vertical-align: inherit;"&gt;缩进是偶然的。&lt;/font&gt;&lt;font style="vertical-align: inherit;"&gt;行包含带有空格的制表符。&lt;/font&gt;&lt;font style="vertical-align: inherit;"&gt;源文件&lt;/font&gt;&lt;/font&gt;&lt;em&gt;&lt;font style="vertical-align: inherit;"&gt;&lt;font style="vertical-align: inherit;"&gt;很大&lt;/font&gt;&lt;/font&gt;&lt;/em&gt;&lt;font style="vertical-align: inherit;"&gt;&lt;font style="vertical-align: inherit;"&gt;。&lt;/font&gt;&lt;font style="vertical-align: inherit;"&gt;大约有25,000行&lt;/font&gt;&lt;/font&gt;&lt;code class="highlighter-rouge"&gt;eval.c&lt;/code&gt;&lt;font style="vertical-align: inherit;"&gt;&lt;font style="vertical-align: inherit;"&gt;。&lt;/font&gt;&lt;font style="vertical-align: inherit;"&gt;该文件包含500 &lt;/font&gt;&lt;/font&gt;&lt;code class="highlighter-rouge"&gt;[[ifdef]]&lt;/code&gt;&lt;font style="vertical-align: inherit;"&gt;&lt;font style="vertical-align: inherit;"&gt;多个&lt;/font&gt;&lt;font style="vertical-align: inherit;"&gt;文件，&lt;/font&gt;&lt;font style="vertical-align: inherit;"&gt;并引用了2,000行中定义的全局变量&lt;/font&gt;&lt;/font&gt;&lt;code class="highlighter-rouge"&gt;globals.h&lt;/code&gt;&lt;font style="vertical-align: inherit;"&gt;&lt;font style="vertical-align: inherit;"&gt;。&lt;/font&gt;&lt;/font&gt;&lt;/p&gt;

&lt;p&gt;&lt;font style="vertical-align: inherit;"&gt;&lt;font style="vertical-align: inherit;"&gt;Vim的某些源代码甚至不是有效的文本。&lt;/font&gt;&lt;font style="vertical-align: inherit;"&gt;不是ASCII或UTF-8。&lt;/font&gt;&lt;font style="vertical-align: inherit;"&gt;尊者&lt;/font&gt;&lt;/font&gt;&lt;a href="http://en.wikipedia.org/wiki/File_%28command%29"&gt;&lt;code class="highlighter-rouge"&gt;file&lt;/code&gt;&lt;/a&gt;&lt;font style="vertical-align: inherit;"&gt;&lt;font style="vertical-align: inherit;"&gt;无法弄清楚编码。&lt;/font&gt;&lt;/font&gt;&lt;/p&gt;

&lt;div class="highlighter-rouge"&gt;&lt;div class="highlight"&gt;&lt;pre class="highlight"&gt;&lt;code&gt;ggreer@carbon:~/code/vim% file -I src/digraph.c &lt;font&gt;&lt;/font&gt;
src/digraph.c: text/x-c; charset=unknown-8bit&lt;font&gt;&lt;/font&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;font style="vertical-align: inherit;"&gt;&lt;font style="vertical-align: inherit;"&gt;幸运的是，它&lt;/font&gt;&lt;/font&gt;&lt;code class="highlighter-rouge"&gt;eval.c&lt;/code&gt;&lt;font style="vertical-align: inherit;"&gt;&lt;font style="vertical-align: inherit;"&gt;是纯ASCII。&lt;/font&gt;&lt;/font&gt;&lt;/p&gt;

&lt;p&gt;&lt;font style="vertical-align: inherit;"&gt;&lt;font style="vertical-align: inherit;"&gt;Vim的许多&lt;/font&gt;&lt;/font&gt;&lt;code class="highlighter-rouge"&gt;[[ifdef]]&lt;/code&gt;&lt;font style="vertical-align: inherit;"&gt;&lt;font style="vertical-align: inherit;"&gt;平台都是数十年前变得无关紧要的平台：BeOS，VMS，Amiga，Mac OS Classic，IRIX。&lt;/font&gt;&lt;font style="vertical-align: inherit;"&gt;这些预处理器语句看似无害，但它们减慢了开发速度并抑制了新功能。&lt;/font&gt;&lt;font style="vertical-align: inherit;"&gt;而且，Vim甚至不能在大多数这些平台上运行。&lt;/font&gt;&lt;font style="vertical-align: inherit;"&gt;只是没有人拥有可以测试Vim的古老系统。&lt;/font&gt;&lt;font style="vertical-align: inherit;"&gt;Neovim开发人员分析了许多预处理器语句，&lt;/font&gt;&lt;/font&gt;&lt;a href="https://github.com/neovim/neovim/pull/814"&gt;&lt;font style="vertical-align: inherit;"&gt;&lt;font style="vertical-align: inherit;"&gt;发现大量永远无法包含&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style="vertical-align: inherit;"&gt;&lt;font style="vertical-align: inherit;"&gt;在工作中的Vim中。&lt;/font&gt;&lt;/font&gt;&lt;/p&gt;

&lt;p&gt;&lt;font style="vertical-align: inherit;"&gt;&lt;font style="vertical-align: inherit;"&gt;跨平台支持所带来的复杂性可能是可以原谅的，但是即使像读取键盘输入这样简单的事情也是Vim的噩梦。&lt;/font&gt;&lt;font style="vertical-align: inherit;"&gt;用调试器逐句通过将导致调用栈作为这样&lt;/font&gt;&lt;/font&gt;&lt;code class="highlighter-rouge"&gt;inchar()&lt;/code&gt;&lt;font style="vertical-align: inherit;"&gt;&lt;font style="vertical-align: inherit;"&gt;在&lt;/font&gt;&lt;/font&gt;&lt;code class="highlighter-rouge"&gt;getchar.c&lt;/code&gt;&lt;font style="vertical-align: inherit;"&gt;&lt;font style="vertical-align: inherit;"&gt;通话&lt;/font&gt;&lt;/font&gt;&lt;code class="highlighter-rouge"&gt;ui_inchar()&lt;/code&gt;&lt;font style="vertical-align: inherit;"&gt;&lt;font style="vertical-align: inherit;"&gt;中&lt;/font&gt;&lt;/font&gt;&lt;code class="highlighter-rouge"&gt;ui.c&lt;/code&gt;&lt;font style="vertical-align: inherit;"&gt;&lt;font style="vertical-align: inherit;"&gt;，它调用&lt;/font&gt;&lt;/font&gt;&lt;code class="highlighter-rouge"&gt;mch_inchar()&lt;/code&gt;&lt;font style="vertical-align: inherit;"&gt;&lt;font style="vertical-align: inherit;"&gt;的&lt;/font&gt;&lt;/font&gt;&lt;code class="highlighter-rouge"&gt;os_unix.c&lt;/code&gt;&lt;font style="vertical-align: inherit;"&gt;&lt;font style="vertical-align: inherit;"&gt;，这就要求&lt;/font&gt;&lt;/font&gt;&lt;code class="highlighter-rouge"&gt;WaitForChar()&lt;/code&gt;&lt;font style="vertical-align: inherit;"&gt;&lt;font style="vertical-align: inherit;"&gt;，这就要求&lt;/font&gt;&lt;/font&gt;&lt;code class="highlighter-rouge"&gt;RealWaitForChar()&lt;/code&gt;&lt;font style="vertical-align: inherit;"&gt;&lt;font style="vertical-align: inherit;"&gt;。&lt;/font&gt;&lt;font style="vertical-align: inherit;"&gt;在不同平台上，此调用堆栈可以完全不同。&lt;/font&gt;&lt;font style="vertical-align: inherit;"&gt;在命令行模式和GUI模式下运行时，它也有所不同。&lt;/font&gt;&lt;/font&gt;&lt;/p&gt;

&lt;p&gt;&lt;font style="vertical-align: inherit;"&gt;&lt;font style="vertical-align: inherit;"&gt;弄清楚Vim的控制流程令人痛苦。&lt;/font&gt;&lt;font style="vertical-align: inherit;"&gt;即使您在中输入paydirt &lt;/font&gt;&lt;/font&gt;&lt;code class="highlighter-rouge"&gt;RealWaitForChar()&lt;/code&gt;&lt;font style="vertical-align: inherit;"&gt;&lt;font style="vertical-align: inherit;"&gt;，代码也极难遵循。&lt;/font&gt;&lt;font style="vertical-align: inherit;"&gt;这是一个片段。&lt;/font&gt;&lt;font style="vertical-align: inherit;"&gt;您可以在我&lt;/font&gt;&lt;/font&gt;&lt;a href="/vim/[[realwaitforchar]]"&gt;&lt;font style="vertical-align: inherit;"&gt;&lt;font style="vertical-align: inherit;"&gt;的WTF Vim大厅中&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style="vertical-align: inherit;"&gt;&lt;font style="vertical-align: inherit;"&gt;查看整个功能&lt;/font&gt;&lt;font style="vertical-align: inherit;"&gt;。&lt;/font&gt;&lt;/font&gt;&lt;/p&gt;

&lt;figure class="highlight"&gt;&lt;pre&gt;&lt;code class="language-c" data-lang="c"&gt;&lt;span class="cp"&gt;# if defined(HAVE_GETTIMEOFDAY) &amp;amp;&amp;amp; defined(HAVE_SYS_TIME_H)
&lt;/span&gt;    &lt;span class="cm"&gt;/* Remember at what time we started, so that we know how much longer we
     * should wait after being interrupted. */&lt;/span&gt;
&lt;span class="cp"&gt;#  define USE_START_TV
&lt;/span&gt;    &lt;span class="k"&gt;struct&lt;/span&gt; &lt;span class="n"&gt;timeval&lt;/span&gt;  &lt;span class="n"&gt;start_tv&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;font&gt;&lt;/font&gt;
&lt;font&gt;&lt;/font&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;msec&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
&lt;span class="cp"&gt;#  ifdef FEAT_XCLIPBOARD
&lt;/span&gt;        &lt;span class="n"&gt;xterm_Shell&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Widget&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;
&lt;span class="cp"&gt;#   if defined(USE_XSMP) || defined(FEAT_MZSCHEME)
&lt;/span&gt;        &lt;span class="o"&gt;||&lt;/span&gt;
&lt;span class="cp"&gt;#   endif

&lt;/span&gt;        &lt;span class="n"&gt;xsmp_icefd&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;
&lt;span class="cp"&gt;#   ifdef FEAT_MZSCHEME
&lt;/span&gt;        &lt;span class="o"&gt;||&lt;/span&gt;
&lt;span class="cp"&gt;#   endif
&lt;/span&gt;    &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;mzthreads_allowed&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="n"&gt;p_mzq&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="cp"&gt;#  endif
&lt;/span&gt;        &lt;span class="p"&gt;))&lt;/span&gt;
    &lt;span class="n"&gt;gettimeofday&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;start_tv&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;NULL&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="cp"&gt;# endif&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;&lt;font style="vertical-align: inherit;"&gt;&lt;font style="vertical-align: inherit;"&gt;该&lt;/font&gt;&lt;/font&gt;&lt;code class="highlighter-rouge"&gt;if&lt;/code&gt;&lt;font style="vertical-align: inherit;"&gt;&lt;font style="vertical-align: inherit;"&gt;语句的条件跨越17行和4个不同的&lt;/font&gt;&lt;/font&gt;&lt;code class="highlighter-rouge"&gt;[[ifdef]]&lt;/code&gt;&lt;font style="vertical-align: inherit;"&gt;&lt;font style="vertical-align: inherit;"&gt;s。&lt;/font&gt;&lt;font style="vertical-align: inherit;"&gt;所有人都可以打电话&lt;/font&gt;&lt;/font&gt;&lt;code class="highlighter-rouge"&gt;gettimeofday()&lt;/code&gt;&lt;font style="vertical-align: inherit;"&gt;&lt;font style="vertical-align: inherit;"&gt;。&lt;/font&gt;&lt;font style="vertical-align: inherit;"&gt;有趣的是，即使是该语句的主体也存在一个错误：&lt;/font&gt;&lt;/font&gt;&lt;code class="highlighter-rouge"&gt;gettimeofday()&lt;/code&gt;&lt;font style="vertical-align: inherit;"&gt;&lt;font style="vertical-align: inherit;"&gt;不能保证&lt;/font&gt;&lt;font style="vertical-align: inherit;"&gt;返回的时间&lt;/font&gt;&lt;font style="vertical-align: inherit;"&gt;会增加。&lt;/font&gt;&lt;font style="vertical-align: inherit;"&gt;用户干预或ntpd可能导致系统时钟倒退。&lt;/font&gt;&lt;font style="vertical-align: inherit;"&gt;正确的解决方案是使用单调递增的时间函数，例如Linux &lt;/font&gt;&lt;/font&gt;&lt;code class="highlighter-rouge"&gt;clock_gettime()&lt;/code&gt;&lt;font style="vertical-align: inherit;"&gt;&lt;font style="vertical-align: inherit;"&gt;或OSX &lt;/font&gt;&lt;/font&gt;&lt;code class="highlighter-rouge"&gt;mach_absolute_time()&lt;/code&gt;&lt;font style="vertical-align: inherit;"&gt;&lt;font style="vertical-align: inherit;"&gt;。&lt;/font&gt;&lt;/font&gt;&lt;/p&gt;

&lt;h3 id="the-developer-community"&gt;&lt;font style="vertical-align: inherit;"&gt;&lt;font style="vertical-align: inherit;"&gt;开发者社区&lt;/font&gt;&lt;/font&gt;&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://github.com/kans"&gt;&lt;font style="vertical-align: inherit;"&gt;&lt;font style="vertical-align: inherit;"&gt;Matt&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style="vertical-align: inherit;"&gt;&lt;font style="vertical-align: inherit;"&gt;和我工作了几个月，以为&lt;/font&gt;&lt;/font&gt;&lt;a href="https://news.floobits.com/2013/09/17/adding-settimeout-to-vim/"&gt;&lt;font style="vertical-align: inherit;"&gt;&lt;font style="vertical-align: inherit;"&gt;Vim添加异步功能&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style="vertical-align: inherit;"&gt;&lt;font style="vertical-align: inherit;"&gt;。&lt;/font&gt;&lt;font style="vertical-align: inherit;"&gt;从这些经验来看，关于Vim的开发人员社区，我几乎无话可说。&lt;/font&gt;&lt;font style="vertical-align: inherit;"&gt;实际上，在我遇到的所有开发人员社区中，Vim是最讨厌改变的。&lt;/font&gt;&lt;font style="vertical-align: inherit;"&gt;任何不是错误修复的东西都被皱眉了。&lt;/font&gt;&lt;/font&gt;&lt;/p&gt;

&lt;p&gt;&lt;font style="vertical-align: inherit;"&gt;&lt;font style="vertical-align: inherit;"&gt;补丁经常由于荒唐的原因而受到批评。&lt;/font&gt;&lt;font style="vertical-align: inherit;"&gt;在&lt;/font&gt;&lt;/font&gt;&lt;a href="https://groups.google.com/d/msg/vim_dev/-4pqDJfHCsM/LkYNCpZjQ70J"&gt;&lt;font style="vertical-align: inherit;"&gt;&lt;font style="vertical-align: inherit;"&gt;将补丁发布到Vim-dev邮件列表之后&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style="vertical-align: inherit;"&gt;&lt;font style="vertical-align: inherit;"&gt;，第一个答复是：&lt;/font&gt;&lt;/font&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;font style="vertical-align: inherit;"&gt;&lt;font style="vertical-align: inherit;"&gt;注意：不要使用ANSI样式函数声明。&lt;/font&gt;&lt;font style="vertical-align: inherit;"&gt;仍然有一些人不得不使用不支持它的编译器。&lt;/font&gt;&lt;/font&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;font style="vertical-align: inherit;"&gt;&lt;font style="vertical-align: inherit;"&gt;认真吗 &lt;/font&gt;&lt;font style="vertical-align: inherit;"&gt;C89已有25年的历史了。&lt;/font&gt;&lt;font style="vertical-align: inherit;"&gt;卡在旧版编译器上的人数可以一方面计算。&lt;/font&gt;&lt;font style="vertical-align: inherit;"&gt;这是无关紧要的。&lt;/font&gt;&lt;font style="vertical-align: inherit;"&gt;我还是默许了。&lt;/font&gt;&lt;font style="vertical-align: inherit;"&gt;进行更改要比与批评者争论容易。&lt;/font&gt;&lt;/font&gt;&lt;/p&gt;

&lt;p&gt;&lt;font style="vertical-align: inherit;"&gt;&lt;font style="vertical-align: inherit;"&gt;尽管不时感到沮丧，但剩下的话题是我尽可能地保持文明。&lt;/font&gt;&lt;font style="vertical-align: inherit;"&gt;答复也可能是有关如何疏远新贡献者的数字指南。&lt;/font&gt;&lt;/font&gt;&lt;/p&gt;

&lt;p&gt;&lt;font style="vertical-align: inherit;"&gt;&lt;font style="vertical-align: inherit;"&gt;概括地说：在阅读Vim-dev邮件列表上的随机帖子后，我感到开发人员社区支离破碎。&lt;/font&gt;&lt;font style="vertical-align: inherit;"&gt;有些人希望Vim与&lt;/font&gt;&lt;/font&gt;&lt;a href="http://www.sublimetext.com/"&gt;&lt;font style="vertical-align: inherit;"&gt;&lt;font style="vertical-align: inherit;"&gt;Sublime Text&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style="vertical-align: inherit;"&gt;&lt;font style="vertical-align: inherit;"&gt;类似&lt;/font&gt;&lt;font style="vertical-align: inherit;"&gt;：为开发人员提供了一种灵活，可扩展的文本编辑器。&lt;/font&gt;&lt;font style="vertical-align: inherit;"&gt;有些人（包括&lt;/font&gt;&lt;/font&gt;&lt;a href="http://en.wikipedia.org/wiki/Benevolent_dictator_for_life"&gt;&lt;font style="vertical-align: inherit;"&gt;&lt;font style="vertical-align: inherit;"&gt;BDFL&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style="vertical-align: inherit;"&gt;&lt;font style="vertical-align: inherit;"&gt; Bram Moolenaar）担心Vim成为IDE。&lt;/font&gt;&lt;/font&gt;&lt;/p&gt;

&lt;h3 id="the-overly-cautious-dictator-for-life"&gt;&lt;font style="vertical-align: inherit;"&gt;&lt;font style="vertical-align: inherit;"&gt;对生活过于谨慎的独裁者&lt;/font&gt;&lt;/font&gt;&lt;/h3&gt;

&lt;p&gt;&lt;font style="vertical-align: inherit;"&gt;&lt;font style="vertical-align: inherit;"&gt;说到布拉姆·摩尔纳尔：他的合并标准是难以理解的。&lt;/font&gt;&lt;font style="vertical-align: inherit;"&gt;他忽略了一些补丁。&lt;/font&gt;&lt;font style="vertical-align: inherit;"&gt;一些，他攻击。&lt;/font&gt;&lt;font style="vertical-align: inherit;"&gt;其他人，他合并。&lt;/font&gt;&lt;/font&gt;&lt;/p&gt;

&lt;p&gt;&lt;font style="vertical-align: inherit;"&gt;&lt;font style="vertical-align: inherit;"&gt;再次查看&lt;/font&gt;&lt;/font&gt;&lt;a href="https://groups.google.com/d/msg/vim_dev/-4pqDJfHCsM/LkYNCpZjQ70J"&gt;&lt;font style="vertical-align: inherit;"&gt;&lt;font style="vertical-align: inherit;"&gt;Matt和我提交补丁的线程&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style="vertical-align: inherit;"&gt;&lt;font style="vertical-align: inherit;"&gt;。&lt;/font&gt;&lt;font style="vertical-align: inherit;"&gt;我们竭尽所能迎合布拉姆的每一次异想天开，但这是浪费时间。&lt;/font&gt;&lt;font style="vertical-align: inherit;"&gt;如果他立即告诉我们放弃，那对所有参与者来说都是一个更好的结果。&lt;/font&gt;&lt;font style="vertical-align: inherit;"&gt;取而代之的是，我们被寄予了希望，并努力前进，致力于一个不可能合并的补丁程序。&lt;/font&gt;&lt;/font&gt;&lt;/p&gt;

&lt;h3 id="the-alternative"&gt;&lt;font style="vertical-align: inherit;"&gt;&lt;font style="vertical-align: inherit;"&gt;另类&lt;/font&gt;&lt;/font&gt;&lt;/h3&gt;

&lt;p&gt;&lt;font style="vertical-align: inherit;"&gt;&lt;font style="vertical-align: inherit;"&gt;在我对Vim失望之后的几个月，&lt;/font&gt;&lt;/font&gt;&lt;a href="https://github.com/tarruda"&gt;&lt;font style="vertical-align: inherit;"&gt;&lt;font style="vertical-align: inherit;"&gt;Thiago de Arruda &lt;/font&gt;&lt;/font&gt;&lt;/a&gt; &lt;a href="https://groups.google.com/d/msg/vim_dev/QF7Bzh1YABU/02-YGr7_sCwJ"&gt;&lt;font style="vertical-align: inherit;"&gt;&lt;font style="vertical-align: inherit;"&gt;提交了一个类似的补丁&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style="vertical-align: inherit;"&gt;&lt;font style="vertical-align: inherit;"&gt;。&lt;/font&gt;&lt;font style="vertical-align: inherit;"&gt;它同样被拒绝了。&lt;/font&gt;&lt;font style="vertical-align: inherit;"&gt;但是与我不同，Thiago并没有放弃。&lt;/font&gt;&lt;font style="vertical-align: inherit;"&gt;他启动了&lt;/font&gt;&lt;/font&gt;&lt;a href="http://neovim.org/"&gt;&lt;font style="vertical-align: inherit;"&gt;&lt;font style="vertical-align: inherit;"&gt;NeoVim&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style="vertical-align: inherit;"&gt;&lt;font style="vertical-align: inherit;"&gt;并&lt;/font&gt;&lt;a href="http://neovim.org/"&gt;&lt;font style="vertical-align: inherit;"&gt;为此&lt;/font&gt;&lt;/a&gt;&lt;/font&gt;&lt;a href="https://www.bountysource.com/teams/neovim"&gt;&lt;font style="vertical-align: inherit;"&gt;&lt;font style="vertical-align: inherit;"&gt;创建了Bountysource&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style="vertical-align: inherit;"&gt;&lt;font style="vertical-align: inherit;"&gt;。&lt;/font&gt;&lt;/font&gt;&lt;/p&gt;

&lt;p&gt;&lt;font style="vertical-align: inherit;"&gt;&lt;font style="vertical-align: inherit;"&gt;Neovim正是它声称的那样。&lt;/font&gt;&lt;font style="vertical-align: inherit;"&gt;它解决了我与Vim有关的每个问题：插件API。&lt;/font&gt;&lt;font style="vertical-align: inherit;"&gt;代码库。&lt;/font&gt;&lt;font style="vertical-align: inherit;"&gt;社区。&lt;/font&gt;&lt;font style="vertical-align: inherit;"&gt;BDFL。&lt;/font&gt;&lt;/font&gt;&lt;/p&gt;

&lt;p&gt;&lt;font style="vertical-align: inherit;"&gt;&lt;font style="vertical-align: inherit;"&gt;Neovim的插件API与Vim向后兼容，但它也允许异步执行。&lt;/font&gt;&lt;font style="vertical-align: inherit;"&gt;用户已经制作了Vim无法拥有的插件。&lt;/font&gt;&lt;font style="vertical-align: inherit;"&gt;例如，&lt;/font&gt;&lt;/font&gt;&lt;a href="https://github.com/benekastah/neomake"&gt;&lt;font style="vertical-align: inherit;"&gt;&lt;font style="vertical-align: inherit;"&gt;Neomake&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style="vertical-align: inherit;"&gt;&lt;font style="vertical-align: inherit;"&gt;允许异步linters。&lt;/font&gt;&lt;font style="vertical-align: inherit;"&gt;仅此功能值得进行切换。&lt;/font&gt;&lt;/font&gt;&lt;/p&gt;

&lt;p&gt;&lt;font style="vertical-align: inherit;"&gt;&lt;font style="vertical-align: inherit;"&gt;Neovim的代码库是一个重大改进。&lt;/font&gt;&lt;font style="vertical-align: inherit;"&gt;他们已经&lt;/font&gt;&lt;/font&gt;&lt;a href="https://github.com/neovim/neovim/wiki/Porting-OS-layer-to-libuv"&gt;&lt;font style="vertical-align: inherit;"&gt;&lt;font style="vertical-align: inherit;"&gt;用libuv替换了许多有针对性的，特定于平台的代码&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style="vertical-align: inherit;"&gt;&lt;font style="vertical-align: inherit;"&gt;。&lt;/font&gt;&lt;font style="vertical-align: inherit;"&gt;他们解决了缩进，样式和错误文件编码的问题。&lt;/font&gt;&lt;font style="vertical-align: inherit;"&gt;他们已删除了古老的未使用平台的旧代码。&lt;/font&gt;&lt;font style="vertical-align: inherit;"&gt;他们大大提高了测试质量和覆盖范围。&lt;/font&gt;&lt;font style="vertical-align: inherit;"&gt;仍有很多工作要做，但是区别已经比世界更好。&lt;/font&gt;&lt;/font&gt;&lt;/p&gt;

&lt;p&gt;&lt;font style="vertical-align: inherit;"&gt;&lt;font style="vertical-align: inherit;"&gt;Neovim的开发社区非常出色。&lt;/font&gt;&lt;font style="vertical-align: inherit;"&gt;他们回应问题。&lt;/font&gt;&lt;font style="vertical-align: inherit;"&gt;它们合并拉取请求。&lt;/font&gt;&lt;font style="vertical-align: inherit;"&gt;他们提供质量反馈。&lt;/font&gt;&lt;font style="vertical-align: inherit;"&gt;而且最重要的是，它们对新手很好。&lt;/font&gt;&lt;/font&gt;&lt;/p&gt;

&lt;p&gt;&lt;font style="vertical-align: inherit;"&gt;&lt;font style="vertical-align: inherit;"&gt;实际上，它们对每个人都很好。&lt;/font&gt;&lt;font style="vertical-align: inherit;"&gt;主要的开发团队对Bram Moolenaar毫无敌意。&lt;/font&gt;&lt;font style="vertical-align: inherit;"&gt;他们认识到Vim的失败，但是他们并不需要批评它。&lt;/font&gt;&lt;/font&gt;&lt;/p&gt;

&lt;p&gt;&lt;font style="vertical-align: inherit;"&gt;&lt;font style="vertical-align: inherit;"&gt;Neovim唯一缺少的是标记的稳定版本。&lt;/font&gt;&lt;font style="vertical-align: inherit;"&gt;但无需等待。&lt;/font&gt;&lt;font style="vertical-align: inherit;"&gt;现在，您可以克隆Neovim并对其进行编译，并拥有可与所有现有插件一起使用的编辑器。&lt;/font&gt;&lt;/font&gt;&lt;/p&gt;

&lt;p&gt;&lt;font style="vertical-align: inherit;"&gt;&lt;font style="vertical-align: inherit;"&gt;如果您是Vim用户，强烈建议切换到Neovim。&lt;/font&gt;&lt;font style="vertical-align: inherit;"&gt;这是您惯用的Vim，但是使用插件却从未想过要。&lt;/font&gt;&lt;/font&gt;&lt;/p&gt;


&lt;p&gt;&lt;font style="vertical-align: inherit;"&gt;&lt;font style="vertical-align: inherit;"&gt;感谢&lt;/font&gt;&lt;/font&gt;&lt;a href="http://bjorn.tipling.com/"&gt;&lt;font style="vertical-align: inherit;"&gt;&lt;font style="vertical-align: inherit;"&gt;Bjorn Tipling&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style="vertical-align: inherit;"&gt;&lt;font style="vertical-align: inherit;"&gt;和&lt;/font&gt;&lt;/font&gt;&lt;a href="https://github.com/kans"&gt;&lt;font style="vertical-align: inherit;"&gt;&lt;font style="vertical-align: inherit;"&gt;Matt Kaniaris&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style="vertical-align: inherit;"&gt;&lt;font style="vertical-align: inherit;"&gt;对本文的帮助。&lt;/font&gt;&lt;/font&gt;&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;&lt;span id="ref_1"&gt;&lt;/span&gt;&lt;a href="https://en.wikipedia.org/wiki/MS-DOS_Editor"&gt;&lt;font style="vertical-align: inherit;"&gt;&lt;font style="vertical-align: inherit;"&gt;编辑&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style="vertical-align: inherit;"&gt;&lt;font style="vertical-align: inherit;"&gt;和&lt;/font&gt;&lt;/font&gt;&lt;a href="http://en.wikipedia.org/wiki/Pico_%28text_editor%29"&gt;&lt;font style="vertical-align: inherit;"&gt;&lt;font style="vertical-align: inherit;"&gt;微微&lt;/font&gt;&lt;/font&gt;&lt;/a&gt;&lt;font style="vertical-align: inherit;"&gt;&lt;font style="vertical-align: inherit;"&gt;不计算在内。&lt;/font&gt;&lt;/font&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;/div&gt;
&lt;/article&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align="center"&gt;转自：https://geoff.greer.fm/2015/01/15/why-neovim-is-better-than-vim/&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;但是这篇文章发表在15 Jan 2015，现在已经过去五年了，在此期间vim也做了大版本的更新，没有就文中的和现在的进行详细的对比，但就得到的资料来看应该很多问题是解决了的，vim有压力才会有动力&lt;/p&gt;</content><category term="Tools"></category><category term="linux"></category></entry><entry><title>youtube download</title><link href="https://aiyoyo20.github.io/articles/youtube-download.html" rel="alternate"></link><published>2020-09-03T10:20:00+08:00</published><updated>2020-09-03T10:20:00+08:00</updated><author><name>FING</name></author><id>tag:aiyoyo20.github.io,2020-09-03:/articles/youtube-download.html</id><summary type="html">&lt;h1&gt;起因：&lt;/h1&gt;
&lt;p&gt;自己有存视频的习惯，因为网上的资源总会因为一些例如，服务器被攻击，博主进行了删除，因种种原因不符合平台要求等等人为的的或者不可抗拒的原因造成自己收藏的资源失效，为了防止这些情况的发生，所以往往会下载到本地，进行归类处理。&lt;/p&gt;
&lt;p&gt;以往自己下载的视频都是都是零零散散的，也就使用了最简单的方法，油猴脚本或者插件，忘记使用的插件叫什么了，前一阵子弹出因为被官方制裁所以停止提供服务就给删除了，脚本挺多的可以自己找找看，但无论是脚本还是插件，在使用的时候都有同样的问题，在下载高清晰度的视频时，由于官方给音、频分离了，所以要想下载的话只能分开下载再去合成。&lt;/p&gt;
&lt;p&gt;今天自己下载的是一个博主的所有视频，量大，不想去慢慢依次打开每个视频去逐一下载，在网上搜索了，基本都是通过第三方网站，这个速度基本都不是很理想；或者是软件，分为免费的和付费的，免费的有量的限制，付费的大可不必，因为打开软件在很长一段时间内可能就这一次。&lt;/p&gt;
&lt;p&gt;最后发现了youtube-dl，python 编写的，运行使用也不是很复杂，但可能没有或者是极少使用命令行的小伙伴来说比较头疼&lt;/p&gt;
&lt;h1&gt;安装及使用：&lt;/h1&gt;
&lt;p&gt;项目地址&lt;a href="https://github.com/ytdl-org/youtube-dl"&gt;https://github.com/ytdl-org/youtube-dl&lt;/a&gt;
具体的安装方式去看挑选一个适合且可用的即可，我在这使用的是 pip 安装&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;pip3 install …&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</summary><content type="html">&lt;h1&gt;起因：&lt;/h1&gt;
&lt;p&gt;自己有存视频的习惯，因为网上的资源总会因为一些例如，服务器被攻击，博主进行了删除，因种种原因不符合平台要求等等人为的的或者不可抗拒的原因造成自己收藏的资源失效，为了防止这些情况的发生，所以往往会下载到本地，进行归类处理。&lt;/p&gt;
&lt;p&gt;以往自己下载的视频都是都是零零散散的，也就使用了最简单的方法，油猴脚本或者插件，忘记使用的插件叫什么了，前一阵子弹出因为被官方制裁所以停止提供服务就给删除了，脚本挺多的可以自己找找看，但无论是脚本还是插件，在使用的时候都有同样的问题，在下载高清晰度的视频时，由于官方给音、频分离了，所以要想下载的话只能分开下载再去合成。&lt;/p&gt;
&lt;p&gt;今天自己下载的是一个博主的所有视频，量大，不想去慢慢依次打开每个视频去逐一下载，在网上搜索了，基本都是通过第三方网站，这个速度基本都不是很理想；或者是软件，分为免费的和付费的，免费的有量的限制，付费的大可不必，因为打开软件在很长一段时间内可能就这一次。&lt;/p&gt;
&lt;p&gt;最后发现了youtube-dl，python 编写的，运行使用也不是很复杂，但可能没有或者是极少使用命令行的小伙伴来说比较头疼&lt;/p&gt;
&lt;h1&gt;安装及使用：&lt;/h1&gt;
&lt;p&gt;项目地址&lt;a href="https://github.com/ytdl-org/youtube-dl"&gt;https://github.com/ytdl-org/youtube-dl&lt;/a&gt;
具体的安装方式去看挑选一个适合且可用的即可，我在这使用的是 pip 安装&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;pip3 install youtube-dl
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;最简单的使用
&lt;code&gt;youtube-dl url&lt;/code&gt;即可下载，但是默认下载的是最高画质，这时候可以使用 -F 参数查看可供下载的格式，&lt;/p&gt;</content><category term="Tools"></category><category term="linux"></category></entry></feed>